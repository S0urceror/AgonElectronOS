Zilog eZ80 Macro Assembler Version 4.3 (19073001)24-Jun-23     07:37:03     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optspeed -noreduceopt -nopadbranc
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\src_fatfs\diskio.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",566
                           A     9    .DEFINE "fs_type"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "pdrv"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "n_fats"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "wflag"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "fsi_flag"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "id"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 13
                           A    38    .ENDEF
                           A    39    .DEFINE "n_rootdir"
                           A    40    .VALUE 7
                           A    41    .CLASS 8
                           A    42    .TYPE 13
                           A    43    .ENDEF
                           A    44    .DEFINE "csize"
                           A    45    .VALUE 9
                           A    46    .CLASS 8
                           A    47    .TYPE 13
                           A    48    .ENDEF
                           A    49    .DEFINE "lfnbuf"
                           A    50    .VALUE 11
                           A    51    .CLASS 8
                           A    52    .TYPE 45
                           A    53    .ENDEF
                           A    54    .DEFINE "last_clst"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 15
                           A    58    .ENDEF
                           A    59    .DEFINE "free_clst"
                           A    60    .VALUE 18
                           A    61    .CLASS 8
                           A    62    .TYPE 15
                           A    63    .ENDEF
                           A    64    .DEFINE "cdir"
                           A    65    .VALUE 22
                           A    66    .CLASS 8
                           A    67    .TYPE 15
                           A    68    .ENDEF
                           A    69    .DEFINE "n_fatent"
                           A    70    .VALUE 26
                           A    71    .CLASS 8
                           A    72    .TYPE 15
                           A    73    .ENDEF
                           A    74    .DEFINE "fsize"
                           A    75    .VALUE 30
                           A    76    .CLASS 8
                           A    77    .TYPE 15
                           A    78    .ENDEF
                           A    79    .DEFINE "volbase"
                           A    80    .VALUE 34
                           A    81    .CLASS 8
                           A    82    .TYPE 15
                           A    83    .ENDEF
                           A    84    .DEFINE "fatbase"
                           A    85    .VALUE 38
                           A    86    .CLASS 8
                           A    87    .TYPE 15
                           A    88    .ENDEF
                           A    89    .DEFINE "dirbase"
                           A    90    .VALUE 42
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "database"
                           A    95    .VALUE 46
                           A    96    .CLASS 8
                           A    97    .TYPE 15
                           A    98    .ENDEF
                           A    99    .DEFINE "winsect"
                           A   100    .VALUE 50
                           A   101    .CLASS 8
                           A   102    .TYPE 15
                           A   103    .ENDEF
                           A   104    .DEFINE "win"
                           A   105    .VALUE 54
                           A   106    .CLASS 8
                           A   107    .DIM 512
                           A   108    .TYPE 108
                           A   109    .ENDEF
                           A   110    .ENDREC "NONAME0"
                           A   111    .BEGREC "NONAME1",15
                           A   112    .DEFINE "fs"
                           A   113    .VALUE 0
                           A   114    .CLASS 8
                           A   115    .TAG "NONAME0"
                           A   116    .TYPE 40
                           A   117    .ENDEF
                           A   118    .DEFINE "id"
                           A   119    .VALUE 3
                           A   120    .CLASS 8
                           A   121    .TYPE 13
                           A   122    .ENDEF
                           A   123    .DEFINE "attr"
                           A   124    .VALUE 5
                           A   125    .CLASS 8
                           A   126    .TYPE 12
                           A   127    .ENDEF
                           A   128    .DEFINE "stat"
                           A   129    .VALUE 6
                           A   130    .CLASS 8
                           A   131    .TYPE 12
                           A   132    .ENDEF
                           A   133    .DEFINE "sclust"
                           A   134    .VALUE 7
                           A   135    .CLASS 8
                           A   136    .TYPE 15
                           A   137    .ENDEF
                           A   138    .DEFINE "objsize"
                           A   139    .VALUE 11
                           A   140    .CLASS 8
                           A   141    .TYPE 15
                           A   142    .ENDEF
                           A   143    .ENDREC "NONAME1"
                           A   144    .BEGREC "NONAME2",36
                           A   145    .DEFINE "obj"
                           A   146    .VALUE 0
                           A   147    .CLASS 8
                           A   148    .TAG "NONAME1"
                           A   149    .TYPE 8
                           A   150    .ENDEF
                           A   151    .DEFINE "flag"
                           A   152    .VALUE 15
                           A   153    .CLASS 8
                           A   154    .TYPE 12
                           A   155    .ENDEF
                           A   156    .DEFINE "err"
                           A   157    .VALUE 16
                           A   158    .CLASS 8
                           A   159    .TYPE 12
                           A   160    .ENDEF
                           A   161    .DEFINE "fptr"
                           A   162    .VALUE 17
                           A   163    .CLASS 8
                           A   164    .TYPE 15
                           A   165    .ENDEF
                           A   166    .DEFINE "clust"
                           A   167    .VALUE 21
                           A   168    .CLASS 8
                           A   169    .TYPE 15
                           A   170    .ENDEF
                           A   171    .DEFINE "sect"
                           A   172    .VALUE 25
                           A   173    .CLASS 8
                           A   174    .TYPE 15
                           A   175    .ENDEF
                           A   176    .DEFINE "dir_sect"
                           A   177    .VALUE 29
                           A   178    .CLASS 8
                           A   179    .TYPE 15
                           A   180    .ENDEF
                           A   181    .DEFINE "dir_ptr"
                           A   182    .VALUE 33
                           A   183    .CLASS 8
                           A   184    .TYPE 44
                           A   185    .ENDEF
                           A   186    .ENDREC "NONAME2"
                           A   187    .BEGREC "NONAME3",46
                           A   188    .DEFINE "obj"
                           A   189    .VALUE 0
                           A   190    .CLASS 8
                           A   191    .TAG "NONAME1"
                           A   192    .TYPE 8
                           A   193    .ENDEF
                           A   194    .DEFINE "dptr"
                           A   195    .VALUE 15
                           A   196    .CLASS 8
                           A   197    .TYPE 15
                           A   198    .ENDEF
                           A   199    .DEFINE "clust"
                           A   200    .VALUE 19
                           A   201    .CLASS 8
                           A   202    .TYPE 15
                           A   203    .ENDEF
                           A   204    .DEFINE "sect"
                           A   205    .VALUE 23
                           A   206    .CLASS 8
                           A   207    .TYPE 15
                           A   208    .ENDEF
                           A   209    .DEFINE "dir"
                           A   210    .VALUE 27
                           A   211    .CLASS 8
                           A   212    .TYPE 44
                           A   213    .ENDEF
                           A   214    .DEFINE "fn"
                           A   215    .VALUE 30
                           A   216    .CLASS 8
                           A   217    .DIM 12
                           A   218    .TYPE 108
                           A   219    .ENDEF
                           A   220    .DEFINE "blk_ofs"
                           A   221    .VALUE 42
                           A   222    .CLASS 8
                           A   223    .TYPE 15
                           A   224    .ENDEF
                           A   225    .ENDREC "NONAME3"
                           A   226    .BEGREC "NONAME4",278
                           A   227    .DEFINE "fsize"
                           A   228    .VALUE 0
                           A   229    .CLASS 8
                           A   230    .TYPE 15
                           A   231    .ENDEF
                           A   232    .DEFINE "fdate"
                           A   233    .VALUE 4
                           A   234    .CLASS 8
                           A   235    .TYPE 13
                           A   236    .ENDEF
                           A   237    .DEFINE "ftime"
                           A   238    .VALUE 6
                           A   239    .CLASS 8
                           A   240    .TYPE 13
                           A   241    .ENDEF
                           A   242    .DEFINE "fattrib"
                           A   243    .VALUE 8
                           A   244    .CLASS 8
                           A   245    .TYPE 12
                           A   246    .ENDEF
                           A   247    .DEFINE "altname"
                           A   248    .VALUE 9
                           A   249    .CLASS 8
                           A   250    .DIM 13
                           A   251    .TYPE 98
                           A   252    .ENDEF
                           A   253    .DEFINE "fname"
                           A   254    .VALUE 22
                           A   255    .CLASS 8
                           A   256    .DIM 256
                           A   257    .TYPE 98
                           A   258    .ENDEF
                           A   259    .ENDREC "NONAME4"
                           A   260    .BEGREC "NONAME5",12
                           A   261    .DEFINE "fmt"
                           A   262    .VALUE 0
                           A   263    .CLASS 8
                           A   264    .TYPE 12
                           A   265    .ENDEF
                           A   266    .DEFINE "n_fat"
                           A   267    .VALUE 1
                           A   268    .CLASS 8
                           A   269    .TYPE 12
                           A   270    .ENDEF
                           A   271    .DEFINE "align"
                           A   272    .VALUE 2
                           A   273    .CLASS 8
                           A   274    .TYPE 14
                           A   275    .ENDEF
                           A   276    .DEFINE "n_root"
                           A   277    .VALUE 5
                           A   278    .CLASS 8
                           A   279    .TYPE 14
                           A   280    .ENDEF
                           A   281    .DEFINE "au_size"
                           A   282    .VALUE 8
                           A   283    .CLASS 8
                           A   284    .TYPE 15
                           A   285    .ENDEF
                           A   286    .ENDREC "NONAME5"
                           A   287    ;    1	/*
                           A   288    ;    2	 * Title:			AGON Low level disk
                           A   289    ;    3	 * Modified By:		Dean Belfield
                           A   290    ;    4	 * Created:			19/06/2022
                           A   291    ;    5	 * Last Updated:	15/03/2023
                           A   292    ;    6	 *
                           A   293    ;    7	 * Credits:
                           A   294    ;    8	 * Based upon a skeleton framework (C)C
                           A   295    ;    9	 *
                           A   296    ;   10	 * Modinfo:
                           A   297    ;   11	 * 11/07/2023:		Tweaked to compile 
                           A   298    ;   12	 * 15/03/2023:		Added get_fattime
                           A   299    ;   13	 */
                           A   300    ;   14	
                           A   301    ;   15	#include "ff.h"			// Obtains inte
                           A   302    ;   16	#include "diskio.h"		// Declarations
                           A   303    ;   17	#include "sd.h"			// Physical SD 
                           A   304    ;   18	
                           A   305    ;   19	extern BYTE rtc;		// In globals.a
                           A   306    ;   20	
                           A   307    ;   21	// Get Drive Status (Not implemented in
                           A   308    ;   22	// Parameters:
                           A   309    ;   23	// - pdrv: Physical drive number to ide
                           A   310    ;   24	// Returns:
                           A   311    ;   25	// - DSTATUS
                           A   312    ;   26	// 
                           A   313    ;   27	DSTATUS disk_status(BYTE pdrv) {
000000                     A   314    _disk_status:
                           A   315    .DEFINE "_disk_status"
                           A   316    
                           A   317    .VALUE _disk_status
                           A   318    
                           A   319    .CLASS 2
                           A   320    
                           A   321    .TYPE 76
                           A   322    
                           A   323    .ENDEF
                           A   324    
                           A   325    .BEGFUNC "disk_status",27,"_disk_status"
                           A   326    
                           A   327    .LINE 27
                           A   328    
                           A   329    .DEFINE "pdrv"
                           A   330    
                           A   331    .CLASS 65
                           A   332    
                           A   333    .VALUE 6
                           A   334    
                           A   335    .TYPE 12
                           A   336    
                           A   337    .ENDEF
                           A   338    
000000 DDE5                A   339    	PUSH	IX
000002 DD210000 00         A   340    	LD	IX,0
000007 DD39                A   341    	ADD	IX,SP
                           A   342    ;   28		return 0;
                           A   343    .LINE 28
                           A   344    
000009 AF                  A   345    	XOR	A,A
                           A   346    ;   29	}
                           A   347    .LINE 29
                           A   348    
00000A DDF9                A   349    	LD	SP,IX
00000C DDE1                A   350    	POP	IX
00000E C9                  A   351    	RET	
                           A   352    
                           A   353    
                           A   354    ;**************************** _disk_status ****
                           A   355    ;Name                         Addr/Register   S
                           A   356    ;pdrv                                  IX+6    
                           A   357    
                           A   358    
                           A   359    ; Stack Frame Size: 9 (bytes)
                           A   360    ;       Spill Code: 0 (instruction)
                           A   361    
                           A   362    
                           A   363    .ENDFUNC "disk_status",29,"_disk_status"
                           A   364    ;   30	
                           A   365    ;   31	// Initialise a drive
                           A   366    ;   32	// Parameters:
                           A   367    ;   33	// - pdrv: Physical drive number to ide
                           A   368    ;   34	// Returns:
                           A   369    ;   35	// - DSTATUS
                           A   370    ;   36	//
                           A   371    ;   37	DSTATUS disk_initialize(BYTE pdrv) {
00000F                     A   372    _disk_initialize:
                           A   373    .DEFINE "_disk_initialize"
                           A   374    
                           A   375    .VALUE _disk_initialize
                           A   376    
                           A   377    .CLASS 2
                           A   378    
                           A   379    .TYPE 76
                           A   380    
                           A   381    .ENDEF
                           A   382    
                           A   383    .BEGFUNC "disk_initialize",37,"_disk_initialize
                           A   384    
                           A   385    .LINE 37
                           A   386    
                           A   387    .DEFINE "pdrv"
                           A   388    
                           A   389    .CLASS 65
                           A   390    
                           A   391    .VALUE 6
                           A   392    
                           A   393    .TYPE 12
                           A   394    
                           A   395    .ENDEF
                           A   396    
                           A   397    .DEFINE "err"
                           A   398    
                           A   399    .CLASS 65
                           A   400    
                           A   401    .VALUE -1
                           A   402    
                           A   403    .TYPE 12
                           A   404    
                           A   405    .ENDEF
                           A   406    
00000F DDE5                A   407    	PUSH	IX
000011 DD210000 00         A   408    	LD	IX,0
000016 DD39                A   409    	ADD	IX,SP
000018 3B                  A   410    	DEC	SP
                           A   411    ;   38		BYTE err = SD_init();
                           A   412    .LINE 38
                           A   413    
000019 CD 00 00 00         A   414    	CALL	_SD_init
00001D DD77FF              A   415    	LD	(IX+%FFFFFFFF),A
                           A   416    ;   39		if(err == SD_SUCCESS) {
                           A   417    .LINE 39
                           A   418    
000020 B7                  A   419    	OR	A,A
000021 20 03               A   420    	JR	NZ,L_2
                           A   421    ;   40			return RES_OK;
                           A   422    .LINE 40
                           A   423    
000023 AF                  A   424    	XOR	A,A
000024 18 02               A   425    	JR	L_3
                           A   426    ;   41		}
000026                     A   427    L_2:
                           A   428    .LINE 41
                           A   429    
                           A   430    ;   42		return RES_ERROR;
                           A   431    .LINE 42
                           A   432    
000026 3E01                A   433    	LD	A,%1
                           A   434    ;   43	}
000028                     A   435    L_3:
                           A   436    .LINE 43
                           A   437    
000028 DDF9                A   438    	LD	SP,IX
00002A DDE1                A   439    	POP	IX
00002C C9                  A   440    	RET	
                           A   441    
                           A   442    
                           A   443    ;**************************** _disk_initialize 
                           A   444    ;Name                         Addr/Register   S
                           A   445    ;_SD_init                            IMPORT  --
                           A   446    ;err                                   IX-1    
                           A   447    ;pdrv                                  IX+6    
                           A   448    
                           A   449    
                           A   450    ; Stack Frame Size: 10 (bytes)
                           A   451    ;       Spill Code: 0 (instruction)
                           A   452    
                           A   453    
                           A   454    .ENDFUNC "disk_initialize",43,"_disk_initialize
                           A   455    ;   44	
                           A   456    ;   45	// Read Sector(s)
                           A   457    ;   46	// Parameters:
                           A   458    ;   47	// - pdrv: Physical drive nmuber to ide
                           A   459    ;   48	// - buff: Data buffer to store read da
                           A   460    ;   49	// - sector: Start sector in LBA
                           A   461    ;   50	// - count: Number of sectors to read
                           A   462    ;   51	// Returns:
                           A   463    ;   52	// - DSTATUS
                           A   464    ;   53	//
                           A   465    ;   54	DRESULT disk_read(BYTE pdrv, BYTE *buff
00002D                     A   466    _disk_read:
                           A   467    .DEFINE "_disk_read"
                           A   468    
                           A   469    .VALUE _disk_read
                           A   470    
                           A   471    .CLASS 2
                           A   472    
                           A   473    .TYPE 68
                           A   474    
                           A   475    .ENDEF
                           A   476    
                           A   477    .BEGFUNC "disk_read",54,"_disk_read"
                           A   478    
                           A   479    .LINE 54
                           A   480    
                           A   481    .DEFINE "pdrv"
                           A   482    
                           A   483    .CLASS 65
                           A   484    
                           A   485    .VALUE 6
                           A   486    
                           A   487    .TYPE 12
                           A   488    
                           A   489    .ENDEF
                           A   490    
                           A   491    .DEFINE "buff"
                           A   492    
                           A   493    .CLASS 65
                           A   494    
                           A   495    .VALUE 9
                           A   496    
                           A   497    .TYPE 44
                           A   498    
                           A   499    .ENDEF
                           A   500    
                           A   501    .DEFINE "sector"
                           A   502    
                           A   503    .CLASS 65
                           A   504    
                           A   505    .VALUE 12
                           A   506    
                           A   507    .TYPE 15
                           A   508    
                           A   509    .ENDEF
                           A   510    
                           A   511    .DEFINE "count"
                           A   512    
                           A   513    .CLASS 65
                           A   514    
                           A   515    .VALUE 18
                           A   516    
                           A   517    .TYPE 14
                           A   518    
                           A   519    .ENDEF
                           A   520    
                           A   521    .DEFINE "err"
                           A   522    
                           A   523    .CLASS 65
                           A   524    
                           A   525    .VALUE -1
                           A   526    
                           A   527    .TYPE 12
                           A   528    
                           A   529    .ENDEF
                           A   530    
00002D DDE5                A   531    	PUSH	IX
00002F DD210000 00         A   532    	LD	IX,0
000034 DD39                A   533    	ADD	IX,SP
000036 3B                  A   534    	DEC	SP
                           A   535    ;   55		BYTE err = SD_readBlocks(sector, bu
                           A   536    .LINE 55
                           A   537    
000037 DD0712              A   538    	LD	BC,(IX+%12)
00003A C5                  A   539    	PUSH	BC
00003B DD0709              A   540    	LD	BC,(IX+%9)
00003E C5                  A   541    	PUSH	BC
00003F DD4E0F              A   542    	LD	C,(IX+%F)
000042 0600                A   543    	LD	B,%0
000044 C5                  A   544    	PUSH	BC
000045 DD070C              A   545    	LD	BC,(IX+%C)
000048 C5                  A   546    	PUSH	BC
000049 CD 00 00 00         A   547    	CALL	_SD_readBlocks
00004D C1                  A   548    	POP	BC
00004E C1                  A   549    	POP	BC
00004F C1                  A   550    	POP	BC
000050 C1                  A   551    	POP	BC
000051 DD77FF              A   552    	LD	(IX+%FFFFFFFF),A
                           A   553    ;   56		if(err == SD_SUCCESS) {
                           A   554    .LINE 56
                           A   555    
000054 B7                  A   556    	OR	A,A
000055 20 05               A   557    	JR	NZ,L_5
                           A   558    ;   57			return RES_OK;
                           A   559    .LINE 57
                           A   560    
000057 B7                  A   561    	OR	A,A
000058 ED62                A   562    	SBC	HL,HL
00005A 18 04               A   563    	JR	L_6
                           A   564    ;   58		}
00005C                     A   565    L_5:
                           A   566    .LINE 58
                           A   567    
                           A   568    ;   59		return RES_ERROR;
                           A   569    .LINE 59
                           A   570    
00005C 21010000            A   571    	LD	HL,1
                           A   572    ;   60	}
000060                     A   573    L_6:
                           A   574    .LINE 60
                           A   575    
000060 DDF9                A   576    	LD	SP,IX
000062 DDE1                A   577    	POP	IX
000064 C9                  A   578    	RET	
                           A   579    
                           A   580    
                           A   581    ;**************************** _disk_read ******
                           A   582    ;Name                         Addr/Register   S
                           A   583    ;_SD_readBlocks                      IMPORT  --
                           A   584    ;err                                   IX-1    
                           A   585    ;count                                IX+18    
                           A   586    ;sector                               IX+12    
                           A   587    ;buff                                  IX+9    
                           A   588    ;pdrv                                  IX+6    
                           A   589    
                           A   590    
                           A   591    ; Stack Frame Size: 22 (bytes)
                           A   592    ;       Spill Code: 0 (instruction)
                           A   593    
                           A   594    
                           A   595    .ENDFUNC "disk_read",60,"_disk_read"
                           A   596    ;   61	
                           A   597    ;   62	#if FF_FS_READONLY == 0
                           A   598    ;   63	
                           A   599    ;   64	// Write Sector(s)
                           A   600    ;   65	// Parameters:
                           A   601    ;   66	// - pdrv: Physical drive nmuber to ide
                           A   602    ;   67	// - buff: Data to be written
                           A   603    ;   68	// - sector: Start sector in LBA
                           A   604    ;   69	// - count: Number of sectors to write
                           A   605    ;   70	// Returns:
                           A   606    ;   71	// - DSTATUS
                           A   607    ;   72	//
                           A   608    ;   73	DRESULT disk_write(BYTE pdrv, const BYT
000065                     A   609    _disk_write:
                           A   610    .DEFINE "_disk_write"
                           A   611    
                           A   612    .VALUE _disk_write
                           A   613    
                           A   614    .CLASS 2
                           A   615    
                           A   616    .TYPE 68
                           A   617    
                           A   618    .ENDEF
                           A   619    
                           A   620    .BEGFUNC "disk_write",73,"_disk_write"
                           A   621    
                           A   622    .LINE 73
                           A   623    
                           A   624    .DEFINE "pdrv"
                           A   625    
                           A   626    .CLASS 65
                           A   627    
                           A   628    .VALUE 6
                           A   629    
                           A   630    .TYPE 12
                           A   631    
                           A   632    .ENDEF
                           A   633    
                           A   634    .DEFINE "buff"
                           A   635    
                           A   636    .CLASS 65
                           A   637    
                           A   638    .VALUE 9
                           A   639    
                           A   640    .TYPE 204
                           A   641    
                           A   642    .ENDEF
                           A   643    
                           A   644    .DEFINE "sector"
                           A   645    
                           A   646    .CLASS 65
                           A   647    
                           A   648    .VALUE 12
                           A   649    
                           A   650    .TYPE 15
                           A   651    
                           A   652    .ENDEF
                           A   653    
                           A   654    .DEFINE "count"
                           A   655    
                           A   656    .CLASS 65
                           A   657    
                           A   658    .VALUE 18
                           A   659    
                           A   660    .TYPE 14
                           A   661    
                           A   662    .ENDEF
                           A   663    
                           A   664    .DEFINE "err"
                           A   665    
                           A   666    .CLASS 65
                           A   667    
                           A   668    .VALUE -1
                           A   669    
                           A   670    .TYPE 12
                           A   671    
                           A   672    .ENDEF
                           A   673    
000065 DDE5                A   674    	PUSH	IX
000067 DD210000 00         A   675    	LD	IX,0
00006C DD39                A   676    	ADD	IX,SP
00006E 3B                  A   677    	DEC	SP
                           A   678    ;   74		BYTE err = SD_writeBlocks(sector, b
                           A   679    .LINE 74
                           A   680    
00006F DD0712              A   681    	LD	BC,(IX+%12)
000072 C5                  A   682    	PUSH	BC
000073 DD0709              A   683    	LD	BC,(IX+%9)
000076 C5                  A   684    	PUSH	BC
000077 DD4E0F              A   685    	LD	C,(IX+%F)
00007A 0600                A   686    	LD	B,%0
00007C C5                  A   687    	PUSH	BC
00007D DD070C              A   688    	LD	BC,(IX+%C)
000080 C5                  A   689    	PUSH	BC
000081 CD 00 00 00         A   690    	CALL	_SD_writeBlocks
000085 C1                  A   691    	POP	BC
000086 C1                  A   692    	POP	BC
000087 C1                  A   693    	POP	BC
000088 C1                  A   694    	POP	BC
000089 DD77FF              A   695    	LD	(IX+%FFFFFFFF),A
                           A   696    ;   75		if(err == SD_SUCCESS) {
                           A   697    .LINE 75
                           A   698    
00008C B7                  A   699    	OR	A,A
00008D 20 05               A   700    	JR	NZ,L_8
                           A   701    ;   76			return RES_OK;
                           A   702    .LINE 76
                           A   703    
00008F B7                  A   704    	OR	A,A
000090 ED62                A   705    	SBC	HL,HL
000092 18 04               A   706    	JR	L_9
                           A   707    ;   77		}
000094                     A   708    L_8:
                           A   709    .LINE 77
                           A   710    
                           A   711    ;   78		
                           A   712    ;   79		return RES_ERROR;
                           A   713    .LINE 79
                           A   714    
000094 21010000            A   715    	LD	HL,1
                           A   716    ;   80	}
000098                     A   717    L_9:
                           A   718    .LINE 80
                           A   719    
000098 DDF9                A   720    	LD	SP,IX
00009A DDE1                A   721    	POP	IX
00009C C9                  A   722    	RET	
                           A   723    
                           A   724    
                           A   725    ;**************************** _disk_write *****
                           A   726    ;Name                         Addr/Register   S
                           A   727    ;_SD_writeBlocks                     IMPORT  --
                           A   728    ;err                                   IX-1    
                           A   729    ;count                                IX+18    
                           A   730    ;sector                               IX+12    
                           A   731    ;buff                                  IX+9    
                           A   732    ;pdrv                                  IX+6    
                           A   733    
                           A   734    
                           A   735    ; Stack Frame Size: 22 (bytes)
                           A   736    ;       Spill Code: 0 (instruction)
                           A   737    
                           A   738    
                           A   739    .ENDFUNC "disk_write",80,"_disk_write"
                           A   740    ;   81	
                           A   741    ;   82	#endif
                           A   742    ;   83	
                           A   743    ;   84	// Disk I/O Control (Not implemented in
                           A   744    ;   85	// Parameters:
                           A   745    ;   86	// - pdrv: Physical drive nmuber (0..)
                           A   746    ;   87	// - cmd: Control code
                           A   747    ;   88	// - buff: Buffer to send/receive contr
                           A   748    ;   89	// Returns:
                           A   749    ;   90	// - DSTATUS
                           A   750    ;   91	//
                           A   751    ;   92	DRESULT disk_ioctl(BYTE pdrv, BYTE cmd,
00009D                     A   752    _disk_ioctl:
                           A   753    .DEFINE "_disk_ioctl"
                           A   754    
                           A   755    .VALUE _disk_ioctl
                           A   756    
                           A   757    .CLASS 2
                           A   758    
                           A   759    .TYPE 68
                           A   760    
                           A   761    .ENDEF
                           A   762    
                           A   763    .BEGFUNC "disk_ioctl",92,"_disk_ioctl"
                           A   764    
                           A   765    .LINE 92
                           A   766    
                           A   767    .DEFINE "pdrv"
                           A   768    
                           A   769    .CLASS 65
                           A   770    
                           A   771    .VALUE 6
                           A   772    
                           A   773    .TYPE 12
                           A   774    
                           A   775    .ENDEF
                           A   776    
                           A   777    .DEFINE "cmd"
                           A   778    
                           A   779    .CLASS 65
                           A   780    
                           A   781    .VALUE 9
                           A   782    
                           A   783    .TYPE 12
                           A   784    
                           A   785    .ENDEF
                           A   786    
                           A   787    .DEFINE "buff"
                           A   788    
                           A   789    .CLASS 65
                           A   790    
                           A   791    .VALUE 12
                           A   792    
                           A   793    .TYPE 33
                           A   794    
                           A   795    .ENDEF
                           A   796    
00009D DDE5                A   797    	PUSH	IX
00009F DD210000 00         A   798    	LD	IX,0
0000A4 DD39                A   799    	ADD	IX,SP
                           A   800    ;   93		return RES_OK;
                           A   801    .LINE 93
                           A   802    
0000A6 B7                  A   803    	OR	A,A
0000A7 ED62                A   804    	SBC	HL,HL
                           A   805    ;   94	}
                           A   806    .LINE 94
                           A   807    
0000A9 DDF9                A   808    	LD	SP,IX
0000AB DDE1                A   809    	POP	IX
0000AD C9                  A   810    	RET	
                           A   811    
                           A   812    
                           A   813    ;**************************** _disk_ioctl *****
                           A   814    ;Name                         Addr/Register   S
                           A   815    ;buff                                 IX+12    
                           A   816    ;cmd                                   IX+9    
                           A   817    ;pdrv                                  IX+6    
                           A   818    
                           A   819    
                           A   820    ; Stack Frame Size: 15 (bytes)
                           A   821    ;       Spill Code: 0 (instruction)
                           A   822    
                           A   823    
                           A   824    .ENDFUNC "disk_ioctl",94,"_disk_ioctl"
                           A   825    ;   95	
                           A   826    ;   96	// Get RTC time for filestamps
                           A   827    ;   97	// Returns:
                           A   828    ;   98	// - TIME (bit packed)
                           A   829    ;   99	//
                           A   830    ;  100	//    0 to  4: Seconds/2 (0 to 29)
                           A   831    ;  101	//    5 to 10: Minutes (0 to 59)
                           A   832    ;  102	//   11 to 15: Hours (0 to 23)
                           A   833    ;  103	//   16 to 20: Day of Month (1 to 31)
                           A   834    ;  104	//   21 to 24: Month (1 to 12)
                           A   835    ;  105	//   25 to 31: Year-1980 (0 to 127)
                           A   836    ;  106	//
                           A   837    ;  107	DWORD get_fattime(void) {
0000AE                     A   838    _get_fattime:
                           A   839    .DEFINE "_get_fattime"
                           A   840    
                           A   841    .VALUE _get_fattime
                           A   842    
                           A   843    .CLASS 2
                           A   844    
                           A   845    .TYPE 79
                           A   846    
                           A   847    .ENDEF
                           A   848    
                           A   849    .BEGFUNC "get_fattime",107,"_get_fattime"
                           A   850    
                           A   851    .LINE 107
                           A   852    
                           A   853    .DEFINE "yr"
                           A   854    
                           A   855    .CLASS 65
                           A   856    
                           A   857    .VALUE -4
                           A   858    
                           A   859    .TYPE 15
                           A   860    
                           A   861    .ENDEF
                           A   862    
                           A   863    .DEFINE "mo"
                           A   864    
                           A   865    .CLASS 65
                           A   866    
                           A   867    .VALUE -8
                           A   868    
                           A   869    .TYPE 15
                           A   870    
                           A   871    .ENDEF
                           A   872    
                           A   873    .DEFINE "da"
                           A   874    
                           A   875    .CLASS 65
                           A   876    
                           A   877    .VALUE -12
                           A   878    
                           A   879    .TYPE 15
                           A   880    
                           A   881    .ENDEF
                           A   882    
                           A   883    .DEFINE "hr"
                           A   884    
                           A   885    .CLASS 65
                           A   886    
                           A   887    .VALUE -16
                           A   888    
                           A   889    .TYPE 15
                           A   890    
                           A   891    .ENDEF
                           A   892    
                           A   893    .DEFINE "mi"
                           A   894    
                           A   895    .CLASS 65
                           A   896    
                           A   897    .VALUE -20
                           A   898    
                           A   899    .TYPE 15
                           A   900    
                           A   901    .ENDEF
                           A   902    
                           A   903    .DEFINE "se"
                           A   904    
                           A   905    .CLASS 65
                           A   906    
                           A   907    .VALUE -24
                           A   908    
                           A   909    .TYPE 15
                           A   910    
                           A   911    .ENDEF
                           A   912    
0000AE DDE5                A   913    	PUSH	IX
0000B0 DD210000 00         A   914    	LD	IX,0
0000B5 DD39                A   915    	ADD	IX,SP
0000B7 ED22E8              A   916    	LEA	HL,IX+%FFFFFFE8
0000BA F9                  A   917    	LD	SP,HL
                           A   918    ;  108		DWORD	yr, mo, da, hr, mi, se;
                           A   919    ;  109		BYTE *	p = &rtc;
                           A   920    ;  110	
                           A   921    ;  111		//rtc_update();
                           A   922    ;  112	
                           A   923    ;  113		yr =  *(p+0)    << 25;
                           A   924    .LINE 113
                           A   925    
0000BB B7ED62              A   926    	UEXT	HL
0000BE 3A 00 00 00         A   927    	LD	A,(_rtc)
0000C2 6F                  A   928    	LD	L,A
0000C3 7C                  A   929    	LD	A,H
0000C4 E5C1                A   930    	LD	BC,HL
0000C6 2E19                A   931    	LD	L,%19
0000C8 CD 00 00 00         A   932    	CALL	__lshl
0000CC DD0FFC              A   933    	LD	(IX+%FFFFFFFC),BC
0000CF DD77FF              A   934    	LD	(IX+%FFFFFFFF),A
                           A   935    ;  114		mo = (*(p+1)+1) << 21;
                           A   936    .LINE 114
                           A   937    
0000D2 FD21 00 00 00       A   938    	LD	IY,_rtc
0000D7 B7ED62              A   939    	UEXT	HL
0000DA FD6E01              A   940    	LD	L,(IY+%1)
0000DD 5C                  A   941    	LD	E,H
0000DE 3E01                A   942    	LD	A,%1
0000E0 CD 00 00 00         A   943    	CALL	__ladd_b
0000E4 7B                  A   944    	LD	A,E
0000E5 E5C1                A   945    	LD	BC,HL
0000E7 2E15                A   946    	LD	L,%15
0000E9 CD 00 00 00         A   947    	CALL	__lshl
0000ED DD0FF8              A   948    	LD	(IX+%FFFFFFF8),BC
0000F0 DD77FB              A   949    	LD	(IX+%FFFFFFFB),A
                           A   950    ;  115		da =  *(p+2)    << 16;
                           A   951    .LINE 115
                           A   952    
0000F3 B7ED62              A   953    	UEXT	HL
0000F6 FD6E02              A   954    	LD	L,(IY+%2)
0000F9 E5                  A   955    	PUSH	HL
0000FA E5                  A   956    	PUSH	HL
0000FB B7ED62              A   957    	UEXT	HL
0000FE E5                  A   958    	PUSH	HL
0000FF 33                  A   959    	INC	SP
000100 C1                  A   960    	POP	BC
000101 D1                  A   961    	POP	DE
000102 33                  A   962    	INC	SP
000103 33                  A   963    	INC	SP
000104 DD0FF4              A   964    	LD	(IX+%FFFFFFF4),BC
000107 DD73F7              A   965    	LD	(IX+%FFFFFFF7),E
                           A   966    ;  116		hr =  *(p+5)    << 11;
                           A   967    .LINE 116
                           A   968    
00010A B7ED62              A   969    	UEXT	HL
00010D FD6E05              A   970    	LD	L,(IY+%5)
000110 7C                  A   971    	LD	A,H
000111 E5C1                A   972    	LD	BC,HL
000113 2E0B                A   973    	LD	L,%B
000115 CD 00 00 00         A   974    	CALL	__lshl
000119 DD0FF0              A   975    	LD	(IX+%FFFFFFF0),BC
00011C DD77F3              A   976    	LD	(IX+%FFFFFFF3),A
                           A   977    ;  117		mi =  *(p+6)    <<  5;
                           A   978    .LINE 117
                           A   979    
00011F B7ED62              A   980    	UEXT	HL
000122 FD6E06              A   981    	LD	L,(IY+%6)
000125 7C                  A   982    	LD	A,H
000126 E5C1                A   983    	LD	BC,HL
000128 2E05                A   984    	LD	L,%5
00012A CD 00 00 00         A   985    	CALL	__lshl
00012E DD0FEC              A   986    	LD	(IX+%FFFFFFEC),BC
000131 DD77EF              A   987    	LD	(IX+%FFFFFFEF),A
                           A   988    ;  118		se =  *(p+7)    >>  1;
                           A   989    .LINE 118
                           A   990    
000134 ED2307              A   991    	LEA	HL,IY+%7
000137 7E                  A   992    	LD	A,(HL)
000138 B7ED62              A   993    	UEXT	HL
00013B 6F                  A   994    	LD	L,A
00013C 3E01                A   995    	LD	A,%1
00013E CD 00 00 00         A   996    	CALL	__ishrs_b
000142 E5C1                A   997    	LD	BC,HL
000144 CD 00 00 00         A   998    	CALL	__itol
000148 DD0FE8              A   999    	LD	(IX+%FFFFFFE8),BC
00014B DD77EB              A  1000    	LD	(IX+%FFFFFFEB),A
                           A  1001    ;  119	
                           A  1002    ;  120		return se | mi | hr | da | mo | yr;
                           A  1003    .LINE 120
                           A  1004    
00014E DD27EC              A  1005    	LD	HL,(IX+%FFFFFFEC)
000151 DD5EEF              A  1006    	LD	E,(IX+%FFFFFFEF)
000154 DD7EEB              A  1007    	LD	A,(IX+%FFFFFFEB)
000157 CD 00 00 00         A  1008    	CALL	__lor
00015B DD07F0              A  1009    	LD	BC,(IX+%FFFFFFF0)
00015E DD7EF3              A  1010    	LD	A,(IX+%FFFFFFF3)
000161 CD 00 00 00         A  1011    	CALL	__lor
000165 DD07F4              A  1012    	LD	BC,(IX+%FFFFFFF4)
000168 DD7EF7              A  1013    	LD	A,(IX+%FFFFFFF7)
00016B CD 00 00 00         A  1014    	CALL	__lor
00016F DD07F8              A  1015    	LD	BC,(IX+%FFFFFFF8)
000172 DD7EFB              A  1016    	LD	A,(IX+%FFFFFFFB)
000175 CD 00 00 00         A  1017    	CALL	__lor
000179 DD07FC              A  1018    	LD	BC,(IX+%FFFFFFFC)
00017C DD7EFF              A  1019    	LD	A,(IX+%FFFFFFFF)
00017F CD 00 00 00         A  1020    	CALL	__lor
                           A  1021    ;  121	}
                           A  1022    .LINE 121
                           A  1023    
000183 DDF9                A  1024    	LD	SP,IX
000185 DDE1                A  1025    	POP	IX
000187 C9                  A  1026    	RET	
                           A  1027    
                           A  1028    
                           A  1029    ;**************************** _get_fattime ****
                           A  1030    ;Name                         Addr/Register   S
                           A  1031    ;_rtc                                IMPORT    
                           A  1032    ;se                                   IX-24    
                           A  1033    ;mi                                   IX-20    
                           A  1034    ;hr                                   IX-16    
                           A  1035    ;da                                   IX-12    
                           A  1036    ;mo                                    IX-8    
                           A  1037    ;yr                                    IX-4    
                           A  1038    
                           A  1039    
                           A  1040    ; Stack Frame Size: 30 (bytes)
                           A  1041    ;       Spill Code: 0 (instruction)
                           A  1042    
                           A  1043    
                           A  1044    .ENDFUNC "get_fattime",121,"_get_fattime"
                           A  1045    	XREF _rtc:ROM
                           A  1046    	XREF _SD_init:ROM
                           A  1047    	XREF _SD_writeBlocks:ROM
                           A  1048    	XREF _SD_readBlocks:ROM
                           A  1049    	XREF __lor:ROM
                           A  1050    	XREF __lshl:ROM
                           A  1051    	XREF __itol:ROM
                           A  1052    	XREF __ladd_b:ROM
                           A  1053    	XREF __ishrs_b:ROM
                           A  1054    	XDEF _get_fattime
                           A  1055    	XDEF _disk_ioctl
                           A  1056    	XDEF _disk_write
                           A  1057    	XDEF _disk_read
                           A  1058    	XDEF _disk_initialize
                           A  1059    	XDEF _disk_status
                           A  1060    	END


Errors: 0
Warnings: 0
Lines Assembled: 1061
