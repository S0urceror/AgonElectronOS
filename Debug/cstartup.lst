Zilog eZ80 Macro Assembler Version 4.3 (19073001)24-Jun-23     07:37:07     page:   1


PC     Object              I  Line    Source 
                           A     1    ;
                           A     2    ; Title:	AGON Electron OS - C Startup Code
                           A     3    ; Author:	Copyright (C) 2005 by ZiLOG, Inc.  
                           A     4    ; Modified:	Dean Belfield
                           A     5    
                           A     6    			XDEF __c_startup
                           A     7    			XDEF __cstartup
                           A     8    			XREF _errno
                           A     9    			XREF _main
                           A    10    
                           A    11    			XREF __low_bss         ; Low addres
                           A    12    			XREF __len_bss         ; Length of 
                           A    13    		
                           A    14    			XREF __low_data        ; Address of
                           A    15    			XREF __low_romdata     ; Addr of in
                           A    16    			XREF __len_data        ; Length of 
                           A    17    
                           A    18    			XREF __copy_code_to_ram
                           A    19    			XREF __len_code
                           A    20    			XREF __low_code
                           A    21    			XREF __low_romcode
                           A    22    
       00000001            A    23    __cstartup		EQU %1
                           A    24    
                           A    25    			DEFINE .STARTUP, SPACE = ROM
                           A    26    			SEGMENT .STARTUP
                           A    27    			.ASSUME ADL=1
                           A    28    
000000                     A    29    __c_startup:
000000                     A    30    _c_int0:
                           A    31    ;
                           A    32    ; Clear the uninitialized data section
                           A    33    ;
000000 01 00 00 00         A    34    			LD	BC, __len_bss			; Check
000004 3E 00               A    35    			LD	a, __len_bss >> 16
000006 B1                  A    36    			OR	A, C
000007 B0                  A    37    			OR	A, B
000008 28 16               A    38    			JR	Z, _c_bss_done			; BSS i
00000A AF                  A    39    			XOR	A, A
00000B 32 00 00 00         A    40    			LD 	(__low_bss), A
00000F ED62                A    41    			SBC	HL, HL				; hl = 0
000011 0B                  A    42    			DEC	BC				; 1st byte's ta
000012 ED42                A    43    			SBC	HL, BC
000014 28 0A               A    44    			JR	Z, _c_bss_done  	        ; J
000016 21 00 00 00         A    45    			LD	HL, __low_bss			; reset
00001A 11 01 00 00         A    46    			LD	DE, __low_bss + 1		; [de] 
00001E EDB0                A    47    			LDIR					; Clear thi
                           A    48    
000020                     A    49    _c_bss_done:
                           A    50    ;
                           A    51    ; Copy the initialized data section
                           A    52    ;
000020 01 00 00 00         A    53    			LD	BC, __len_data			; [bc] 
000024 3E 00               A    54    			LD	A, __len_data >> 16		; Check
000026 B1                  A    55    			OR	A, C
000027 B0                  A    56    			OR	A, B
000028 28 0A               A    57    			JR	Z, _c_data_done			; __len
00002A 21 00 00 00         A    58    			LD	HL, __low_romdata		; [hl] 
00002E 11 00 00 00         A    59    			LD	DE, __low_data			; [de] 
000032 EDB0                A    60    			LDIR					; Copy the 
                           A    61    
000034                     A    62    _c_data_done:
                           A    63    ;
                           A    64    ; Copy CODE (which may be in FLASH) to RAM if t
                           A    65    ; copy_code_to_ram symbol is set in the link co
                           A    66    ;
000034 3E 00               A    67    			LD	A, __copy_code_to_ram
000036 B7                  A    68    			OR	A, A
000037 28 14               A    69    			JR	Z, _copy_code_to_ram_done
000039 01 00 00 00         A    70    			LD	BC, __len_code			; [bc] 
00003D 3E 00               A    71    			LD	A, __len_code >> 16		; Check
00003F B1                  A    72    			OR	A, C
000040 B0                  A    73    			OR	A, B
000041 28 0A               A    74    			JR	Z, _copy_code_to_ram_done	; _
000043 21 00 00 00         A    75    			LD	HL, __low_romcode		; [hl] 
000047 11 00 00 00         A    76    			LD	DE, __low_code			; [de] 
00004B EDB0                A    77    			LDIR					; Copy the 
                           A    78    
00004D                     A    79    _copy_code_to_ram_done:
                           A    80    ;
                           A    81    ; C environment created, continue with the init
                           A    82    ;
00004D C9                  A    83    			RET
                           A    84    
                           A    85    			END


Errors: 0
Warnings: 0
Lines Assembled: 86
