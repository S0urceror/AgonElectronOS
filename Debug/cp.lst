Zilog eZ80 Macro Assembler Version 4.3 (19073001)01-Jul-23     15:39:39     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optspeed -noreduceopt -nopadbranc
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\src\cp.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",566
                           A     9    .DEFINE "fs_type"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "pdrv"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "n_fats"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "wflag"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "fsi_flag"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "id"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 13
                           A    38    .ENDEF
                           A    39    .DEFINE "n_rootdir"
                           A    40    .VALUE 7
                           A    41    .CLASS 8
                           A    42    .TYPE 13
                           A    43    .ENDEF
                           A    44    .DEFINE "csize"
                           A    45    .VALUE 9
                           A    46    .CLASS 8
                           A    47    .TYPE 13
                           A    48    .ENDEF
                           A    49    .DEFINE "lfnbuf"
                           A    50    .VALUE 11
                           A    51    .CLASS 8
                           A    52    .TYPE 45
                           A    53    .ENDEF
                           A    54    .DEFINE "last_clst"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 15
                           A    58    .ENDEF
                           A    59    .DEFINE "free_clst"
                           A    60    .VALUE 18
                           A    61    .CLASS 8
                           A    62    .TYPE 15
                           A    63    .ENDEF
                           A    64    .DEFINE "cdir"
                           A    65    .VALUE 22
                           A    66    .CLASS 8
                           A    67    .TYPE 15
                           A    68    .ENDEF
                           A    69    .DEFINE "n_fatent"
                           A    70    .VALUE 26
                           A    71    .CLASS 8
                           A    72    .TYPE 15
                           A    73    .ENDEF
                           A    74    .DEFINE "fsize"
                           A    75    .VALUE 30
                           A    76    .CLASS 8
                           A    77    .TYPE 15
                           A    78    .ENDEF
                           A    79    .DEFINE "volbase"
                           A    80    .VALUE 34
                           A    81    .CLASS 8
                           A    82    .TYPE 15
                           A    83    .ENDEF
                           A    84    .DEFINE "fatbase"
                           A    85    .VALUE 38
                           A    86    .CLASS 8
                           A    87    .TYPE 15
                           A    88    .ENDEF
                           A    89    .DEFINE "dirbase"
                           A    90    .VALUE 42
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "database"
                           A    95    .VALUE 46
                           A    96    .CLASS 8
                           A    97    .TYPE 15
                           A    98    .ENDEF
                           A    99    .DEFINE "winsect"
                           A   100    .VALUE 50
                           A   101    .CLASS 8
                           A   102    .TYPE 15
                           A   103    .ENDEF
                           A   104    .DEFINE "win"
                           A   105    .VALUE 54
                           A   106    .CLASS 8
                           A   107    .DIM 512
                           A   108    .TYPE 108
                           A   109    .ENDEF
                           A   110    .ENDREC "NONAME0"
                           A   111    .BEGREC "NONAME1",15
                           A   112    .DEFINE "fs"
                           A   113    .VALUE 0
                           A   114    .CLASS 8
                           A   115    .TAG "NONAME0"
                           A   116    .TYPE 40
                           A   117    .ENDEF
                           A   118    .DEFINE "id"
                           A   119    .VALUE 3
                           A   120    .CLASS 8
                           A   121    .TYPE 13
                           A   122    .ENDEF
                           A   123    .DEFINE "attr"
                           A   124    .VALUE 5
                           A   125    .CLASS 8
                           A   126    .TYPE 12
                           A   127    .ENDEF
                           A   128    .DEFINE "stat"
                           A   129    .VALUE 6
                           A   130    .CLASS 8
                           A   131    .TYPE 12
                           A   132    .ENDEF
                           A   133    .DEFINE "sclust"
                           A   134    .VALUE 7
                           A   135    .CLASS 8
                           A   136    .TYPE 15
                           A   137    .ENDEF
                           A   138    .DEFINE "objsize"
                           A   139    .VALUE 11
                           A   140    .CLASS 8
                           A   141    .TYPE 15
                           A   142    .ENDEF
                           A   143    .ENDREC "NONAME1"
                           A   144    .BEGREC "NONAME2",36
                           A   145    .DEFINE "obj"
                           A   146    .VALUE 0
                           A   147    .CLASS 8
                           A   148    .TAG "NONAME1"
                           A   149    .TYPE 8
                           A   150    .ENDEF
                           A   151    .DEFINE "flag"
                           A   152    .VALUE 15
                           A   153    .CLASS 8
                           A   154    .TYPE 12
                           A   155    .ENDEF
                           A   156    .DEFINE "err"
                           A   157    .VALUE 16
                           A   158    .CLASS 8
                           A   159    .TYPE 12
                           A   160    .ENDEF
                           A   161    .DEFINE "fptr"
                           A   162    .VALUE 17
                           A   163    .CLASS 8
                           A   164    .TYPE 15
                           A   165    .ENDEF
                           A   166    .DEFINE "clust"
                           A   167    .VALUE 21
                           A   168    .CLASS 8
                           A   169    .TYPE 15
                           A   170    .ENDEF
                           A   171    .DEFINE "sect"
                           A   172    .VALUE 25
                           A   173    .CLASS 8
                           A   174    .TYPE 15
                           A   175    .ENDEF
                           A   176    .DEFINE "dir_sect"
                           A   177    .VALUE 29
                           A   178    .CLASS 8
                           A   179    .TYPE 15
                           A   180    .ENDEF
                           A   181    .DEFINE "dir_ptr"
                           A   182    .VALUE 33
                           A   183    .CLASS 8
                           A   184    .TYPE 44
                           A   185    .ENDEF
                           A   186    .ENDREC "NONAME2"
                           A   187    .BEGREC "NONAME3",46
                           A   188    .DEFINE "obj"
                           A   189    .VALUE 0
                           A   190    .CLASS 8
                           A   191    .TAG "NONAME1"
                           A   192    .TYPE 8
                           A   193    .ENDEF
                           A   194    .DEFINE "dptr"
                           A   195    .VALUE 15
                           A   196    .CLASS 8
                           A   197    .TYPE 15
                           A   198    .ENDEF
                           A   199    .DEFINE "clust"
                           A   200    .VALUE 19
                           A   201    .CLASS 8
                           A   202    .TYPE 15
                           A   203    .ENDEF
                           A   204    .DEFINE "sect"
                           A   205    .VALUE 23
                           A   206    .CLASS 8
                           A   207    .TYPE 15
                           A   208    .ENDEF
                           A   209    .DEFINE "dir"
                           A   210    .VALUE 27
                           A   211    .CLASS 8
                           A   212    .TYPE 44
                           A   213    .ENDEF
                           A   214    .DEFINE "fn"
                           A   215    .VALUE 30
                           A   216    .CLASS 8
                           A   217    .DIM 12
                           A   218    .TYPE 108
                           A   219    .ENDEF
                           A   220    .DEFINE "blk_ofs"
                           A   221    .VALUE 42
                           A   222    .CLASS 8
                           A   223    .TYPE 15
                           A   224    .ENDEF
                           A   225    .ENDREC "NONAME3"
                           A   226    .BEGREC "NONAME4",278
                           A   227    .DEFINE "fsize"
                           A   228    .VALUE 0
                           A   229    .CLASS 8
                           A   230    .TYPE 15
                           A   231    .ENDEF
                           A   232    .DEFINE "fdate"
                           A   233    .VALUE 4
                           A   234    .CLASS 8
                           A   235    .TYPE 13
                           A   236    .ENDEF
                           A   237    .DEFINE "ftime"
                           A   238    .VALUE 6
                           A   239    .CLASS 8
                           A   240    .TYPE 13
                           A   241    .ENDEF
                           A   242    .DEFINE "fattrib"
                           A   243    .VALUE 8
                           A   244    .CLASS 8
                           A   245    .TYPE 12
                           A   246    .ENDEF
                           A   247    .DEFINE "altname"
                           A   248    .VALUE 9
                           A   249    .CLASS 8
                           A   250    .DIM 13
                           A   251    .TYPE 98
                           A   252    .ENDEF
                           A   253    .DEFINE "fname"
                           A   254    .VALUE 22
                           A   255    .CLASS 8
                           A   256    .DIM 256
                           A   257    .TYPE 98
                           A   258    .ENDEF
                           A   259    .ENDREC "NONAME4"
                           A   260    .BEGREC "NONAME5",12
                           A   261    .DEFINE "fmt"
                           A   262    .VALUE 0
                           A   263    .CLASS 8
                           A   264    .TYPE 12
                           A   265    .ENDEF
                           A   266    .DEFINE "n_fat"
                           A   267    .VALUE 1
                           A   268    .CLASS 8
                           A   269    .TYPE 12
                           A   270    .ENDEF
                           A   271    .DEFINE "align"
                           A   272    .VALUE 2
                           A   273    .CLASS 8
                           A   274    .TYPE 14
                           A   275    .ENDEF
                           A   276    .DEFINE "n_root"
                           A   277    .VALUE 5
                           A   278    .CLASS 8
                           A   279    .TYPE 14
                           A   280    .ENDEF
                           A   281    .DEFINE "au_size"
                           A   282    .VALUE 8
                           A   283    .CLASS 8
                           A   284    .TYPE 15
                           A   285    .ENDEF
                           A   286    .ENDREC "NONAME5"
                           A   287    .BEGREC "fmt_type",19
                           A   288    .DEFINE "status"
                           A   289    .VALUE 0
                           A   290    .CLASS 8
                           A   291    .TYPE 12
                           A   292    .ENDEF
                           A   293    .DEFINE "flags"
                           A   294    .VALUE 1
                           A   295    .CLASS 8
                           A   296    .TYPE 12
                           A   297    .ENDEF
                           A   298    .DEFINE "size"
                           A   299    .VALUE 2
                           A   300    .CLASS 8
                           A   301    .TYPE 2
                           A   302    .ENDEF
                           A   303    .DEFINE "chr"
                           A   304    .VALUE 3
                           A   305    .CLASS 8
                           A   306    .TYPE 2
                           A   307    .ENDEF
                           A   308    .DEFINE "type"
                           A   309    .VALUE 4
                           A   310    .CLASS 8
                           A   311    .TYPE 2
                           A   312    .ENDEF
                           A   313    .DEFINE "field_width"
                           A   314    .VALUE 5
                           A   315    .CLASS 8
                           A   316    .TYPE 2
                           A   317    .ENDEF
                           A   318    .DEFINE "precision"
                           A   319    .VALUE 6
                           A   320    .CLASS 8
                           A   321    .TYPE 2
                           A   322    .ENDEF
                           A   323    .DEFINE "set_begin"
                           A   324    .VALUE 7
                           A   325    .CLASS 8
                           A   326    .TYPE 34
                           A   327    .ENDEF
                           A   328    .DEFINE "set_end"
                           A   329    .VALUE 10
                           A   330    .CLASS 8
                           A   331    .TYPE 34
                           A   332    .ENDEF
                           A   333    .DEFINE "pad_whole"
                           A   334    .VALUE 13
                           A   335    .CLASS 8
                           A   336    .TYPE 12
                           A   337    .ENDEF
                           A   338    .DEFINE "pad_pre_fract"
                           A   339    .VALUE 14
                           A   340    .CLASS 8
                           A   341    .TYPE 12
                           A   342    .ENDEF
                           A   343    .DEFINE "pad_post_fract"
                           A   344    .VALUE 15
                           A   345    .CLASS 8
                           A   346    .TYPE 12
                           A   347    .ENDEF
                           A   348    .DEFINE "pad_at"
                           A   349    .VALUE 16
                           A   350    .CLASS 8
                           A   351    .TYPE 34
                           A   352    .ENDEF
                           A   353    .ENDREC "fmt_type"
                           A   354    .BEGREC "flt_info",12
                           A   355    .DEFINE "flags"
                           A   356    .VALUE 0
                           A   357    .CLASS 8
                           A   358    .TYPE 12
                           A   359    .ENDEF
                           A   360    .DEFINE "exp"
                           A   361    .VALUE 1
                           A   362    .CLASS 8
                           A   363    .TYPE 2
                           A   364    .ENDEF
                           A   365    .DEFINE "digits"
                           A   366    .VALUE 2
                           A   367    .CLASS 8
                           A   368    .DIM 10
                           A   369    .TYPE 108
                           A   370    .ENDEF
                           A   371    .ENDREC "flt_info"
                           A   372    .BEGREC "NONAME6",6
                           A   373    .DEFINE "quot"
                           A   374    .VALUE 0
                           A   375    .CLASS 8
                           A   376    .TYPE 4
                           A   377    .ENDEF
                           A   378    .DEFINE "rem"
                           A   379    .VALUE 3
                           A   380    .CLASS 8
                           A   381    .TYPE 4
                           A   382    .ENDEF
                           A   383    .ENDREC "NONAME6"
                           A   384    .BEGREC "NONAME7",8
                           A   385    .DEFINE "quot"
                           A   386    .VALUE 0
                           A   387    .CLASS 8
                           A   388    .TYPE 5
                           A   389    .ENDEF
                           A   390    .DEFINE "rem"
                           A   391    .VALUE 4
                           A   392    .CLASS 8
                           A   393    .TYPE 5
                           A   394    .ENDEF
                           A   395    .ENDREC "NONAME7"
                           A   396    .BEGREC "header",6
                           A   397    .DEFINE "s"
                           A   398    .VALUE 0
                           A   399    .CLASS 11
                           A   400    .TAG "NONAME8"
                           A   401    .TYPE 8
                           A   402    .ENDEF
                           A   403    .DEFINE "x"
                           A   404    .VALUE 0
                           A   405    .CLASS 11
                           A   406    .TYPE 2
                           A   407    .ENDEF
                           A   408    .ENDREC "header"
                           A   409    .BEGREC "NONAME8",6
                           A   410    .DEFINE "ptr"
                           A   411    .VALUE 0
                           A   412    .CLASS 8
                           A   413    .TAG "header"
                           A   414    .TYPE 40
                           A   415    .ENDEF
                           A   416    .DEFINE "size"
                           A   417    .VALUE 3
                           A   418    .CLASS 8
                           A   419    .TYPE 14
                           A   420    .ENDEF
                           A   421    .ENDREC "NONAME8"
                           A   422    .BEGREC "_HEADER",7
                           A   423    .DEFINE "magic"
                           A   424    .VALUE 0
                           A   425    .CLASS 8
                           A   426    .TYPE 12
                           A   427    .ENDEF
                           A   428    .DEFINE "begin"
                           A   429    .VALUE 1
                           A   430    .CLASS 8
                           A   431    .TYPE 13
                           A   432    .ENDEF
                           A   433    .DEFINE "end"
                           A   434    .VALUE 3
                           A   435    .CLASS 8
                           A   436    .TYPE 13
                           A   437    .ENDEF
                           A   438    .DEFINE "start"
                           A   439    .VALUE 5
                           A   440    .CLASS 8
                           A   441    .TYPE 13
                           A   442    .ENDEF
                           A   443    .ENDREC "_HEADER"
                           A   444    	SEGMENT BSS
000000                     A   445    _szCommandLine:
000000                     A   446    	DS	255
                           A   447    .DEFINE "szCommandLine"
                           A   448    .ALIAS "_szCommandLine"
                           A   449    .CLASS 83
                           A   450    .VALUE _szCommandLine
                           A   451    .DIM 255
                           A   452    .TYPE 98
                           A   453    .ENDEF
0000FF                     A   454    _ptrCommandLine:
0000FF                     A   455    	DS	3
                           A   456    .DEFINE "ptrCommandLine"
                           A   457    .ALIAS "_ptrCommandLine"
                           A   458    .CLASS 83
                           A   459    .VALUE _ptrCommandLine
                           A   460    .TYPE 34
                           A   461    .ENDEF
                           A   462    ;    1	
                           A   463    ;    2	#include "globals.h"
                           A   464    ;    3	#include "ff.h"
                           A   465    ;    4	#include "cp.h"
                           A   466    ;    5	#include <Stdio.h>
                           A   467    ;    6	#include <String.h>
                           A   468    ;    7	#include <stdlib.h>
                           A   469    ;    8	#include "machine.h"
                           A   470    ;    9	#include "uart.h"
                           A   471    ;   10	
                           A   472    ;   11	char szCommandLine[255];
                           A   473    ;   12	char *ptrCommandLine;
                           A   474    	SEGMENT CODE
                           A   475    ;   13	
                           A   476    ;   14	// Change directory
                           A   477    ;   15	// Parameters:
                           A   478    ;   16	// - filename: Path of file to save
                           A   479    ;   17	BOOL cp_CD(char *path) {
000000                     A   480    _cp_CD:
                           A   481    .DEFINE "_cp_CD"
                           A   482    
                           A   483    .VALUE _cp_CD
                           A   484    
                           A   485    .CLASS 2
                           A   486    
                           A   487    .TYPE 76
                           A   488    
                           A   489    .ENDEF
                           A   490    
                           A   491    .BEGFUNC "cp_CD",17,"_cp_CD"
                           A   492    
                           A   493    .LINE 17
                           A   494    
                           A   495    .DEFINE "path"
                           A   496    
                           A   497    .CLASS 65
                           A   498    
                           A   499    .VALUE 6
                           A   500    
                           A   501    .TYPE 34
                           A   502    
                           A   503    .ENDEF
                           A   504    
                           A   505    .DEFINE "fr"
                           A   506    
                           A   507    .CLASS 65
                           A   508    
                           A   509    .VALUE -3
                           A   510    
                           A   511    .TYPE 4
                           A   512    
                           A   513    .ENDEF
                           A   514    
000000 DDE5                A   515    	PUSH	IX
000002 DD210000 00         A   516    	LD	IX,0
000007 DD39                A   517    	ADD	IX,SP
000009 C5                  A   518    	PUSH	BC
                           A   519    ;   18		FRESULT	fr;
                           A   520    ;   19		fr = f_chdir(path);
                           A   521    .LINE 19
                           A   522    
00000A DD0706              A   523    	LD	BC,(IX+%6)
00000D C5                  A   524    	PUSH	BC
00000E CD 00 00 00         A   525    	CALL	_f_chdir
000012 C1                  A   526    	POP	BC
000013 DD2FFD              A   527    	LD	(IX+%FFFFFFFD),HL
                           A   528    ;   20		return fr==FR_OK;
                           A   529    .LINE 20
                           A   530    
000016 01000000            A   531    	LD	BC,0
00001A DD27FD              A   532    	LD	HL,(IX+%FFFFFFFD)
00001D B7                  A   533    	OR	A,A
00001E ED42                A   534    	SBC	HL,BC
000020 20 04               A   535    	JR	NZ,L__1
000022 3E01                A   536    	LD	A,%1
000024 18 01               A   537    	JR	L__2
000026                     A   538    L__1:
000026 AF                  A   539    	XOR	A,A
000027                     A   540    L__2:
                           A   541    ;   21	}
                           A   542    .LINE 21
                           A   543    
000027 DDF9                A   544    	LD	SP,IX
000029 DDE1                A   545    	POP	IX
00002B C9                  A   546    	RET	
                           A   547    
                           A   548    
                           A   549    ;**************************** _cp_CD **********
                           A   550    ;Name                         Addr/Register   S
                           A   551    ;_f_chdir                            IMPORT  --
                           A   552    ;fr                                    IX-3    
                           A   553    ;path                                  IX+6    
                           A   554    
                           A   555    
                           A   556    ; Stack Frame Size: 12 (bytes)
                           A   557    ;       Spill Code: 0 (instruction)
                           A   558    
                           A   559    
                           A   560    .ENDFUNC "cp_CD",21,"_cp_CD"
                           A   561    ;   22	
                           A   562    ;   23	// Directory listing
                           A   563    ;   24	
                           A   564    ;   25	BOOL cp_DIR(char * path) {
00002C                     A   565    _cp_DIR:
                           A   566    .DEFINE "_cp_DIR"
                           A   567    
                           A   568    .VALUE _cp_DIR
                           A   569    
                           A   570    .CLASS 2
                           A   571    
                           A   572    .TYPE 76
                           A   573    
                           A   574    .ENDEF
                           A   575    
                           A   576    .BEGFUNC "cp_DIR",25,"_cp_DIR"
                           A   577    
                           A   578    .LINE 25
                           A   579    
                           A   580    .DEFINE "path"
                           A   581    
                           A   582    .CLASS 65
                           A   583    
                           A   584    .VALUE 6
                           A   585    
                           A   586    .TYPE 34
                           A   587    
                           A   588    .ENDEF
                           A   589    
                           A   590    .DEFINE "fr"
                           A   591    
                           A   592    .CLASS 65
                           A   593    
                           A   594    .VALUE -3
                           A   595    
                           A   596    .TYPE 4
                           A   597    
                           A   598    .ENDEF
                           A   599    
                           A   600    .DEFINE "da"
                           A   601    
                           A   602    .CLASS 65
                           A   603    
                           A   604    .VALUE -12
                           A   605    
                           A   606    .TYPE 4
                           A   607    
                           A   608    .ENDEF
                           A   609    
                           A   610    .DEFINE "hr"
                           A   611    
                           A   612    .CLASS 65
                           A   613    
                           A   614    .VALUE -15
                           A   615    
                           A   616    .TYPE 4
                           A   617    
                           A   618    .ENDEF
                           A   619    
                           A   620    .DEFINE "mi"
                           A   621    
                           A   622    .CLASS 65
                           A   623    
                           A   624    .VALUE -18
                           A   625    
                           A   626    .TYPE 4
                           A   627    
                           A   628    .ENDEF
                           A   629    
                           A   630    .DEFINE "yr"
                           A   631    
                           A   632    .CLASS 65
                           A   633    
                           A   634    .VALUE -21
                           A   635    
                           A   636    .TYPE 4
                           A   637    
                           A   638    .ENDEF
                           A   639    
                           A   640    .DEFINE "mo"
                           A   641    
                           A   642    .CLASS 65
                           A   643    
                           A   644    .VALUE -24
                           A   645    
                           A   646    .TYPE 4
                           A   647    
                           A   648    .ENDEF
                           A   649    
                           A   650    .DEFINE "str"
                           A   651    
                           A   652    .CLASS 65
                           A   653    
                           A   654    .VALUE -36
                           A   655    
                           A   656    .DIM 12
                           A   657    
                           A   658    .TYPE 98
                           A   659    
                           A   660    .ENDEF
                           A   661    
                           A   662    .DEFINE "dir"
                           A   663    
                           A   664    .CLASS 65
                           A   665    
                           A   666    .VALUE -82
                           A   667    
                           A   668    .TAG "NONAME3"
                           A   669    
                           A   670    .TYPE 8
                           A   671    
                           A   672    .ENDEF
                           A   673    
                           A   674    ;   26		FRESULT	fr;
                           A   675    ;   27		DIR	  	dir;
                           A   676    ;   28		static 	FILINFO  fno;
                           A   677    .LINE 28
                           A   678    
                           A   679    .DEFINE "fno"
                           A   680    
                           A   681    .ALIAS "_0fno"
                           A   682    
                           A   683    .CLASS 83
                           A   684    
                           A   685    .VALUE _0fno
                           A   686    
                           A   687    .TAG "NONAME4"
                           A   688    
                           A   689    .TYPE 8
                           A   690    
                           A   691    .ENDEF
                           A   692    
00002C DDE5                A   693    	PUSH	IX
00002E DD210000 00         A   694    	LD	IX,0
000033 DD39                A   695    	ADD	IX,SP
000035 ED22AE              A   696    	LEA	HL,IX+%FFFFFFAE
000038 F9                  A   697    	LD	SP,HL
                           A   698    ;   29		int		yr, mo, da, hr, mi;
                           A   699    ;   30		char 	str[12];
                           A   700    ;   31		
                           A   701    ;   32		fr = f_getlabel("", str, 0);
                           A   702    .LINE 32
                           A   703    
000039 01000000            A   704    	LD	BC,0
00003D C5                  A   705    	PUSH	BC
00003E ED65DC              A   706    	PEA	IX+%FFFFFFDC
000041 01 00 00 00         A   707    	LD	BC,L__4
000045 C5                  A   708    	PUSH	BC
000046 CD 00 00 00         A   709    	CALL	_f_getlabel
00004A C1                  A   710    	POP	BC
00004B C1                  A   711    	POP	BC
00004C C1                  A   712    	POP	BC
00004D DD2FFD              A   713    	LD	(IX+%FFFFFFFD),HL
                           A   714    ;   33		if(fr != 0) {
                           A   715    .LINE 33
                           A   716    
000050 01000000            A   717    	LD	BC,0
000054 DD27FD              A   718    	LD	HL,(IX+%FFFFFFFD)
000057 B7                  A   719    	OR	A,A
000058 ED42                A   720    	SBC	HL,BC
00005A 28 05               A   721    	JR	Z,L_2
                           A   722    ;   34			return FALSE;
                           A   723    .LINE 34
                           A   724    
00005C AF                  A   725    	XOR	A,A
00005D C3 DA 02 00         A   726    	JR	L_17
                           A   727    ;   35		}	
000061                     A   728    L_2:
                           A   729    .LINE 35
                           A   730    
                           A   731    ;   36		printf("\r\nVolume: ");
                           A   732    .LINE 36
                           A   733    
000061 01 00 00 00         A   734    	LD	BC,___print_uputch
000065 ED43 00 00 00       A   735    	LD	(___print_xputch),BC
00006A 01 01 00 00         A   736    	LD	BC,L__6
00006E C5                  A   737    	PUSH	BC
00006F CD 00 00 00         A   738    	CALL	___print_sendstring
000073 C1                  A   739    	POP	BC
                           A   740    ;   37		if(strlen(str) > 0) {
                           A   741    .LINE 37
                           A   742    
000074 ED65DC              A   743    	PEA	IX+%FFFFFFDC
000077 CD 00 00 00         A   744    	CALL	_strlen
00007B C1                  A   745    	POP	BC
00007C E5C1                A   746    	LD	BC,HL
00007E B7                  A   747    	OR	A,A
00007F ED62                A   748    	SBC	HL,HL
000081 B7                  A   749    	OR	A,A
000082 ED42                A   750    	SBC	HL,BC
000084 30 13               A   751    	JR	NC,L_4
                           A   752    ;   38			printf("%s", str);
                           A   753    .LINE 38
                           A   754    
000086 01 00 00 00         A   755    	LD	BC,___print_uputch
00008A ED43 00 00 00       A   756    	LD	(___print_xputch),BC
00008F ED65DC              A   757    	PEA	IX+%FFFFFFDC
000092 CD 00 00 00         A   758    	CALL	___print_sendstring
000096 C1                  A   759    	POP	BC
                           A   760    ;   39		}
                           A   761    ;   40		else {
                           A   762    .LINE 40
                           A   763    
000097 18 13               A   764    	JR	L_5
000099                     A   765    L_4:
                           A   766    ;   41			printf("<No Volume Label>");
                           A   767    .LINE 41
                           A   768    
000099 01 00 00 00         A   769    	LD	BC,___print_uputch
00009D ED43 00 00 00       A   770    	LD	(___print_xputch),BC
0000A2 01 0C 00 00         A   771    	LD	BC,L__8
0000A6 C5                  A   772    	PUSH	BC
0000A7 CD 00 00 00         A   773    	CALL	___print_sendstring
0000AB C1                  A   774    	POP	BC
                           A   775    ;   42		}
0000AC                     A   776    L_5:
                           A   777    .LINE 42
                           A   778    
                           A   779    ;   43		printf("\n\r\n\r");
                           A   780    .LINE 43
                           A   781    
0000AC 01 00 00 00         A   782    	LD	BC,___print_uputch
0000B0 ED43 00 00 00       A   783    	LD	(___print_xputch),BC
0000B5 01 1E 00 00         A   784    	LD	BC,L__9
0000B9 C5                  A   785    	PUSH	BC
0000BA CD 00 00 00         A   786    	CALL	___print_sendstring
0000BE C1                  A   787    	POP	BC
                           A   788    ;   44		
                           A   789    ;   45		fr = f_opendir(&dir, path);
                           A   790    .LINE 45
                           A   791    
0000BF DD0706              A   792    	LD	BC,(IX+%6)
0000C2 C5                  A   793    	PUSH	BC
0000C3 ED65AE              A   794    	PEA	IX+%FFFFFFAE
0000C6 CD 00 00 00         A   795    	CALL	_f_opendir
0000CA C1                  A   796    	POP	BC
0000CB C1                  A   797    	POP	BC
0000CC DD2FFD              A   798    	LD	(IX+%FFFFFFFD),HL
                           A   799    ;   46		if(fr == FR_OK) {
                           A   800    .LINE 46
                           A   801    
0000CF 01000000            A   802    	LD	BC,0
0000D3 DD27FD              A   803    	LD	HL,(IX+%FFFFFFFD)
0000D6 B7                  A   804    	OR	A,A
0000D7 ED42                A   805    	SBC	HL,BC
0000D9 C2 D0 02 00         A   806    	JR	NZ,L_16
                           A   807    ;   47			for(;;) {
0000DD                     A   808    L_13:
                           A   809    .LINE 47
                           A   810    
                           A   811    ;   48				fr = f_readdir(&dir, &fno);
                           A   812    .LINE 48
                           A   813    
0000DD 01 02 01 00         A   814    	LD	BC,_0fno
0000E1 C5                  A   815    	PUSH	BC
0000E2 ED65AE              A   816    	PEA	IX+%FFFFFFAE
0000E5 CD 00 00 00         A   817    	CALL	_f_readdir
0000E9 C1                  A   818    	POP	BC
0000EA C1                  A   819    	POP	BC
0000EB DD2FFD              A   820    	LD	(IX+%FFFFFFFD),HL
                           A   821    ;   49				if (fr != FR_OK || fno.fnam
                           A   822    .LINE 49
                           A   823    
0000EE 01000000            A   824    	LD	BC,0
0000F2 DD27FD              A   825    	LD	HL,(IX+%FFFFFFFD)
0000F5 B7                  A   826    	OR	A,A
0000F6 ED42                A   827    	SBC	HL,BC
0000F8 C2 D0 02 00         A   828    	JR	NZ,L_16
0000FC 01 18 01 00         A   829    	LD	BC,_0fno+22
000100 DD0FF7              A   830    	LD	(IX+%FFFFFFF7),BC
000103 C5E1                A   831    	LD	HL,BC
000105 7E                  A   832    	LD	A,(HL)
000106 B7                  A   833    	OR	A,A
000107 CA D0 02 00         A   834    	JR	Z,L_16
                           A   835    ;   50					break;  // Break on err
                           A   836    ;   51				}
                           A   837    ;   52				yr = (fno.fdate & 0xFE00) >
                           A   838    .LINE 52
                           A   839    
00010B 2A 06 01 00         A   840    	LD	HL,(_0fno+4)
00010F 3E09                A   841    	LD	A,%9
000111 CD 00 00 00         A   842    	CALL	__sshru_b
000115 E5C1                A   843    	LD	BC,HL
000117 CD 00 00 00         A   844    	CALL	__stoiu
00011B 7D                  A   845    	LD	A,L
00011C CBBF                A   846    	RES	%7,A
00011E B7ED62              A   847    	UEXT	HL
000121 6F                  A   848    	LD	L,A
000122 DD2FEB              A   849    	LD	(IX+%FFFFFFEB),HL
                           A   850    ;   53				mo = (fno.fdate & 0x01E0) >
                           A   851    .LINE 53
                           A   852    
000125 2A 06 01 00         A   853    	LD	HL,(_0fno+4)
000129 3E05                A   854    	LD	A,%5
00012B CD 00 00 00         A   855    	CALL	__sshru_b
00012F E5C1                A   856    	LD	BC,HL
000131 CD 00 00 00         A   857    	CALL	__stoiu
000135 7D                  A   858    	LD	A,L
000136 E60F                A   859    	AND	A,%F
000138 B7ED62              A   860    	UEXT	HL
00013B 6F                  A   861    	LD	L,A
00013C DD2FE8              A   862    	LD	(IX+%FFFFFFE8),HL
                           A   863    ;   54				da = (fno.fdate & 0x001F);	
                           A   864    .LINE 54
                           A   865    
00013F ED4B 06 01 00       A   866    	LD	BC,(_0fno+4)
000144 CD 00 00 00         A   867    	CALL	__stoiu
000148 7D                  A   868    	LD	A,L
000149 E61F                A   869    	AND	A,%1F
00014B B7ED62              A   870    	UEXT	HL
00014E 6F                  A   871    	LD	L,A
00014F DD2FF4              A   872    	LD	(IX+%FFFFFFF4),HL
                           A   873    ;   55				hr = (fno.ftime & 0xF800) >
                           A   874    .LINE 55
                           A   875    
000152 2A 08 01 00         A   876    	LD	HL,(_0fno+6)
000156 3E0B                A   877    	LD	A,%B
000158 CD 00 00 00         A   878    	CALL	__sshru_b
00015C E5C1                A   879    	LD	BC,HL
00015E CD 00 00 00         A   880    	CALL	__stoiu
000162 7D                  A   881    	LD	A,L
000163 E61F                A   882    	AND	A,%1F
000165 B7ED62              A   883    	UEXT	HL
000168 6F                  A   884    	LD	L,A
000169 DD2FF1              A   885    	LD	(IX+%FFFFFFF1),HL
                           A   886    ;   56				mi = (fno.ftime & 0x07E0) >
                           A   887    .LINE 56
                           A   888    
00016C 2A 08 01 00         A   889    	LD	HL,(_0fno+6)
000170 3E05                A   890    	LD	A,%5
000172 CD 00 00 00         A   891    	CALL	__sshru_b
000176 E5C1                A   892    	LD	BC,HL
000178 CD 00 00 00         A   893    	CALL	__stoiu
00017C 7D                  A   894    	LD	A,L
00017D E63F                A   895    	AND	A,%3F
00017F B7ED62              A   896    	UEXT	HL
000182 6F                  A   897    	LD	L,A
000183 DD2FEE              A   898    	LD	(IX+%FFFFFFEE),HL
                           A   899    ;   57				
                           A   900    ;   58				printf("%04d/%02d/%02d\t%02
                           A   901    .LINE 58
                           A   902    
000186 3A 0A 01 00         A   903    	LD	A,(_0fno+8)
00018A E610                A   904    	AND	A,%10
00018C 28 09               A   905    	JR	Z,L_11
00018E 01440000            A   906    	LD	BC,68
000192 DD0FFA              A   907    	LD	(IX+%FFFFFFFA),BC
000195 18 07               A   908    	JR	L_12
000197                     A   909    L_11:
000197 01200000            A   910    	LD	BC,32
00019B DD0FFA              A   911    	LD	(IX+%FFFFFFFA),BC
00019E                     A   912    L_12:
00019E 01 00 00 00         A   913    	LD	BC,___print_uputch
0001A2 ED43 00 00 00       A   914    	LD	(___print_xputch),BC
0001A7 3E04                A   915    	LD	A,%4
0001A9 32 05 00 00         A   916    	LD	(___print_fmt+5),A
0001AD 3E40                A   917    	LD	A,%40
0001AF 32 01 00 00         A   918    	LD	(___print_fmt+1),A
0001B3 01BC0700            A   919    	LD	BC,1980
0001B7 DD27EB              A   920    	LD	HL,(IX+%FFFFFFEB)
0001BA 09                  A   921    	ADD	HL,BC
0001BB E5C1                A   922    	LD	BC,HL
0001BD CD 00 00 00         A   923    	CALL	__itol
0001C1 C5D1                A   924    	LD	DE,BC
0001C3 4F                  A   925    	LD	C,A
0001C4 0600                A   926    	LD	B,%0
0001C6 C5                  A   927    	PUSH	BC
0001C7 D5                  A   928    	PUSH	DE
0001C8 CD 00 00 00         A   929    	CALL	__u_itoa
0001CC C1                  A   930    	POP	BC
0001CD C1                  A   931    	POP	BC
0001CE 012F0000            A   932    	LD	BC,47
0001D2 C5                  A   933    	PUSH	BC
0001D3 CD 00 00 00         A   934    	CALL	___print_uputch
0001D7 C1                  A   935    	POP	BC
0001D8 3E02                A   936    	LD	A,%2
0001DA 32 05 00 00         A   937    	LD	(___print_fmt+5),A
0001DE 3E40                A   938    	LD	A,%40
0001E0 32 01 00 00         A   939    	LD	(___print_fmt+1),A
0001E4 DD07E8              A   940    	LD	BC,(IX+%FFFFFFE8)
0001E7 CD 00 00 00         A   941    	CALL	__itol
0001EB C5D1                A   942    	LD	DE,BC
0001ED 4F                  A   943    	LD	C,A
0001EE 0600                A   944    	LD	B,%0
0001F0 C5                  A   945    	PUSH	BC
0001F1 D5                  A   946    	PUSH	DE
0001F2 CD 00 00 00         A   947    	CALL	__u_itoa
0001F6 C1                  A   948    	POP	BC
0001F7 C1                  A   949    	POP	BC
0001F8 012F0000            A   950    	LD	BC,47
0001FC C5                  A   951    	PUSH	BC
0001FD CD 00 00 00         A   952    	CALL	___print_uputch
000201 C1                  A   953    	POP	BC
000202 3E02                A   954    	LD	A,%2
000204 32 05 00 00         A   955    	LD	(___print_fmt+5),A
000208 3E40                A   956    	LD	A,%40
00020A 32 01 00 00         A   957    	LD	(___print_fmt+1),A
00020E DD07F4              A   958    	LD	BC,(IX+%FFFFFFF4)
000211 CD 00 00 00         A   959    	CALL	__itol
000215 C5D1                A   960    	LD	DE,BC
000217 4F                  A   961    	LD	C,A
000218 0600                A   962    	LD	B,%0
00021A C5                  A   963    	PUSH	BC
00021B D5                  A   964    	PUSH	DE
00021C CD 00 00 00         A   965    	CALL	__u_itoa
000220 C1                  A   966    	POP	BC
000221 C1                  A   967    	POP	BC
000222 01090000            A   968    	LD	BC,9
000226 C5                  A   969    	PUSH	BC
000227 CD 00 00 00         A   970    	CALL	___print_uputch
00022B C1                  A   971    	POP	BC
00022C 3E02                A   972    	LD	A,%2
00022E 32 05 00 00         A   973    	LD	(___print_fmt+5),A
000232 3E40                A   974    	LD	A,%40
000234 32 01 00 00         A   975    	LD	(___print_fmt+1),A
000238 DD07F1              A   976    	LD	BC,(IX+%FFFFFFF1)
00023B CD 00 00 00         A   977    	CALL	__itol
00023F C5D1                A   978    	LD	DE,BC
000241 4F                  A   979    	LD	C,A
000242 0600                A   980    	LD	B,%0
000244 C5                  A   981    	PUSH	BC
000245 D5                  A   982    	PUSH	DE
000246 CD 00 00 00         A   983    	CALL	__u_itoa
00024A C1                  A   984    	POP	BC
00024B C1                  A   985    	POP	BC
00024C 013A0000            A   986    	LD	BC,58
000250 C5                  A   987    	PUSH	BC
000251 CD 00 00 00         A   988    	CALL	___print_uputch
000255 C1                  A   989    	POP	BC
000256 3E02                A   990    	LD	A,%2
000258 32 05 00 00         A   991    	LD	(___print_fmt+5),A
00025C 3E40                A   992    	LD	A,%40
00025E 32 01 00 00         A   993    	LD	(___print_fmt+1),A
000262 DD07EE              A   994    	LD	BC,(IX+%FFFFFFEE)
000265 CD 00 00 00         A   995    	CALL	__itol
000269 C5D1                A   996    	LD	DE,BC
00026B 4F                  A   997    	LD	C,A
00026C 0600                A   998    	LD	B,%0
00026E C5                  A   999    	PUSH	BC
00026F D5                  A  1000    	PUSH	DE
000270 CD 00 00 00         A  1001    	CALL	__u_itoa
000274 C1                  A  1002    	POP	BC
000275 C1                  A  1003    	POP	BC
000276 01200000            A  1004    	LD	BC,32
00027A C5                  A  1005    	PUSH	BC
00027B CD 00 00 00         A  1006    	CALL	___print_uputch
00027F C1                  A  1007    	POP	BC
000280 DD4EFA              A  1008    	LD	C,(IX+%FFFFFFFA)
000283 0600                A  1009    	LD	B,%0
000285 C5                  A  1010    	PUSH	BC
000286 CD 00 00 00         A  1011    	CALL	___print_uputch
00028A C1                  A  1012    	POP	BC
00028B 01200000            A  1013    	LD	BC,32
00028F C5                  A  1014    	PUSH	BC
000290 CD 00 00 00         A  1015    	CALL	___print_uputch
000294 C1                  A  1016    	POP	BC
000295 3E08                A  1017    	LD	A,%8
000297 32 05 00 00         A  1018    	LD	(___print_fmt+5),A
00029B 3A 05 01 00         A  1019    	LD	A,(_0fno+3)
00029F 4F                  A  1020    	LD	C,A
0002A0 0600                A  1021    	LD	B,%0
0002A2 C5                  A  1022    	PUSH	BC
0002A3 ED4B 02 01 00       A  1023    	LD	BC,(_0fno)
0002A8 C5                  A  1024    	PUSH	BC
0002A9 CD 00 00 00         A  1025    	CALL	__u_itoa
0002AD C1                  A  1026    	POP	BC
0002AE C1                  A  1027    	POP	BC
0002AF 01200000            A  1028    	LD	BC,32
0002B3 C5                  A  1029    	PUSH	BC
0002B4 CD 00 00 00         A  1030    	CALL	___print_uputch
0002B8 C1                  A  1031    	POP	BC
0002B9 DD07F7              A  1032    	LD	BC,(IX+%FFFFFFF7)
0002BC C5                  A  1033    	PUSH	BC
0002BD CD 00 00 00         A  1034    	CALL	___print_sendstring
0002C1 C1                  A  1035    	POP	BC
0002C2 01 23 00 00         A  1036    	LD	BC,L__14
0002C6 C5                  A  1037    	PUSH	BC
0002C7 CD 00 00 00         A  1038    	CALL	___print_sendstring
0002CB C1                  A  1039    	POP	BC
                           A  1040    ;   59			}
                           A  1041    .LINE 59
                           A  1042    
0002CC C3 DD 00 00         A  1043    	JR	L_13
                           A  1044    ;   60		}
0002D0                     A  1045    L_16:
                           A  1046    .LINE 60
                           A  1047    
                           A  1048    ;   61		f_closedir(&dir);
                           A  1049    .LINE 61
                           A  1050    
0002D0 ED65AE              A  1051    	PEA	IX+%FFFFFFAE
0002D3 CD 00 00 00         A  1052    	CALL	_f_closedir
0002D7 C1                  A  1053    	POP	BC
                           A  1054    ;   62		return TRUE;
                           A  1055    .LINE 62
                           A  1056    
0002D8 3E01                A  1057    	LD	A,%1
                           A  1058    ;   63	}
0002DA                     A  1059    L_17:
                           A  1060    .LINE 63
                           A  1061    
0002DA DDF9                A  1062    	LD	SP,IX
0002DC DDE1                A  1063    	POP	IX
0002DE C9                  A  1064    	RET	
                           A  1065    
                           A  1066    
                           A  1067    ;**************************** _cp_DIR *********
                           A  1068    ;Name                         Addr/Register   S
                           A  1069    ;_f_closedir                         IMPORT  --
                           A  1070    ;__u_itoa                            IMPORT  --
                           A  1071    ;___print_fmt                        IMPORT    
                           A  1072    ;_0fno                               STATIC    
                           A  1073    ;_f_readdir                          IMPORT  --
                           A  1074    ;_f_opendir                          IMPORT  --
                           A  1075    ;_strlen                             IMPORT  --
                           A  1076    ;___print_sendstring                 IMPORT  --
                           A  1077    ;___print_xputch                     IMPORT    
                           A  1078    ;___print_uputch                     IMPORT  --
                           A  1079    ;_f_getlabel                         IMPORT  --
                           A  1080    ;dir                                  IX-82    
                           A  1081    ;str                                  IX-36    
                           A  1082    ;mo                                   IX-24    
                           A  1083    ;yr                                   IX-21    
                           A  1084    ;mi                                   IX-18    
                           A  1085    ;hr                                   IX-15    
                           A  1086    ;da                                   IX-12    
                           A  1087    ;G_0                                   IX-9    
                           A  1088    ;temp9                                 IX-6    
                           A  1089    ;fr                                    IX-3    
                           A  1090    ;path                                  IX+6    
                           A  1091    
                           A  1092    
                           A  1093    ; Stack Frame Size: 91 (bytes)
                           A  1094    ;       Spill Code: 0 (instruction)
                           A  1095    
                           A  1096    
                           A  1097    .ENDFUNC "cp_DIR",63,"_cp_DIR"
                           A  1098    	SEGMENT STRSECT
000000                     A  1099    L__4:
000000 00                  A  1100    	DB	0
000001                     A  1101    L__6:
000001 0D0A                A  1102    	DB	13,10
000003 566F6C75 6D653A20   A  1103    	DB	"Volume: "
00000B 00                  A  1104    	DB	0
00000C                     A  1105    L__8:
00000C 3C4E6F20 566F6C75   A  1106    	DB	"<No Volume Label>"
000014 6D65204C 6162656C 
00001C 3E 
00001D 00                  A  1107    	DB	0
00001E                     A  1108    L__9:
00001E 0A0D0A0D 00         A  1109    	DB	10,13,10,13,0
000023                     A  1110    L__14:
000023 0A0D00              A  1111    	DB	10,13,0
                           A  1112    	SEGMENT BSS
000102                     A  1113    _0fno:
000102                     A  1114    	DS	278
                           A  1115    	SEGMENT CODE
                           A  1116    ;   64	
                           A  1117    ;   65	// Make a directory
                           A  1118    ;   66	// Parameters:
                           A  1119    ;   67	// - filename: Path of file to delete
                           A  1120    ;   68	BOOL cp_MKDIR(char * filename) {
0002DF                     A  1121    _cp_MKDIR:
                           A  1122    .DEFINE "_cp_MKDIR"
                           A  1123    
                           A  1124    .VALUE _cp_MKDIR
                           A  1125    
                           A  1126    .CLASS 2
                           A  1127    
                           A  1128    .TYPE 76
                           A  1129    
                           A  1130    .ENDEF
                           A  1131    
                           A  1132    .BEGFUNC "cp_MKDIR",68,"_cp_MKDIR"
                           A  1133    
                           A  1134    .LINE 68
                           A  1135    
                           A  1136    .DEFINE "filename"
                           A  1137    
                           A  1138    .CLASS 65
                           A  1139    
                           A  1140    .VALUE 6
                           A  1141    
                           A  1142    .TYPE 34
                           A  1143    
                           A  1144    .ENDEF
                           A  1145    
                           A  1146    .DEFINE "fr"
                           A  1147    
                           A  1148    .CLASS 65
                           A  1149    
                           A  1150    .VALUE -3
                           A  1151    
                           A  1152    .TYPE 4
                           A  1153    
                           A  1154    .ENDEF
                           A  1155    
0002DF DDE5                A  1156    	PUSH	IX
0002E1 DD210000 00         A  1157    	LD	IX,0
0002E6 DD39                A  1158    	ADD	IX,SP
0002E8 C5                  A  1159    	PUSH	BC
                           A  1160    ;   69		FRESULT	fr;	
                           A  1161    ;   70		fr = f_mkdir(filename);
                           A  1162    .LINE 70
                           A  1163    
0002E9 DD0706              A  1164    	LD	BC,(IX+%6)
0002EC C5                  A  1165    	PUSH	BC
0002ED CD 00 00 00         A  1166    	CALL	_f_mkdir
0002F1 C1                  A  1167    	POP	BC
0002F2 DD2FFD              A  1168    	LD	(IX+%FFFFFFFD),HL
                           A  1169    ;   71		return fr==FR_OK;
                           A  1170    .LINE 71
                           A  1171    
0002F5 01000000            A  1172    	LD	BC,0
0002F9 DD27FD              A  1173    	LD	HL,(IX+%FFFFFFFD)
0002FC B7                  A  1174    	OR	A,A
0002FD ED42                A  1175    	SBC	HL,BC
0002FF 20 04               A  1176    	JR	NZ,L__17
000301 3E01                A  1177    	LD	A,%1
000303 18 01               A  1178    	JR	L__18
000305                     A  1179    L__17:
000305 AF                  A  1180    	XOR	A,A
000306                     A  1181    L__18:
                           A  1182    ;   72	}
                           A  1183    .LINE 72
                           A  1184    
000306 DDF9                A  1185    	LD	SP,IX
000308 DDE1                A  1186    	POP	IX
00030A C9                  A  1187    	RET	
                           A  1188    
                           A  1189    
                           A  1190    ;**************************** _cp_MKDIR *******
                           A  1191    ;Name                         Addr/Register   S
                           A  1192    ;_f_mkdir                            IMPORT  --
                           A  1193    ;fr                                    IX-3    
                           A  1194    ;filename                              IX+6    
                           A  1195    
                           A  1196    
                           A  1197    ; Stack Frame Size: 12 (bytes)
                           A  1198    ;       Spill Code: 0 (instruction)
                           A  1199    
                           A  1200    
                           A  1201    .ENDFUNC "cp_MKDIR",72,"_cp_MKDIR"
                           A  1202    ;   73	
                           A  1203    ;   74	// Delete file
                           A  1204    ;   75	// Parameters:
                           A  1205    ;   76	// - filename: Path of file to delete
                           A  1206    ;   77	BOOL cp_DEL(char * filename) {
00030B                     A  1207    _cp_DEL:
                           A  1208    .DEFINE "_cp_DEL"
                           A  1209    
                           A  1210    .VALUE _cp_DEL
                           A  1211    
                           A  1212    .CLASS 2
                           A  1213    
                           A  1214    .TYPE 76
                           A  1215    
                           A  1216    .ENDEF
                           A  1217    
                           A  1218    .BEGFUNC "cp_DEL",77,"_cp_DEL"
                           A  1219    
                           A  1220    .LINE 77
                           A  1221    
                           A  1222    .DEFINE "filename"
                           A  1223    
                           A  1224    .CLASS 65
                           A  1225    
                           A  1226    .VALUE 6
                           A  1227    
                           A  1228    .TYPE 34
                           A  1229    
                           A  1230    .ENDEF
                           A  1231    
                           A  1232    .DEFINE "fr"
                           A  1233    
                           A  1234    .CLASS 65
                           A  1235    
                           A  1236    .VALUE -3
                           A  1237    
                           A  1238    .TYPE 4
                           A  1239    
                           A  1240    .ENDEF
                           A  1241    
00030B DDE5                A  1242    	PUSH	IX
00030D DD210000 00         A  1243    	LD	IX,0
000312 DD39                A  1244    	ADD	IX,SP
000314 C5                  A  1245    	PUSH	BC
                           A  1246    ;   78		FRESULT	fr;	
                           A  1247    ;   79		fr = f_unlink(filename);
                           A  1248    .LINE 79
                           A  1249    
000315 DD0706              A  1250    	LD	BC,(IX+%6)
000318 C5                  A  1251    	PUSH	BC
000319 CD 00 00 00         A  1252    	CALL	_f_unlink
00031D C1                  A  1253    	POP	BC
00031E DD2FFD              A  1254    	LD	(IX+%FFFFFFFD),HL
                           A  1255    ;   80		return fr==FR_OK;
                           A  1256    .LINE 80
                           A  1257    
000321 01000000            A  1258    	LD	BC,0
000325 DD27FD              A  1259    	LD	HL,(IX+%FFFFFFFD)
000328 B7                  A  1260    	OR	A,A
000329 ED42                A  1261    	SBC	HL,BC
00032B 20 04               A  1262    	JR	NZ,L__21
00032D 3E01                A  1263    	LD	A,%1
00032F 18 01               A  1264    	JR	L__22
000331                     A  1265    L__21:
000331 AF                  A  1266    	XOR	A,A
000332                     A  1267    L__22:
                           A  1268    ;   81	}
                           A  1269    .LINE 81
                           A  1270    
000332 DDF9                A  1271    	LD	SP,IX
000334 DDE1                A  1272    	POP	IX
000336 C9                  A  1273    	RET	
                           A  1274    
                           A  1275    
                           A  1276    ;**************************** _cp_DEL *********
                           A  1277    ;Name                         Addr/Register   S
                           A  1278    ;_f_unlink                           IMPORT  --
                           A  1279    ;fr                                    IX-3    
                           A  1280    ;filename                              IX+6    
                           A  1281    
                           A  1282    
                           A  1283    ; Stack Frame Size: 12 (bytes)
                           A  1284    ;       Spill Code: 0 (instruction)
                           A  1285    
                           A  1286    
                           A  1287    .ENDFUNC "cp_DEL",81,"_cp_DEL"
                           A  1288    ;   82	
                           A  1289    ;   83	BOOL cp_exec_batch_file (char* filename
                           A  1290    ;   84	{
000337                     A  1291    _cp_exec_batch_file:
                           A  1292    .DEFINE "_cp_exec_batch_file"
                           A  1293    
                           A  1294    .VALUE _cp_exec_batch_file
                           A  1295    
                           A  1296    .CLASS 2
                           A  1297    
                           A  1298    .TYPE 76
                           A  1299    
                           A  1300    .ENDEF
                           A  1301    
                           A  1302    .BEGFUNC "cp_exec_batch_file",84,"_cp_exec_batc
                           A  1303    
                           A  1304    .LINE 84
                           A  1305    
                           A  1306    .DEFINE "filename"
                           A  1307    
                           A  1308    .CLASS 65
                           A  1309    
                           A  1310    .VALUE 6
                           A  1311    
                           A  1312    .TYPE 34
                           A  1313    
                           A  1314    .ENDEF
                           A  1315    
                           A  1316    .DEFINE "res"
                           A  1317    
                           A  1318    .CLASS 65
                           A  1319    
                           A  1320    .VALUE -1
                           A  1321    
                           A  1322    .TYPE 12
                           A  1323    
                           A  1324    .ENDEF
                           A  1325    
                           A  1326    .DEFINE "fp"
                           A  1327    
                           A  1328    .CLASS 65
                           A  1329    
                           A  1330    .VALUE -37
                           A  1331    
                           A  1332    .TAG "NONAME2"
                           A  1333    
                           A  1334    .TYPE 8
                           A  1335    
                           A  1336    .ENDEF
                           A  1337    
000337 DDE5                A  1338    	PUSH	IX
000339 DD210000 00         A  1339    	LD	IX,0
00033E DD39                A  1340    	ADD	IX,SP
000340 ED22DB              A  1341    	LEA	HL,IX+%FFFFFFDB
000343 F9                  A  1342    	LD	SP,HL
                           A  1343    ;   85		FIL fp;
                           A  1344    ;   86		BOOL res;
                           A  1345    ;   87		// open file
                           A  1346    ;   88		if (f_open(&fp, filename, ( FA_READ
                           A  1347    .LINE 88
                           A  1348    
000344 01010000            A  1349    	LD	BC,1
000348 C5                  A  1350    	PUSH	BC
000349 DD0706              A  1351    	LD	BC,(IX+%6)
00034C C5                  A  1352    	PUSH	BC
00034D ED65DB              A  1353    	PEA	IX+%FFFFFFDB
000350 CD 00 00 00         A  1354    	CALL	_f_open
000354 C1                  A  1355    	POP	BC
000355 C1                  A  1356    	POP	BC
000356 C1                  A  1357    	POP	BC
000357 01000000            A  1358    	LD	BC,0
00035B B7                  A  1359    	OR	A,A
00035C ED42                A  1360    	SBC	HL,BC
00035E 28 0F               A  1361    	JR	Z,L_21
000360 18 36               A  1362    	JR	L_25
                           A  1363    ;   89		{
                           A  1364    ;   90			// line by line
                           A  1365    ;   91			while (f_gets (szCommandLine,si
000362                     A  1366    L_22:
                           A  1367    .LINE 91
                           A  1368    
                           A  1369    ;   92			{
                           A  1370    ;   93				// process command
                           A  1371    ;   94				res = cp_process ();
                           A  1372    .LINE 94
                           A  1373    
000362 CD 15 04 00         A  1374    	CALL	_cp_process
000366 DD77FF              A  1375    	LD	(IX+%FFFFFFFF),A
                           A  1376    ;   95				if (res==FALSE)
                           A  1377    .LINE 95
                           A  1378    
000369 B7                  A  1379    	OR	A,A
00036A 20 03               A  1380    	JR	NZ,L_21
                           A  1381    ;   96					return FALSE;
                           A  1382    .LINE 96
                           A  1383    
00036C AF                  A  1384    	XOR	A,A
00036D 18 2A               A  1385    	JR	L_26
                           A  1386    ;   97			}
00036F                     A  1387    L_21:
                           A  1388    .LINE 97
                           A  1389    
00036F ED65DB              A  1390    	PEA	IX+%FFFFFFDB
000372 01FF0000            A  1391    	LD	BC,255
000376 C5                  A  1392    	PUSH	BC
000377 01 00 00 00         A  1393    	LD	BC,_szCommandLine
00037B C5                  A  1394    	PUSH	BC
00037C CD 00 00 00         A  1395    	CALL	_f_gets
000380 C1                  A  1396    	POP	BC
000381 C1                  A  1397    	POP	BC
000382 C1                  A  1398    	POP	BC
000383 01000000            A  1399    	LD	BC,0
000387 B7                  A  1400    	OR	A,A
000388 ED42                A  1401    	SBC	HL,BC
00038A 20 D6               A  1402    	JR	NZ,L_22
                           A  1403    ;   98			f_close (&fp);
                           A  1404    .LINE 98
                           A  1405    
00038C ED65DB              A  1406    	PEA	IX+%FFFFFFDB
00038F CD 00 00 00         A  1407    	CALL	_f_close
000393 C1                  A  1408    	POP	BC
                           A  1409    ;   99			return TRUE;
                           A  1410    .LINE 99
                           A  1411    
000394 3E01                A  1412    	LD	A,%1
000396 18 01               A  1413    	JR	L_26
                           A  1414    ;  100		}
000398                     A  1415    L_25:
                           A  1416    .LINE 100
                           A  1417    
                           A  1418    ;  101		return FALSE;
                           A  1419    .LINE 101
                           A  1420    
000398 AF                  A  1421    	XOR	A,A
                           A  1422    ;  102	}
000399                     A  1423    L_26:
                           A  1424    .LINE 102
                           A  1425    
000399 DDF9                A  1426    	LD	SP,IX
00039B DDE1                A  1427    	POP	IX
00039D C9                  A  1428    	RET	
                           A  1429    
                           A  1430    
                           A  1431    ;**************************** _cp_exec_batch_fi
                           A  1432    ;Name                         Addr/Register   S
                           A  1433    ;_f_close                            IMPORT  --
                           A  1434    ;_szCommandLine                      STATIC    
                           A  1435    ;_f_gets                             IMPORT  --
                           A  1436    ;_cp_process                         IMPORT  --
                           A  1437    ;_f_open                             IMPORT  --
                           A  1438    ;fp                                   IX-37    
                           A  1439    ;res                                   IX-1    
                           A  1440    ;filename                              IX+6    
                           A  1441    
                           A  1442    
                           A  1443    ; Stack Frame Size: 46 (bytes)
                           A  1444    ;       Spill Code: 0 (instruction)
                           A  1445    
                           A  1446    
                           A  1447    .ENDFUNC "cp_exec_batch_file",102,"_cp_exec_bat
                           A  1448    ;  103	
                           A  1449    ;  104	BOOL cp_type (char* filename)
                           A  1450    ;  105	{
00039E                     A  1451    _cp_type:
                           A  1452    .DEFINE "_cp_type"
                           A  1453    
                           A  1454    .VALUE _cp_type
                           A  1455    
                           A  1456    .CLASS 2
                           A  1457    
                           A  1458    .TYPE 76
                           A  1459    
                           A  1460    .ENDEF
                           A  1461    
                           A  1462    .BEGFUNC "cp_type",105,"_cp_type"
                           A  1463    
                           A  1464    .LINE 105
                           A  1465    
                           A  1466    .DEFINE "filename"
                           A  1467    
                           A  1468    .CLASS 65
                           A  1469    
                           A  1470    .VALUE 6
                           A  1471    
                           A  1472    .TYPE 34
                           A  1473    
                           A  1474    .ENDEF
                           A  1475    
                           A  1476    .DEFINE "fp"
                           A  1477    
                           A  1478    .CLASS 65
                           A  1479    
                           A  1480    .VALUE -36
                           A  1481    
                           A  1482    .TAG "NONAME2"
                           A  1483    
                           A  1484    .TYPE 8
                           A  1485    
                           A  1486    .ENDEF
                           A  1487    
00039E DDE5                A  1488    	PUSH	IX
0003A0 DD210000 00         A  1489    	LD	IX,0
0003A5 DD39                A  1490    	ADD	IX,SP
0003A7 ED22DC              A  1491    	LEA	HL,IX+%FFFFFFDC
0003AA F9                  A  1492    	LD	SP,HL
                           A  1493    ;  106		FIL fp;
                           A  1494    ;  107		BOOL res;
                           A  1495    ;  108		// open file
                           A  1496    ;  109		if (f_open(&fp, filename, ( FA_READ
                           A  1497    .LINE 109
                           A  1498    
0003AB 01010000            A  1499    	LD	BC,1
0003AF C5                  A  1500    	PUSH	BC
0003B0 DD0706              A  1501    	LD	BC,(IX+%6)
0003B3 C5                  A  1502    	PUSH	BC
0003B4 ED65DC              A  1503    	PEA	IX+%FFFFFFDC
0003B7 CD 00 00 00         A  1504    	CALL	_f_open
0003BB C1                  A  1505    	POP	BC
0003BC C1                  A  1506    	POP	BC
0003BD C1                  A  1507    	POP	BC
0003BE 01000000            A  1508    	LD	BC,0
0003C2 B7                  A  1509    	OR	A,A
0003C3 ED42                A  1510    	SBC	HL,BC
0003C5 28 1F               A  1511    	JR	Z,L_27
0003C7 18 46               A  1512    	JR	L_31
                           A  1513    ;  110		{
                           A  1514    ;  111			// line by line
                           A  1515    ;  112			while (f_gets (szCommandLine,si
0003C9                     A  1516    L_28:
                           A  1517    .LINE 112
                           A  1518    
                           A  1519    ;  113			{
                           A  1520    ;  114				// process command
                           A  1521    ;  115				printf ("%s\r",szCommandLin
                           A  1522    .LINE 115
                           A  1523    
0003C9 01 00 00 00         A  1524    	LD	BC,___print_uputch
0003CD ED43 00 00 00       A  1525    	LD	(___print_xputch),BC
0003D2 01 00 00 00         A  1526    	LD	BC,_szCommandLine
0003D6 C5                  A  1527    	PUSH	BC
0003D7 CD 00 00 00         A  1528    	CALL	___print_sendstring
0003DB C1                  A  1529    	POP	BC
0003DC 010D0000            A  1530    	LD	BC,13
0003E0 C5                  A  1531    	PUSH	BC
0003E1 CD 00 00 00         A  1532    	CALL	___print_uputch
0003E5 C1                  A  1533    	POP	BC
                           A  1534    ;  116			}
0003E6                     A  1535    L_27:
                           A  1536    .LINE 116
                           A  1537    
0003E6 ED65DC              A  1538    	PEA	IX+%FFFFFFDC
0003E9 01FF0000            A  1539    	LD	BC,255
0003ED C5                  A  1540    	PUSH	BC
0003EE 01 00 00 00         A  1541    	LD	BC,_szCommandLine
0003F2 C5                  A  1542    	PUSH	BC
0003F3 CD 00 00 00         A  1543    	CALL	_f_gets
0003F7 C1                  A  1544    	POP	BC
0003F8 C1                  A  1545    	POP	BC
0003F9 C1                  A  1546    	POP	BC
0003FA 01000000            A  1547    	LD	BC,0
0003FE B7                  A  1548    	OR	A,A
0003FF ED42                A  1549    	SBC	HL,BC
000401 20 C6               A  1550    	JR	NZ,L_28
                           A  1551    ;  117			f_close (&fp);
                           A  1552    .LINE 117
                           A  1553    
000403 ED65DC              A  1554    	PEA	IX+%FFFFFFDC
000406 CD 00 00 00         A  1555    	CALL	_f_close
00040A C1                  A  1556    	POP	BC
                           A  1557    ;  118			return TRUE;
                           A  1558    .LINE 118
                           A  1559    
00040B 3E01                A  1560    	LD	A,%1
00040D 18 01               A  1561    	JR	L_32
                           A  1562    ;  119		}
00040F                     A  1563    L_31:
                           A  1564    .LINE 119
                           A  1565    
                           A  1566    ;  120		return FALSE;
                           A  1567    .LINE 120
                           A  1568    
00040F AF                  A  1569    	XOR	A,A
                           A  1570    ;  121	}
000410                     A  1571    L_32:
                           A  1572    .LINE 121
                           A  1573    
000410 DDF9                A  1574    	LD	SP,IX
000412 DDE1                A  1575    	POP	IX
000414 C9                  A  1576    	RET	
                           A  1577    
                           A  1578    
                           A  1579    ;**************************** _cp_type ********
                           A  1580    ;Name                         Addr/Register   S
                           A  1581    ;_f_close                            IMPORT  --
                           A  1582    ;_f_gets                             IMPORT  --
                           A  1583    ;_szCommandLine                      STATIC    
                           A  1584    ;___print_sendstring                 IMPORT  --
                           A  1585    ;___print_xputch                     IMPORT    
                           A  1586    ;___print_uputch                     IMPORT  --
                           A  1587    ;_f_open                             IMPORT  --
                           A  1588    ;fp                                   IX-36    
                           A  1589    ;filename                              IX+6    
                           A  1590    
                           A  1591    
                           A  1592    ; Stack Frame Size: 45 (bytes)
                           A  1593    ;       Spill Code: 0 (instruction)
                           A  1594    
                           A  1595    
                           A  1596    .ENDFUNC "cp_type",121,"_cp_type"
                           A  1597    ;  122	
                           A  1598    ;  123	BOOL cp_process ()
                           A  1599    ;  124	{
000415                     A  1600    _cp_process:
                           A  1601    .DEFINE "_cp_process"
                           A  1602    
                           A  1603    .VALUE _cp_process
                           A  1604    
                           A  1605    .CLASS 2
                           A  1606    
                           A  1607    .TYPE 76
                           A  1608    
                           A  1609    .ENDEF
                           A  1610    
                           A  1611    .BEGFUNC "cp_process",124,"_cp_process"
                           A  1612    
                           A  1613    .LINE 124
                           A  1614    
                           A  1615    .DEFINE "pArg"
                           A  1616    
                           A  1617    .CLASS 65
                           A  1618    
                           A  1619    .VALUE -3
                           A  1620    
                           A  1621    .TYPE 34
                           A  1622    
                           A  1623    .ENDEF
                           A  1624    
                           A  1625    .DEFINE "pEnd"
                           A  1626    
                           A  1627    .CLASS 65
                           A  1628    
                           A  1629    .VALUE -6
                           A  1630    
                           A  1631    .TYPE 34
                           A  1632    
                           A  1633    .ENDEF
                           A  1634    
                           A  1635    .DEFINE "slot"
                           A  1636    
                           A  1637    .CLASS 65
                           A  1638    
                           A  1639    .VALUE -7
                           A  1640    
                           A  1641    .TYPE 12
                           A  1642    
                           A  1643    .ENDEF
                           A  1644    
                           A  1645    .DEFINE "vsync"
                           A  1646    
                           A  1647    .CLASS 65
                           A  1648    
                           A  1649    .VALUE -8
                           A  1650    
                           A  1651    .TYPE 12
                           A  1652    
                           A  1653    .ENDEF
                           A  1654    
                           A  1655    .DEFINE "start_address"
                           A  1656    
                           A  1657    .CLASS 65
                           A  1658    
                           A  1659    .VALUE -13
                           A  1660    
                           A  1661    .TYPE 3
                           A  1662    
                           A  1663    .ENDEF
                           A  1664    
                           A  1665    .DEFINE "begin"
                           A  1666    
                           A  1667    .CLASS 65
                           A  1668    
                           A  1669    .VALUE -15
                           A  1670    
                           A  1671    .TYPE 3
                           A  1672    
                           A  1673    .ENDEF
                           A  1674    
                           A  1675    .DEFINE "secsize"
                           A  1676    
                           A  1677    .CLASS 65
                           A  1678    
                           A  1679    .VALUE -18
                           A  1680    
                           A  1681    .TYPE 4
                           A  1682    
                           A  1683    .ENDEF
                           A  1684    
                           A  1685    .DEFINE "end"
                           A  1686    
                           A  1687    .CLASS 65
                           A  1688    
                           A  1689    .VALUE -20
                           A  1690    
                           A  1691    .TYPE 3
                           A  1692    
                           A  1693    .ENDEF
                           A  1694    
                           A  1695    .DEFINE "start"
                           A  1696    
                           A  1697    .CLASS 65
                           A  1698    
                           A  1699    .VALUE -22
                           A  1700    
                           A  1701    .TYPE 3
                           A  1702    
                           A  1703    .ENDEF
                           A  1704    
000415 DDE5                A  1705    	PUSH	IX
000417 DD210000 00         A  1706    	LD	IX,0
00041C DD39                A  1707    	ADD	IX,SP
00041E ED22EA              A  1708    	LEA	HL,IX+%FFFFFFEA
000421 F9                  A  1709    	LD	SP,HL
                           A  1710    ;  125		char  *pArg,*pEnd;
                           A  1711    ;  126		INT16 start_address,begin,end,start
                           A  1712    ;  127		UINT8 slot = 0 ; // default slot 0
                           A  1713    .LINE 127
                           A  1714    
000422 DD36F900            A  1715    	LD	(IX+%FFFFFFF9),%0
                           A  1716    ;  128	
                           A  1717    ;  129		if (strstr (szCommandLine,"init")==
                           A  1718    .LINE 129
                           A  1719    
000426 01 26 00 00         A  1720    	LD	BC,L__31
00042A C5                  A  1721    	PUSH	BC
00042B 01 00 00 00         A  1722    	LD	BC,_szCommandLine
00042F C5                  A  1723    	PUSH	BC
000430 CD 00 00 00         A  1724    	CALL	_strstr
000434 C1                  A  1725    	POP	BC
000435 C1                  A  1726    	POP	BC
000436 01 00 00 00         A  1727    	LD	BC,_szCommandLine
00043A B7                  A  1728    	OR	A,A
00043B ED42                A  1729    	SBC	HL,BC
00043D 20 08               A  1730    	JR	NZ,L_42
                           A  1731    ;  130		{
                           A  1732    ;  131			return machine_init ();
                           A  1733    .LINE 131
                           A  1734    
00043F CD 00 00 00         A  1735    	CALL	_machine_init
000443 C3 54 09 00         A  1736    	JR	L_107
                           A  1737    ;  132		}	
000447                     A  1738    L_42:
                           A  1739    .LINE 132
                           A  1740    
                           A  1741    ;  133		if (strstr (szCommandLine,"load")==
                           A  1742    .LINE 133
                           A  1743    
000447 01 2B 00 00         A  1744    	LD	BC,L__33
00044B C5                  A  1745    	PUSH	BC
00044C 01 00 00 00         A  1746    	LD	BC,_szCommandLine
000450 C5                  A  1747    	PUSH	BC
000451 CD 00 00 00         A  1748    	CALL	_strstr
000455 C1                  A  1749    	POP	BC
000456 C1                  A  1750    	POP	BC
000457 01 00 00 00         A  1751    	LD	BC,_szCommandLine
00045B B7                  A  1752    	OR	A,A
00045C ED42                A  1753    	SBC	HL,BC
00045E C2 16 05 00         A  1754    	JR	NZ,L_53
                           A  1755    ;  134		{
                           A  1756    ;  135			pArg = szCommandLine+4;
                           A  1757    .LINE 135
                           A  1758    
000462 FD21 00 00 00       A  1759    	LD	IY,_szCommandLine
000467 ED0304              A  1760    	LEA	BC,IY+%4
00046A DD0FFD              A  1761    	LD	(IX+%FFFFFFFD),BC
                           A  1762    ;  136			if (*pArg!='\0')
                           A  1763    .LINE 136
                           A  1764    
00046D FD7E04              A  1765    	LD	A,(IY+%4)
000470 B7                  A  1766    	OR	A,A
000471 CA 02 05 00         A  1767    	JR	Z,L_40
                           A  1768    ;  137			{
                           A  1769    ;  138				++pArg;
                           A  1770    .LINE 138
                           A  1771    
000475 ED0305              A  1772    	LEA	BC,IY+%5
000478 DD0FFD              A  1773    	LD	(IX+%FFFFFFFD),BC
                           A  1774    ;  139				if (pArg[0]=='-')
                           A  1775    .LINE 139
                           A  1776    
00047B ED2305              A  1777    	LEA	HL,IY+%5
00047E 7E                  A  1778    	LD	A,(HL)
00047F 47                  A  1779    	LD	B,A
000480 17ED62              A  1780    	SEXT	HL
000483 68                  A  1781    	LD	L,B
000484 012D0000            A  1782    	LD	BC,45
000488 B7                  A  1783    	OR	A,A
000489 ED42                A  1784    	SBC	HL,BC
00048B 20 75               A  1785    	JR	NZ,L_40
                           A  1786    ;  140				{
                           A  1787    ;  141					++pArg;
                           A  1788    .LINE 141
                           A  1789    
00048D ED0306              A  1790    	LEA	BC,IY+%6
000490 DD0FFD              A  1791    	LD	(IX+%FFFFFFFD),BC
                           A  1792    ;  142					if (pArg[0]=='w')
                           A  1793    .LINE 142
                           A  1794    
000493 ED2306              A  1795    	LEA	HL,IY+%6
000496 7E                  A  1796    	LD	A,(HL)
000497 47                  A  1797    	LD	B,A
000498 17ED62              A  1798    	SEXT	HL
00049B 68                  A  1799    	LD	L,B
00049C 01770000            A  1800    	LD	BC,119
0004A0 B7                  A  1801    	OR	A,A
0004A1 ED42                A  1802    	SBC	HL,BC
0004A3 20 14               A  1803    	JR	NZ,L_37
                           A  1804    ;  143					{
                           A  1805    ;  144						pArg+=2;
                           A  1806    ;  145						return machine_set_
                           A  1807    .LINE 145
                           A  1808    
0004A5 01 08 00 00         A  1809    	LD	BC,_szCommandLine+8
0004A9 C5                  A  1810    	PUSH	BC
0004AA 01000000            A  1811    	LD	BC,0
0004AE C5                  A  1812    	PUSH	BC
0004AF CD 00 00 00         A  1813    	CALL	_machine_set_warmboot_image
0004B3 C1                  A  1814    	POP	BC
0004B4 C1                  A  1815    	POP	BC
0004B5 C3 54 09 00         A  1816    	JR	L_107
                           A  1817    ;  146					}
0004B9                     A  1818    L_37:
                           A  1819    .LINE 146
                           A  1820    
                           A  1821    ;  147					if (pArg[0]>='0' && pAr
                           A  1822    .LINE 147
                           A  1823    
0004B9 21 06 00 00         A  1824    	LD	HL,_szCommandLine+6
0004BD 7E                  A  1825    	LD	A,(HL)
0004BE 47                  A  1826    	LD	B,A
0004BF 17ED62              A  1827    	SEXT	HL
0004C2 68                  A  1828    	LD	L,B
0004C3 01300000            A  1829    	LD	BC,48
0004C7 B7                  A  1830    	OR	A,A
0004C8 ED42                A  1831    	SBC	HL,BC
0004CA FA 02 05 00         A  1832    	JP	M,L_40
0004CE 21 06 00 00         A  1833    	LD	HL,_szCommandLine+6
0004D2 7E                  A  1834    	LD	A,(HL)
0004D3 47                  A  1835    	LD	B,A
0004D4 17ED62              A  1836    	SEXT	HL
0004D7 68                  A  1837    	LD	L,B
0004D8 E5C1                A  1838    	LD	BC,HL
0004DA 21390000            A  1839    	LD	HL,57
0004DE B7                  A  1840    	OR	A,A
0004DF ED42                A  1841    	SBC	HL,BC
0004E1 FA EB 04 00         A  1842    	JP	M,L__87
0004E5 EA 02 05 00         A  1843    	JP	PE,L_40
0004E9 18 04               A  1844    	JR	L__88
0004EB                     A  1845    L__87:
0004EB E2 02 05 00         A  1846    	JP	PO,L_40
0004EF                     A  1847    L__88:
                           A  1848    ;  148					{
                           A  1849    ;  149						slot = pArg[0]-'0';
                           A  1850    .LINE 149
                           A  1851    
0004EF FD21 00 00 00       A  1852    	LD	IY,_szCommandLine
0004F4 FD7E06              A  1853    	LD	A,(IY+%6)
0004F7 D630                A  1854    	SUB	A,%30
0004F9 DD77F9              A  1855    	LD	(IX+%FFFFFFF9),A
                           A  1856    ;  150						pArg+=2;
                           A  1857    .LINE 150
                           A  1858    
0004FC ED3308              A  1859    	LEA	IY,IY+%8
0004FF DD3EFD              A  1860    	LD	(IX+%FFFFFFFD),IY
                           A  1861    ;  151					}
                           A  1862    ;  152				}
                           A  1863    ;  153			}
000502                     A  1864    L_40:
                           A  1865    .LINE 153
                           A  1866    
                           A  1867    ;  154			return machine_load_image (slot
                           A  1868    .LINE 154
                           A  1869    
000502 DD07FD              A  1870    	LD	BC,(IX+%FFFFFFFD)
000505 C5                  A  1871    	PUSH	BC
000506 DD4EF9              A  1872    	LD	C,(IX+%FFFFFFF9)
000509 0600                A  1873    	LD	B,%0
00050B C5                  A  1874    	PUSH	BC
00050C CD 00 00 00         A  1875    	CALL	_machine_load_image
000510 C1                  A  1876    	POP	BC
000511 C1                  A  1877    	POP	BC
000512 C3 54 09 00         A  1878    	JR	L_107
                           A  1879    ;  155		}
000516                     A  1880    L_53:
                           A  1881    .LINE 155
                           A  1882    
                           A  1883    ;  156		if (strstr (szCommandLine,"save")==
                           A  1884    .LINE 156
                           A  1885    
000516 01 30 00 00         A  1886    	LD	BC,L__40
00051A C5                  A  1887    	PUSH	BC
00051B 01 00 00 00         A  1888    	LD	BC,_szCommandLine
00051F C5                  A  1889    	PUSH	BC
000520 CD 00 00 00         A  1890    	CALL	_strstr
000524 C1                  A  1891    	POP	BC
000525 C1                  A  1892    	POP	BC
000526 01 00 00 00         A  1893    	LD	BC,_szCommandLine
00052A B7                  A  1894    	OR	A,A
00052B ED42                A  1895    	SBC	HL,BC
00052D C2 EC 05 00         A  1896    	JR	NZ,L_61
                           A  1897    ;  157		{
                           A  1898    ;  158			pArg = szCommandLine+4;
                           A  1899    .LINE 158
                           A  1900    
000531 FD21 00 00 00       A  1901    	LD	IY,_szCommandLine
000536 ED0304              A  1902    	LEA	BC,IY+%4
000539 DD0FFD              A  1903    	LD	(IX+%FFFFFFFD),BC
                           A  1904    ;  159			if (*pArg=='\0')
                           A  1905    .LINE 159
                           A  1906    
00053C FD7E04              A  1907    	LD	A,(IY+%4)
00053F B7                  A  1908    	OR	A,A
000540 20 05               A  1909    	JR	NZ,L_51
                           A  1910    ;  160				return FALSE;
                           A  1911    .LINE 160
                           A  1912    
000542 AF                  A  1913    	XOR	A,A
000543 C3 54 09 00         A  1914    	JR	L_107
                           A  1915    ;  161			else 
000547                     A  1916    L_51:
                           A  1917    .LINE 161
                           A  1918    
                           A  1919    ;  162			{
                           A  1920    ;  163				pArg++;
                           A  1921    ;  164				begin = strtol (pArg,&pEnd,
                           A  1922    .LINE 164
                           A  1923    
000547 01100000            A  1924    	LD	BC,16
00054B C5                  A  1925    	PUSH	BC
00054C ED65FA              A  1926    	PEA	IX+%FFFFFFFA
00054F 01 05 00 00         A  1927    	LD	BC,_szCommandLine+5
000553 C5                  A  1928    	PUSH	BC
000554 CD 00 00 00         A  1929    	CALL	_strtol
000558 C1                  A  1930    	POP	BC
000559 C1                  A  1931    	POP	BC
00055A C1                  A  1932    	POP	BC
00055B DD75F1              A  1933    	LD	(IX+%FFFFFFF1),L
00055E DD74F2              A  1934    	LD	(IX+%FFFFFFF2),H
                           A  1935    ;  165				if (pEnd==NULL)
                           A  1936    .LINE 165
                           A  1937    
000561 01000000            A  1938    	LD	BC,0
000565 DD27FA              A  1939    	LD	HL,(IX+%FFFFFFFA)
000568 B7                  A  1940    	OR	A,A
000569 ED42                A  1941    	SBC	HL,BC
00056B 20 05               A  1942    	JR	NZ,L_45
                           A  1943    ;  166					return FALSE;
                           A  1944    .LINE 166
                           A  1945    
00056D AF                  A  1946    	XOR	A,A
00056E C3 54 09 00         A  1947    	JR	L_107
000572                     A  1948    L_45:
                           A  1949    ;  167				end = strtol (pEnd,&pEnd,16
                           A  1950    .LINE 167
                           A  1951    
000572 01100000            A  1952    	LD	BC,16
000576 C5                  A  1953    	PUSH	BC
000577 ED65FA              A  1954    	PEA	IX+%FFFFFFFA
00057A DD07FA              A  1955    	LD	BC,(IX+%FFFFFFFA)
00057D C5                  A  1956    	PUSH	BC
00057E CD 00 00 00         A  1957    	CALL	_strtol
000582 C1                  A  1958    	POP	BC
000583 C1                  A  1959    	POP	BC
000584 C1                  A  1960    	POP	BC
000585 DD75EC              A  1961    	LD	(IX+%FFFFFFEC),L
000588 DD74ED              A  1962    	LD	(IX+%FFFFFFED),H
                           A  1963    ;  168				if (pEnd==NULL)
                           A  1964    .LINE 168
                           A  1965    
00058B 01000000            A  1966    	LD	BC,0
00058F DD27FA              A  1967    	LD	HL,(IX+%FFFFFFFA)
000592 B7                  A  1968    	OR	A,A
000593 ED42                A  1969    	SBC	HL,BC
000595 20 05               A  1970    	JR	NZ,L_47
                           A  1971    ;  169					return FALSE;
                           A  1972    .LINE 169
                           A  1973    
000597 AF                  A  1974    	XOR	A,A
000598 C3 54 09 00         A  1975    	JR	L_107
00059C                     A  1976    L_47:
                           A  1977    ;  170				start = strtol (pEnd,&pEnd,
                           A  1978    .LINE 170
                           A  1979    
00059C 01100000            A  1980    	LD	BC,16
0005A0 C5                  A  1981    	PUSH	BC
0005A1 ED65FA              A  1982    	PEA	IX+%FFFFFFFA
0005A4 DD07FA              A  1983    	LD	BC,(IX+%FFFFFFFA)
0005A7 C5                  A  1984    	PUSH	BC
0005A8 CD 00 00 00         A  1985    	CALL	_strtol
0005AC C1                  A  1986    	POP	BC
0005AD C1                  A  1987    	POP	BC
0005AE C1                  A  1988    	POP	BC
0005AF DD75EA              A  1989    	LD	(IX+%FFFFFFEA),L
0005B2 DD74EB              A  1990    	LD	(IX+%FFFFFFEB),H
                           A  1991    ;  171				if (pEnd==NULL)
                           A  1992    .LINE 171
                           A  1993    
0005B5 01000000            A  1994    	LD	BC,0
0005B9 DD27FA              A  1995    	LD	HL,(IX+%FFFFFFFA)
0005BC B7                  A  1996    	OR	A,A
0005BD ED42                A  1997    	SBC	HL,BC
0005BF 20 05               A  1998    	JR	NZ,L_49
                           A  1999    ;  172					return FALSE;
                           A  2000    .LINE 172
                           A  2001    
0005C1 AF                  A  2002    	XOR	A,A
0005C2 C3 54 09 00         A  2003    	JR	L_107
0005C6                     A  2004    L_49:
                           A  2005    ;  173				return machine_save_image (
                           A  2006    .LINE 173
                           A  2007    
0005C6 DD07FA              A  2008    	LD	BC,(IX+%FFFFFFFA)
0005C9 03                  A  2009    	INC	BC
0005CA DD0FFA              A  2010    	LD	(IX+%FFFFFFFA),BC
0005CD C5                  A  2011    	PUSH	BC
0005CE DD07EA              A  2012    	LD	BC,(IX+%FFFFFFEA)
0005D1 C5                  A  2013    	PUSH	BC
0005D2 DD07EC              A  2014    	LD	BC,(IX+%FFFFFFEC)
0005D5 C5                  A  2015    	PUSH	BC
0005D6 DD07F1              A  2016    	LD	BC,(IX+%FFFFFFF1)
0005D9 C5                  A  2017    	PUSH	BC
0005DA 01000000            A  2018    	LD	BC,0
0005DE C5                  A  2019    	PUSH	BC
0005DF CD 00 00 00         A  2020    	CALL	_machine_save_image
0005E3 C1                  A  2021    	POP	BC
0005E4 C1                  A  2022    	POP	BC
0005E5 C1                  A  2023    	POP	BC
0005E6 C1                  A  2024    	POP	BC
0005E7 C1                  A  2025    	POP	BC
0005E8 C3 54 09 00         A  2026    	JR	L_107
                           A  2027    ;  174			}
                           A  2028    ;  175		}
0005EC                     A  2029    L_61:
                           A  2030    .LINE 175
                           A  2031    
                           A  2032    ;  176		if (strstr (szCommandLine,"mount")=
                           A  2033    .LINE 176
                           A  2034    
0005EC 01 35 00 00         A  2035    	LD	BC,L__46
0005F0 C5                  A  2036    	PUSH	BC
0005F1 01 00 00 00         A  2037    	LD	BC,_szCommandLine
0005F5 C5                  A  2038    	PUSH	BC
0005F6 CD 00 00 00         A  2039    	CALL	_strstr
0005FA C1                  A  2040    	POP	BC
0005FB C1                  A  2041    	POP	BC
0005FC 01 00 00 00         A  2042    	LD	BC,_szCommandLine
000600 B7                  A  2043    	OR	A,A
000601 ED42                A  2044    	SBC	HL,BC
000603 20 70               A  2045    	JR	NZ,L_71
                           A  2046    ;  177		{
                           A  2047    ;  178			int secsize = MSX_SECTOR_SIZE;
                           A  2048    .LINE 178
                           A  2049    
000605 01000200            A  2050    	LD	BC,512
000609 DD0FEE              A  2051    	LD	(IX+%FFFFFFEE),BC
                           A  2052    ;  179			pArg = szCommandLine+5;
                           A  2053    ;  180			if (*pArg=='\0')
                           A  2054    .LINE 180
                           A  2055    
00060C FD21 00 00 00       A  2056    	LD	IY,_szCommandLine
000611 FD7E05              A  2057    	LD	A,(IY+%5)
000614 B7                  A  2058    	OR	A,A
000615 20 05               A  2059    	JR	NZ,L_56
                           A  2060    ;  181				return FALSE;
                           A  2061    .LINE 181
                           A  2062    
000617 AF                  A  2063    	XOR	A,A
000618 C3 54 09 00         A  2064    	JR	L_107
00061C                     A  2065    L_56:
                           A  2066    ;  182			pArg++;
                           A  2067    .LINE 182
                           A  2068    
00061C ED0306              A  2069    	LEA	BC,IY+%6
00061F DD0FFD              A  2070    	LD	(IX+%FFFFFFFD),BC
                           A  2071    ;  183			if (pArg[0]=='-' && pArg[1]>='c
                           A  2072    .LINE 183
                           A  2073    
000622 ED2306              A  2074    	LEA	HL,IY+%6
000625 7E                  A  2075    	LD	A,(HL)
000626 47                  A  2076    	LD	B,A
000627 17ED62              A  2077    	SEXT	HL
00062A 68                  A  2078    	LD	L,B
00062B 012D0000            A  2079    	LD	BC,45
00062F B7                  A  2080    	OR	A,A
000630 ED42                A  2081    	SBC	HL,BC
000632 20 22               A  2082    	JR	NZ,L_59
000634 21 07 00 00         A  2083    	LD	HL,_szCommandLine+7
000638 7E                  A  2084    	LD	A,(HL)
000639 47                  A  2085    	LD	B,A
00063A 17ED62              A  2086    	SEXT	HL
00063D 68                  A  2087    	LD	L,B
00063E 01630000            A  2088    	LD	BC,99
000642 B7                  A  2089    	OR	A,A
000643 ED42                A  2090    	SBC	HL,BC
000645 FA 56 06 00         A  2091    	JP	M,L_59
                           A  2092    ;  184			{
                           A  2093    ;  185				pArg += 2;
                           A  2094    .LINE 185
                           A  2095    
000649 ED3308              A  2096    	LEA	IY,IY+%8
00064C DD3EFD              A  2097    	LD	(IX+%FFFFFFFD),IY
                           A  2098    ;  186				secsize = CPM_SECTOR_SIZE;
                           A  2099    .LINE 186
                           A  2100    
00064F 01800000            A  2101    	LD	BC,128
000653 DD0FEE              A  2102    	LD	(IX+%FFFFFFEE),BC
                           A  2103    ;  187			}
000656                     A  2104    L_59:
                           A  2105    .LINE 187
                           A  2106    
                           A  2107    ;  188			return machine_mount_disk (0,++
                           A  2108    .LINE 188
                           A  2109    
000656 DD07FD              A  2110    	LD	BC,(IX+%FFFFFFFD)
000659 03                  A  2111    	INC	BC
00065A DD0FFD              A  2112    	LD	(IX+%FFFFFFFD),BC
00065D DD07EE              A  2113    	LD	BC,(IX+%FFFFFFEE)
000660 C5                  A  2114    	PUSH	BC
000661 DD07FD              A  2115    	LD	BC,(IX+%FFFFFFFD)
000664 C5                  A  2116    	PUSH	BC
000665 01000000            A  2117    	LD	BC,0
000669 C5                  A  2118    	PUSH	BC
00066A CD 00 00 00         A  2119    	CALL	_machine_mount_disk
00066E C1                  A  2120    	POP	BC
00066F C1                  A  2121    	POP	BC
000670 C1                  A  2122    	POP	BC
000671 C3 54 09 00         A  2123    	JR	L_107
                           A  2124    ;  189		}
000675                     A  2125    L_71:
                           A  2126    .LINE 189
                           A  2127    
                           A  2128    ;  190		if (strstr (szCommandLine,"run")==s
                           A  2129    .LINE 190
                           A  2130    
000675 01 3B 00 00         A  2131    	LD	BC,L__51
000679 C5                  A  2132    	PUSH	BC
00067A 01 00 00 00         A  2133    	LD	BC,_szCommandLine
00067E C5                  A  2134    	PUSH	BC
00067F CD 00 00 00         A  2135    	CALL	_strstr
000683 C1                  A  2136    	POP	BC
000684 C1                  A  2137    	POP	BC
000685 01 00 00 00         A  2138    	LD	BC,_szCommandLine
000689 B7                  A  2139    	OR	A,A
00068A ED42                A  2140    	SBC	HL,BC
00068C C2 5C 07 00         A  2141    	JR	NZ,L_79
                           A  2142    ;  191		{
                           A  2143    ;  192			start_address = 0x0000;
                           A  2144    .LINE 192
                           A  2145    
000690 DD36F300            A  2146    	LD	(IX+%FFFFFFF3),%0
000694 DD36F400            A  2147    	LD	(IX+%FFFFFFF4),%0
                           A  2148    ;  193			pArg = szCommandLine+3;
                           A  2149    .LINE 193
                           A  2150    
000698 FD21 00 00 00       A  2151    	LD	IY,_szCommandLine
00069D ED0303              A  2152    	LEA	BC,IY+%3
0006A0 DD0FFD              A  2153    	LD	(IX+%FFFFFFFD),BC
                           A  2154    ;  194			if (*pArg!='\0')
                           A  2155    .LINE 194
                           A  2156    
0006A3 FD7E03              A  2157    	LD	A,(IY+%3)
0006A6 B7                  A  2158    	OR	A,A
0006A7 CA 33 07 00         A  2159    	JR	Z,L_69
                           A  2160    ;  195			{	
                           A  2161    ;  196				pArg++;
                           A  2162    .LINE 196
                           A  2163    
0006AB ED0304              A  2164    	LEA	BC,IY+%4
0006AE DD0FFD              A  2165    	LD	(IX+%FFFFFFFD),BC
                           A  2166    ;  197				if (pArg[0]=='-' && pArg[1]
                           A  2167    .LINE 197
                           A  2168    
0006B1 ED2304              A  2169    	LEA	HL,IY+%4
0006B4 7E                  A  2170    	LD	A,(HL)
0006B5 47                  A  2171    	LD	B,A
0006B6 17ED62              A  2172    	SEXT	HL
0006B9 68                  A  2173    	LD	L,B
0006BA 012D0000            A  2174    	LD	BC,45
0006BE B7                  A  2175    	OR	A,A
0006BF ED42                A  2176    	SBC	HL,BC
0006C1 20 4E               A  2177    	JR	NZ,L_67
0006C3 ED3305              A  2178    	LEA	IY,IY+%5
0006C6 DD3EF5              A  2179    	LD	(IX+%FFFFFFF5),IY
0006C9 DD27F5              A  2180    	LD	HL,(IX+%FFFFFFF5)
0006CC 7E                  A  2181    	LD	A,(HL)
0006CD 47                  A  2182    	LD	B,A
0006CE 17ED62              A  2183    	SEXT	HL
0006D1 68                  A  2184    	LD	L,B
0006D2 01300000            A  2185    	LD	BC,48
0006D6 B7                  A  2186    	OR	A,A
0006D7 ED42                A  2187    	SBC	HL,BC
0006D9 FA 11 07 00         A  2188    	JP	M,L_67
0006DD DD27F5              A  2189    	LD	HL,(IX+%FFFFFFF5)
0006E0 7E                  A  2190    	LD	A,(HL)
0006E1 47                  A  2191    	LD	B,A
0006E2 17ED62              A  2192    	SEXT	HL
0006E5 68                  A  2193    	LD	L,B
0006E6 E5C1                A  2194    	LD	BC,HL
0006E8 21390000            A  2195    	LD	HL,57
0006EC B7                  A  2196    	OR	A,A
0006ED ED42                A  2197    	SBC	HL,BC
0006EF FA F9 06 00         A  2198    	JP	M,L__89
0006F3 EA 11 07 00         A  2199    	JP	PE,L_67
0006F7 18 04               A  2200    	JR	L__90
0006F9                     A  2201    L__89:
0006F9 E2 11 07 00         A  2202    	JP	PO,L_67
0006FD                     A  2203    L__90:
                           A  2204    ;  198				{
                           A  2205    ;  199					slot = pArg[1]-'0';
                           A  2206    .LINE 199
                           A  2207    
0006FD DD27F5              A  2208    	LD	HL,(IX+%FFFFFFF5)
000700 7E                  A  2209    	LD	A,(HL)
000701 D630                A  2210    	SUB	A,%30
000703 DD77F9              A  2211    	LD	(IX+%FFFFFFF9),A
                           A  2212    ;  200					pArg+=2;
                           A  2213    .LINE 200
                           A  2214    
000706 FD21 00 00 00       A  2215    	LD	IY,_szCommandLine
00070B ED3306              A  2216    	LEA	IY,IY+%6
00070E DD3EFD              A  2217    	LD	(IX+%FFFFFFFD),IY
                           A  2218    ;  201				}
000711                     A  2219    L_67:
                           A  2220    .LINE 201
                           A  2221    
                           A  2222    ;  202				if (pArg[0]!='\0]')
                           A  2223    .LINE 202
                           A  2224    
000711 DD27FD              A  2225    	LD	HL,(IX+%FFFFFFFD)
000714 7E                  A  2226    	LD	A,(HL)
000715 B7                  A  2227    	OR	A,A
000716 28 1B               A  2228    	JR	Z,L_69
                           A  2229    ;  203					start_address = strtol 
                           A  2230    .LINE 203
                           A  2231    
000718 01100000            A  2232    	LD	BC,16
00071C C5                  A  2233    	PUSH	BC
00071D 01000000            A  2234    	LD	BC,0
000721 C5                  A  2235    	PUSH	BC
000722 DD07FD              A  2236    	LD	BC,(IX+%FFFFFFFD)
000725 C5                  A  2237    	PUSH	BC
000726 CD 00 00 00         A  2238    	CALL	_strtol
00072A C1                  A  2239    	POP	BC
00072B C1                  A  2240    	POP	BC
00072C C1                  A  2241    	POP	BC
00072D DD75F3              A  2242    	LD	(IX+%FFFFFFF3),L
000730 DD74F4              A  2243    	LD	(IX+%FFFFFFF4),H
                           A  2244    ;  204			}
000733                     A  2245    L_69:
                           A  2246    .LINE 204
                           A  2247    
                           A  2248    ;  205			printf ("\r\n[Personality Modul
                           A  2249    .LINE 205
                           A  2250    
000733 01 00 00 00         A  2251    	LD	BC,___print_uputch
000737 ED43 00 00 00       A  2252    	LD	(___print_xputch),BC
00073C 01 3F 00 00         A  2253    	LD	BC,L__58
000740 C5                  A  2254    	PUSH	BC
000741 CD 00 00 00         A  2255    	CALL	___print_sendstring
000745 C1                  A  2256    	POP	BC
                           A  2257    ;  206			machine_start (slot,start_addre
                           A  2258    .LINE 206
                           A  2259    
000746 DD07F3              A  2260    	LD	BC,(IX+%FFFFFFF3)
000749 C5                  A  2261    	PUSH	BC
00074A DD4EF9              A  2262    	LD	C,(IX+%FFFFFFF9)
00074D 0600                A  2263    	LD	B,%0
00074F C5                  A  2264    	PUSH	BC
000750 CD 00 00 00         A  2265    	CALL	_machine_start
000754 C1                  A  2266    	POP	BC
000755 C1                  A  2267    	POP	BC
                           A  2268    ;  207			return TRUE;
                           A  2269    .LINE 207
                           A  2270    
000756 3E01                A  2271    	LD	A,%1
000758 C3 54 09 00         A  2272    	JR	L_107
                           A  2273    ;  208		}
00075C                     A  2274    L_79:
                           A  2275    .LINE 208
                           A  2276    
                           A  2277    ;  209		if (strstr (szCommandLine,"vsync")=
                           A  2278    .LINE 209
                           A  2279    
00075C 01 5F 00 00         A  2280    	LD	BC,L__59
000760 C5                  A  2281    	PUSH	BC
000761 01 00 00 00         A  2282    	LD	BC,_szCommandLine
000765 C5                  A  2283    	PUSH	BC
000766 CD 00 00 00         A  2284    	CALL	_strstr
00076A C1                  A  2285    	POP	BC
00076B C1                  A  2286    	POP	BC
00076C 01 00 00 00         A  2287    	LD	BC,_szCommandLine
000770 B7                  A  2288    	OR	A,A
000771 ED42                A  2289    	SBC	HL,BC
000773 20 63               A  2290    	JR	NZ,L_83
                           A  2291    ;  210		{
                           A  2292    ;  211			BOOL vsync = TRUE;
                           A  2293    .LINE 211
                           A  2294    
000775 DD36F801            A  2295    	LD	(IX+%FFFFFFF8),%1
                           A  2296    ;  212			pArg = szCommandLine+5;
                           A  2297    .LINE 212
                           A  2298    
000779 FD21 00 00 00       A  2299    	LD	IY,_szCommandLine
00077E ED0305              A  2300    	LEA	BC,IY+%5
000781 DD0FFD              A  2301    	LD	(IX+%FFFFFFFD),BC
                           A  2302    ;  213			if (*pArg!='\0')
                           A  2303    .LINE 213
                           A  2304    
000784 FD7E05              A  2305    	LD	A,(IY+%5)
000787 B7                  A  2306    	OR	A,A
000788 28 3D               A  2307    	JR	Z,L_77
                           A  2308    ;  214			{	
                           A  2309    ;  215				pArg++;
                           A  2310    ;  216				if (pArg[0]=='o' && pArg[1]
                           A  2311    .LINE 216
                           A  2312    
00078A 21 06 00 00         A  2313    	LD	HL,_szCommandLine+6
00078E 7E                  A  2314    	LD	A,(HL)
00078F 47                  A  2315    	LD	B,A
000790 17ED62              A  2316    	SEXT	HL
000793 68                  A  2317    	LD	L,B
000794 016F0000            A  2318    	LD	BC,111
000798 B7                  A  2319    	OR	A,A
000799 ED42                A  2320    	SBC	HL,BC
00079B 20 2A               A  2321    	JR	NZ,L_77
00079D 21 07 00 00         A  2322    	LD	HL,_szCommandLine+7
0007A1 7E                  A  2323    	LD	A,(HL)
0007A2 47                  A  2324    	LD	B,A
0007A3 17ED62              A  2325    	SEXT	HL
0007A6 68                  A  2326    	LD	L,B
0007A7 01660000            A  2327    	LD	BC,102
0007AB B7                  A  2328    	OR	A,A
0007AC ED42                A  2329    	SBC	HL,BC
0007AE 20 17               A  2330    	JR	NZ,L_77
0007B0 21 08 00 00         A  2331    	LD	HL,_szCommandLine+8
0007B4 7E                  A  2332    	LD	A,(HL)
0007B5 47                  A  2333    	LD	B,A
0007B6 17ED62              A  2334    	SEXT	HL
0007B9 68                  A  2335    	LD	L,B
0007BA 01660000            A  2336    	LD	BC,102
0007BE B7                  A  2337    	OR	A,A
0007BF ED42                A  2338    	SBC	HL,BC
0007C1 20 04               A  2339    	JR	NZ,L_77
                           A  2340    ;  217					vsync = FALSE;
                           A  2341    .LINE 217
                           A  2342    
0007C3 DD36F800            A  2343    	LD	(IX+%FFFFFFF8),%0
                           A  2344    ;  218			}
0007C7                     A  2345    L_77:
                           A  2346    .LINE 218
                           A  2347    
                           A  2348    ;  219			machine_set_vsync (vsync);
                           A  2349    .LINE 219
                           A  2350    
0007C7 DD4EF8              A  2351    	LD	C,(IX+%FFFFFFF8)
0007CA 0600                A  2352    	LD	B,%0
0007CC C5                  A  2353    	PUSH	BC
0007CD CD 00 00 00         A  2354    	CALL	_machine_set_vsync
0007D1 C1                  A  2355    	POP	BC
                           A  2356    ;  220			return TRUE;
                           A  2357    .LINE 220
                           A  2358    
0007D2 3E01                A  2359    	LD	A,%1
0007D4 C3 54 09 00         A  2360    	JR	L_107
                           A  2361    ;  221		}
0007D8                     A  2362    L_83:
                           A  2363    .LINE 221
                           A  2364    
                           A  2365    ;  222		if (strstr (szCommandLine,"dir")==s
                           A  2366    .LINE 222
                           A  2367    
0007D8 01 65 00 00         A  2368    	LD	BC,L__65
0007DC C5                  A  2369    	PUSH	BC
0007DD 01 00 00 00         A  2370    	LD	BC,_szCommandLine
0007E1 C5                  A  2371    	PUSH	BC
0007E2 CD 00 00 00         A  2372    	CALL	_strstr
0007E6 C1                  A  2373    	POP	BC
0007E7 C1                  A  2374    	POP	BC
0007E8 01 00 00 00         A  2375    	LD	BC,_szCommandLine
0007EC B7                  A  2376    	OR	A,A
0007ED ED42                A  2377    	SBC	HL,BC
0007EF 20 27               A  2378    	JR	NZ,L_87
                           A  2379    ;  223		{
                           A  2380    ;  224			pArg = szCommandLine+3;
                           A  2381    ;  225			if (*pArg=='\0')
                           A  2382    .LINE 225
                           A  2383    
0007F1 FD21 00 00 00       A  2384    	LD	IY,_szCommandLine
0007F6 FD7E03              A  2385    	LD	A,(IY+%3)
0007F9 B7                  A  2386    	OR	A,A
0007FA 20 0E               A  2387    	JR	NZ,L_81
                           A  2388    ;  226				return cp_DIR (".");
                           A  2389    .LINE 226
                           A  2390    
0007FC 01 69 00 00         A  2391    	LD	BC,L__68
000800 C5                  A  2392    	PUSH	BC
000801 CD 2C 00 00         A  2393    	CALL	_cp_DIR
000805 C1                  A  2394    	POP	BC
000806 C3 54 09 00         A  2395    	JR	L_107
                           A  2396    ;  227			else
00080A                     A  2397    L_81:
                           A  2398    .LINE 227
                           A  2399    
                           A  2400    ;  228				return cp_DIR (++pArg);
                           A  2401    .LINE 228
                           A  2402    
00080A 01 04 00 00         A  2403    	LD	BC,_szCommandLine+4
00080E C5                  A  2404    	PUSH	BC
00080F CD 2C 00 00         A  2405    	CALL	_cp_DIR
000813 C1                  A  2406    	POP	BC
000814 C3 54 09 00         A  2407    	JR	L_107
                           A  2408    ;  229		}
000818                     A  2409    L_87:
                           A  2410    .LINE 229
                           A  2411    
                           A  2412    ;  230		if (strstr (szCommandLine,"cd")==sz
                           A  2413    .LINE 230
                           A  2414    
000818 01 6B 00 00         A  2415    	LD	BC,L__69
00081C C5                  A  2416    	PUSH	BC
00081D 01 00 00 00         A  2417    	LD	BC,_szCommandLine
000821 C5                  A  2418    	PUSH	BC
000822 CD 00 00 00         A  2419    	CALL	_strstr
000826 C1                  A  2420    	POP	BC
000827 C1                  A  2421    	POP	BC
000828 01 00 00 00         A  2422    	LD	BC,_szCommandLine
00082C B7                  A  2423    	OR	A,A
00082D ED42                A  2424    	SBC	HL,BC
00082F 20 1E               A  2425    	JR	NZ,L_91
                           A  2426    ;  231		{
                           A  2427    ;  232			pArg = szCommandLine+2;
                           A  2428    ;  233			if (*pArg=='\0')
                           A  2429    .LINE 233
                           A  2430    
000831 FD21 00 00 00       A  2431    	LD	IY,_szCommandLine
000836 FD7E02              A  2432    	LD	A,(IY+%2)
000839 B7                  A  2433    	OR	A,A
00083A 20 05               A  2434    	JR	NZ,L_85
                           A  2435    ;  234				return FALSE;
                           A  2436    .LINE 234
                           A  2437    
00083C AF                  A  2438    	XOR	A,A
00083D C3 54 09 00         A  2439    	JR	L_107
                           A  2440    ;  235			else
000841                     A  2441    L_85:
                           A  2442    .LINE 235
                           A  2443    
                           A  2444    ;  236				return cp_CD (++pArg);
                           A  2445    .LINE 236
                           A  2446    
000841 01 03 00 00         A  2447    	LD	BC,_szCommandLine+3
000845 C5                  A  2448    	PUSH	BC
000846 CD 00 00 00         A  2449    	CALL	_cp_CD
00084A C1                  A  2450    	POP	BC
00084B C3 54 09 00         A  2451    	JR	L_107
                           A  2452    ;  237		}
00084F                     A  2453    L_91:
                           A  2454    .LINE 237
                           A  2455    
                           A  2456    ;  238		if (strstr (szCommandLine,"mkdir")=
                           A  2457    .LINE 238
                           A  2458    
00084F 01 6E 00 00         A  2459    	LD	BC,L__72
000853 C5                  A  2460    	PUSH	BC
000854 01 00 00 00         A  2461    	LD	BC,_szCommandLine
000858 C5                  A  2462    	PUSH	BC
000859 CD 00 00 00         A  2463    	CALL	_strstr
00085D C1                  A  2464    	POP	BC
00085E C1                  A  2465    	POP	BC
00085F 01 00 00 00         A  2466    	LD	BC,_szCommandLine
000863 B7                  A  2467    	OR	A,A
000864 ED42                A  2468    	SBC	HL,BC
000866 20 1E               A  2469    	JR	NZ,L_95
                           A  2470    ;  239		{
                           A  2471    ;  240			pArg = szCommandLine+5;
                           A  2472    ;  241			if (*pArg=='\0')
                           A  2473    .LINE 241
                           A  2474    
000868 FD21 00 00 00       A  2475    	LD	IY,_szCommandLine
00086D FD7E05              A  2476    	LD	A,(IY+%5)
000870 B7                  A  2477    	OR	A,A
000871 20 05               A  2478    	JR	NZ,L_89
                           A  2479    ;  242				return FALSE;
                           A  2480    .LINE 242
                           A  2481    
000873 AF                  A  2482    	XOR	A,A
000874 C3 54 09 00         A  2483    	JR	L_107
                           A  2484    ;  243			else
000878                     A  2485    L_89:
                           A  2486    .LINE 243
                           A  2487    
                           A  2488    ;  244				return cp_MKDIR (++pArg);
                           A  2489    .LINE 244
                           A  2490    
000878 01 06 00 00         A  2491    	LD	BC,_szCommandLine+6
00087C C5                  A  2492    	PUSH	BC
00087D CD DF 02 00         A  2493    	CALL	_cp_MKDIR
000881 C1                  A  2494    	POP	BC
000882 C3 54 09 00         A  2495    	JR	L_107
                           A  2496    ;  245		}
000886                     A  2497    L_95:
                           A  2498    .LINE 245
                           A  2499    
                           A  2500    ;  246		if (strstr (szCommandLine,"del")==s
                           A  2501    .LINE 246
                           A  2502    
000886 01 74 00 00         A  2503    	LD	BC,L__75
00088A C5                  A  2504    	PUSH	BC
00088B 01 00 00 00         A  2505    	LD	BC,_szCommandLine
00088F C5                  A  2506    	PUSH	BC
000890 CD 00 00 00         A  2507    	CALL	_strstr
000894 C1                  A  2508    	POP	BC
000895 C1                  A  2509    	POP	BC
000896 01 00 00 00         A  2510    	LD	BC,_szCommandLine
00089A B7                  A  2511    	OR	A,A
00089B ED42                A  2512    	SBC	HL,BC
00089D 20 1E               A  2513    	JR	NZ,L_99
                           A  2514    ;  247		{
                           A  2515    ;  248			pArg = szCommandLine+3;
                           A  2516    ;  249			if (*pArg=='\0')
                           A  2517    .LINE 249
                           A  2518    
00089F FD21 00 00 00       A  2519    	LD	IY,_szCommandLine
0008A4 FD7E03              A  2520    	LD	A,(IY+%3)
0008A7 B7                  A  2521    	OR	A,A
0008A8 20 05               A  2522    	JR	NZ,L_93
                           A  2523    ;  250				return FALSE;
                           A  2524    .LINE 250
                           A  2525    
0008AA AF                  A  2526    	XOR	A,A
0008AB C3 54 09 00         A  2527    	JR	L_107
                           A  2528    ;  251			else
0008AF                     A  2529    L_93:
                           A  2530    .LINE 251
                           A  2531    
                           A  2532    ;  252				return cp_DEL (++pArg);
                           A  2533    .LINE 252
                           A  2534    
0008AF 01 04 00 00         A  2535    	LD	BC,_szCommandLine+4
0008B3 C5                  A  2536    	PUSH	BC
0008B4 CD 0B 03 00         A  2537    	CALL	_cp_DEL
0008B8 C1                  A  2538    	POP	BC
0008B9 C3 54 09 00         A  2539    	JR	L_107
                           A  2540    ;  253		}
0008BD                     A  2541    L_99:
                           A  2542    .LINE 253
                           A  2543    
                           A  2544    ;  254		if (strstr (szCommandLine,"open")==
                           A  2545    .LINE 254
                           A  2546    
0008BD 01 78 00 00         A  2547    	LD	BC,L__78
0008C1 C5                  A  2548    	PUSH	BC
0008C2 01 00 00 00         A  2549    	LD	BC,_szCommandLine
0008C6 C5                  A  2550    	PUSH	BC
0008C7 CD 00 00 00         A  2551    	CALL	_strstr
0008CB C1                  A  2552    	POP	BC
0008CC C1                  A  2553    	POP	BC
0008CD 01 00 00 00         A  2554    	LD	BC,_szCommandLine
0008D1 B7                  A  2555    	OR	A,A
0008D2 ED42                A  2556    	SBC	HL,BC
0008D4 20 1A               A  2557    	JR	NZ,L_103
                           A  2558    ;  255		{
                           A  2559    ;  256			pArg = szCommandLine+4;
                           A  2560    ;  257			if (*pArg=='\0')
                           A  2561    .LINE 257
                           A  2562    
0008D6 FD21 00 00 00       A  2563    	LD	IY,_szCommandLine
0008DB FD7E04              A  2564    	LD	A,(IY+%4)
0008DE B7                  A  2565    	OR	A,A
0008DF 20 03               A  2566    	JR	NZ,L_97
                           A  2567    ;  258				return FALSE;
                           A  2568    .LINE 258
                           A  2569    
0008E1 AF                  A  2570    	XOR	A,A
0008E2 18 70               A  2571    	JR	L_107
                           A  2572    ;  259			else
0008E4                     A  2573    L_97:
                           A  2574    .LINE 259
                           A  2575    
                           A  2576    ;  260				return cp_exec_batch_file (
                           A  2577    .LINE 260
                           A  2578    
0008E4 01 05 00 00         A  2579    	LD	BC,_szCommandLine+5
0008E8 C5                  A  2580    	PUSH	BC
0008E9 CD 37 03 00         A  2581    	CALL	_cp_exec_batch_file
0008ED C1                  A  2582    	POP	BC
0008EE 18 64               A  2583    	JR	L_107
                           A  2584    ;  261		}
0008F0                     A  2585    L_103:
                           A  2586    .LINE 261
                           A  2587    
                           A  2588    ;  262		if (strstr (szCommandLine,"type")==
                           A  2589    .LINE 262
                           A  2590    
0008F0 01 7D 00 00         A  2591    	LD	BC,L__81
0008F4 C5                  A  2592    	PUSH	BC
0008F5 01 00 00 00         A  2593    	LD	BC,_szCommandLine
0008F9 C5                  A  2594    	PUSH	BC
0008FA CD 00 00 00         A  2595    	CALL	_strstr
0008FE C1                  A  2596    	POP	BC
0008FF C1                  A  2597    	POP	BC
000900 01 00 00 00         A  2598    	LD	BC,_szCommandLine
000904 B7                  A  2599    	OR	A,A
000905 ED42                A  2600    	SBC	HL,BC
000907 20 2D               A  2601    	JR	NZ,L_105
                           A  2602    ;  263		{
                           A  2603    ;  264			pArg = szCommandLine+4;
                           A  2604    ;  265			if (*pArg=='\0')
                           A  2605    .LINE 265
                           A  2606    
000909 FD21 00 00 00       A  2607    	LD	IY,_szCommandLine
00090E FD7E04              A  2608    	LD	A,(IY+%4)
000911 B7                  A  2609    	OR	A,A
000912 20 03               A  2610    	JR	NZ,L_101
                           A  2611    ;  266				return FALSE;
                           A  2612    .LINE 266
                           A  2613    
000914 AF                  A  2614    	XOR	A,A
000915 18 3D               A  2615    	JR	L_107
                           A  2616    ;  267			else
000917                     A  2617    L_101:
                           A  2618    .LINE 267
                           A  2619    
                           A  2620    ;  268			{
                           A  2621    ;  269				printf ("\r\n");
                           A  2622    .LINE 269
                           A  2623    
000917 01 00 00 00         A  2624    	LD	BC,___print_uputch
00091B ED43 00 00 00       A  2625    	LD	(___print_xputch),BC
000920 01 82 00 00         A  2626    	LD	BC,L__84
000924 C5                  A  2627    	PUSH	BC
000925 CD 00 00 00         A  2628    	CALL	___print_sendstring
000929 C1                  A  2629    	POP	BC
                           A  2630    ;  270				return cp_type (++pArg);
                           A  2631    .LINE 270
                           A  2632    
00092A 01 05 00 00         A  2633    	LD	BC,_szCommandLine+5
00092E C5                  A  2634    	PUSH	BC
00092F CD 9E 03 00         A  2635    	CALL	_cp_type
000933 C1                  A  2636    	POP	BC
000934 18 1E               A  2637    	JR	L_107
                           A  2638    ;  271			}
                           A  2639    ;  272		}
000936                     A  2640    L_105:
                           A  2641    .LINE 272
                           A  2642    
                           A  2643    ;  273		if (strstr (szCommandLine,"rem")==s
                           A  2644    .LINE 273
                           A  2645    
000936 01 85 00 00         A  2646    	LD	BC,L__85
00093A C5                  A  2647    	PUSH	BC
00093B 01 00 00 00         A  2648    	LD	BC,_szCommandLine
00093F C5                  A  2649    	PUSH	BC
000940 CD 00 00 00         A  2650    	CALL	_strstr
000944 C1                  A  2651    	POP	BC
000945 C1                  A  2652    	POP	BC
000946 01 00 00 00         A  2653    	LD	BC,_szCommandLine
00094A B7                  A  2654    	OR	A,A
00094B ED42                A  2655    	SBC	HL,BC
00094D 20 04               A  2656    	JR	NZ,L_106
                           A  2657    ;  274		{
                           A  2658    ;  275			return TRUE;
                           A  2659    .LINE 275
                           A  2660    
00094F 3E01                A  2661    	LD	A,%1
000951 18 01               A  2662    	JR	L_107
                           A  2663    ;  276		}
000953                     A  2664    L_106:
                           A  2665    .LINE 276
                           A  2666    
                           A  2667    ;  277		return FALSE;
                           A  2668    .LINE 277
                           A  2669    
000953 AF                  A  2670    	XOR	A,A
                           A  2671    ;  278	}
000954                     A  2672    L_107:
                           A  2673    .LINE 278
                           A  2674    
000954 DDF9                A  2675    	LD	SP,IX
000956 DDE1                A  2676    	POP	IX
000958 C9                  A  2677    	RET	
                           A  2678    
                           A  2679    
                           A  2680    ;**************************** _cp_process *****
                           A  2681    ;Name                         Addr/Register   S
                           A  2682    ;_cp_type                            IMPORT  --
                           A  2683    ;_cp_exec_batch_file                 IMPORT  --
                           A  2684    ;_cp_DEL                             IMPORT  --
                           A  2685    ;_cp_MKDIR                           IMPORT  --
                           A  2686    ;_cp_CD                              IMPORT  --
                           A  2687    ;_cp_DIR                             IMPORT  --
                           A  2688    ;_machine_set_vsync                  IMPORT  --
                           A  2689    ;_machine_start                      IMPORT  --
                           A  2690    ;___print_sendstring                 IMPORT  --
                           A  2691    ;___print_xputch                     IMPORT    
                           A  2692    ;___print_uputch                     IMPORT  --
                           A  2693    ;_machine_mount_disk                 IMPORT  --
                           A  2694    ;_machine_save_image                 IMPORT  --
                           A  2695    ;_strtol                             IMPORT  --
                           A  2696    ;_machine_load_image                 IMPORT  --
                           A  2697    ;_machine_set_warmboot_image         IMPORT  --
                           A  2698    ;_machine_init                       IMPORT  --
                           A  2699    ;_szCommandLine                      STATIC    
                           A  2700    ;_strstr                             IMPORT  --
                           A  2701    ;start                                IX-22    
                           A  2702    ;end                                  IX-20    
                           A  2703    ;secsize                              IX-18    
                           A  2704    ;begin                                IX-15    
                           A  2705    ;start_address                        IX-13    
                           A  2706    ;G_7                                  IX-11    
                           A  2707    ;vsync                                 IX-8    
                           A  2708    ;slot                                  IX-7    
                           A  2709    ;pEnd                                  IX-6    
                           A  2710    ;pArg                                  IX-3    
                           A  2711    
                           A  2712    
                           A  2713    ; Stack Frame Size: 28 (bytes)
                           A  2714    ;       Spill Code: 0 (instruction)
                           A  2715    
                           A  2716    
                           A  2717    .ENDFUNC "cp_process",278,"_cp_process"
                           A  2718    	SEGMENT STRSECT
000026                     A  2719    L__31:
000026 696E6974            A  2720    	DB	"init"
00002A 00                  A  2721    	DB	0
00002B                     A  2722    L__33:
00002B 6C6F6164            A  2723    	DB	"load"
00002F 00                  A  2724    	DB	0
000030                     A  2725    L__40:
000030 73617665            A  2726    	DB	"save"
000034 00                  A  2727    	DB	0
000035                     A  2728    L__46:
000035 6D6F756E 74         A  2729    	DB	"mount"
00003A 00                  A  2730    	DB	0
00003B                     A  2731    L__51:
00003B 72756E              A  2732    	DB	"run"
00003E 00                  A  2733    	DB	0
00003F                     A  2734    L__58:
00003F 0D0A                A  2735    	DB	13,10
000041 5B506572 736F6E61   A  2736    	DB	"[Personality Module active]"
000049 6C697479 204D6F64 
000051 756C6520 61637469 
000059 76655D 
00005C 0D0A00              A  2737    	DB	13,10,0
00005F                     A  2738    L__59:
00005F 7673796E 63         A  2739    	DB	"vsync"
000064 00                  A  2740    	DB	0
000065                     A  2741    L__65:
000065 646972              A  2742    	DB	"dir"
000068 00                  A  2743    	DB	0
000069                     A  2744    L__68:
000069 2E                  A  2745    	DB	"."
00006A 00                  A  2746    	DB	0
00006B                     A  2747    L__69:
00006B 6364                A  2748    	DB	"cd"
00006D 00                  A  2749    	DB	0
00006E                     A  2750    L__72:
00006E 6D6B6469 72         A  2751    	DB	"mkdir"
000073 00                  A  2752    	DB	0
000074                     A  2753    L__75:
000074 64656C              A  2754    	DB	"del"
000077 00                  A  2755    	DB	0
000078                     A  2756    L__78:
000078 6F70656E            A  2757    	DB	"open"
00007C 00                  A  2758    	DB	0
00007D                     A  2759    L__81:
00007D 74797065            A  2760    	DB	"type"
000081 00                  A  2761    	DB	0
000082                     A  2762    L__84:
000082 0D0A00              A  2763    	DB	13,10,0
000085                     A  2764    L__85:
000085 72656D              A  2765    	DB	"rem"
000088 00                  A  2766    	DB	0
                           A  2767    	SEGMENT CODE
                           A  2768    ;  279	
                           A  2769    ;  280	void process_character (INT ch)
                           A  2770    ;  281	{
000959                     A  2771    _process_character:
                           A  2772    .DEFINE "_process_character"
                           A  2773    
                           A  2774    .VALUE _process_character
                           A  2775    
                           A  2776    .CLASS 2
                           A  2777    
                           A  2778    .TYPE 65
                           A  2779    
                           A  2780    .ENDEF
                           A  2781    
                           A  2782    .BEGFUNC "process_character",281,"_process_char
                           A  2783    
                           A  2784    .LINE 281
                           A  2785    
                           A  2786    .DEFINE "ch"
                           A  2787    
                           A  2788    .CLASS 65
                           A  2789    
                           A  2790    .VALUE 6
                           A  2791    
                           A  2792    .TYPE 4
                           A  2793    
                           A  2794    .ENDEF
                           A  2795    
000959 DDE5                A  2796    	PUSH	IX
00095B DD210000 00         A  2797    	LD	IX,0
000960 DD39                A  2798    	ADD	IX,SP
                           A  2799    ;  282		if (ch>=0x20 && ch<0x7f) 
                           A  2800    .LINE 282
                           A  2801    
000962 01200000            A  2802    	LD	BC,32
000966 DD2706              A  2803    	LD	HL,(IX+%6)
000969 B7                  A  2804    	OR	A,A
00096A ED42                A  2805    	SBC	HL,BC
00096C FA A4 09 00         A  2806    	JP	M,L_114
000970 017F0000            A  2807    	LD	BC,127
000974 DD2706              A  2808    	LD	HL,(IX+%6)
000977 B7                  A  2809    	OR	A,A
000978 ED42                A  2810    	SBC	HL,BC
00097A F2 84 09 00         A  2811    	JP	P,L__100
00097E EA A4 09 00         A  2812    	JP	PE,L_114
000982 18 04               A  2813    	JR	L__101
000984                     A  2814    L__100:
000984 E2 A4 09 00         A  2815    	JP	PO,L_114
000988                     A  2816    L__101:
                           A  2817    ;  283		{
                           A  2818    ;  284			putch(ch);
                           A  2819    .LINE 284
                           A  2820    
000988 DD0706              A  2821    	LD	BC,(IX+%6)
00098B C5                  A  2822    	PUSH	BC
00098C CD 00 00 00         A  2823    	CALL	_putch
000990 C1                  A  2824    	POP	BC
                           A  2825    ;  285			*ptrCommandLine = ch;
                           A  2826    .LINE 285
                           A  2827    
000991 DD7E06              A  2828    	LD	A,(IX+%6)
000994 2A FF 00 00         A  2829    	LD	HL,(_ptrCommandLine)
000998 77                  A  2830    	LD	(HL),A
                           A  2831    ;  286			ptrCommandLine++;
                           A  2832    .LINE 286
                           A  2833    
000999 ED4B FF 00 00       A  2834    	LD	BC,(_ptrCommandLine)
00099E 03                  A  2835    	INC	BC
00099F ED43 FF 00 00       A  2836    	LD	(_ptrCommandLine),BC
                           A  2837    ;  287		}
0009A4                     A  2838    L_114:
                           A  2839    .LINE 287
                           A  2840    
                           A  2841    ;  288		if (ch == '\r') // carriage return
                           A  2842    .LINE 288
                           A  2843    
0009A4 010D0000            A  2844    	LD	BC,13
0009A8 DD2706              A  2845    	LD	HL,(IX+%6)
0009AB B7                  A  2846    	OR	A,A
0009AC ED42                A  2847    	SBC	HL,BC
0009AE 20 3E               A  2848    	JR	NZ,L_118
                           A  2849    ;  289		{
                           A  2850    ;  290			*ptrCommandLine=0;
                           A  2851    .LINE 290
                           A  2852    
0009B0 2A FF 00 00         A  2853    	LD	HL,(_ptrCommandLine)
0009B4 3600                A  2854    	LD	(HL),%0
                           A  2855    ;  291			ptrCommandLine=szCommandLine;
                           A  2856    .LINE 291
                           A  2857    
0009B6 01 00 00 00         A  2858    	LD	BC,_szCommandLine
0009BA ED43 FF 00 00       A  2859    	LD	(_ptrCommandLine),BC
                           A  2860    ;  292			if (cp_process ())
                           A  2861    .LINE 292
                           A  2862    
0009BF CD 15 04 00         A  2863    	CALL	_cp_process
0009C3 B7                  A  2864    	OR	A,A
0009C4 28 15               A  2865    	JR	Z,L_112
                           A  2866    ;  293				printf ("\r\nOK\r\n*");
                           A  2867    .LINE 293
                           A  2868    
0009C6 01 00 00 00         A  2869    	LD	BC,___print_uputch
0009CA ED43 00 00 00       A  2870    	LD	(___print_xputch),BC
0009CF 01 89 00 00         A  2871    	LD	BC,L__96
0009D3 C5                  A  2872    	PUSH	BC
0009D4 CD 00 00 00         A  2873    	CALL	___print_sendstring
0009D8 C1                  A  2874    	POP	BC
                           A  2875    ;  294			else
                           A  2876    .LINE 294
                           A  2877    
0009D9 18 13               A  2878    	JR	L_118
0009DB                     A  2879    L_112:
                           A  2880    ;  295				printf ("\r\nSyntax error\r
                           A  2881    .LINE 295
                           A  2882    
0009DB 01 00 00 00         A  2883    	LD	BC,___print_uputch
0009DF ED43 00 00 00       A  2884    	LD	(___print_xputch),BC
0009E4 01 91 00 00         A  2885    	LD	BC,L__97
0009E8 C5                  A  2886    	PUSH	BC
0009E9 CD 00 00 00         A  2887    	CALL	___print_sendstring
0009ED C1                  A  2888    	POP	BC
                           A  2889    ;  296		}
0009EE                     A  2890    L_118:
                           A  2891    .LINE 296
                           A  2892    
                           A  2893    ;  297		if (ch == 0x7f) // backspace
                           A  2894    .LINE 297
                           A  2895    
0009EE 017F0000            A  2896    	LD	BC,127
0009F2 DD2706              A  2897    	LD	HL,(IX+%6)
0009F5 B7                  A  2898    	OR	A,A
0009F6 ED42                A  2899    	SBC	HL,BC
0009F8 20 22               A  2900    	JR	NZ,L_119
                           A  2901    ;  298		{
                           A  2902    ;  299			if (ptrCommandLine>szCommandLin
                           A  2903    .LINE 299
                           A  2904    
0009FA ED4B FF 00 00       A  2905    	LD	BC,(_ptrCommandLine)
0009FF 21 00 00 00         A  2906    	LD	HL,_szCommandLine
000A03 B7                  A  2907    	OR	A,A
000A04 ED42                A  2908    	SBC	HL,BC
000A06 30 14               A  2909    	JR	NC,L_119
                           A  2910    ;  300			{
                           A  2911    ;  301				putch (ch);
                           A  2912    .LINE 301
                           A  2913    
000A08 DD0706              A  2914    	LD	BC,(IX+%6)
000A0B C5                  A  2915    	PUSH	BC
000A0C CD 00 00 00         A  2916    	CALL	_putch
000A10 C1                  A  2917    	POP	BC
                           A  2918    ;  302				ptrCommandLine--;
                           A  2919    .LINE 302
                           A  2920    
000A11 ED4B FF 00 00       A  2921    	LD	BC,(_ptrCommandLine)
000A16 0B                  A  2922    	DEC	BC
000A17 ED43 FF 00 00       A  2923    	LD	(_ptrCommandLine),BC
                           A  2924    ;  303			}
                           A  2925    ;  304		}
                           A  2926    ;  305	}
000A1C                     A  2927    L_119:
                           A  2928    .LINE 305
                           A  2929    
000A1C DDF9                A  2930    	LD	SP,IX
000A1E DDE1                A  2931    	POP	IX
000A20 C9                  A  2932    	RET	
                           A  2933    
                           A  2934    
                           A  2935    ;**************************** _process_characte
                           A  2936    ;Name                         Addr/Register   S
                           A  2937    ;___print_sendstring                 IMPORT  --
                           A  2938    ;___print_xputch                     IMPORT    
                           A  2939    ;___print_uputch                     IMPORT  --
                           A  2940    ;_cp_process                         IMPORT  --
                           A  2941    ;_szCommandLine                      STATIC    
                           A  2942    ;_ptrCommandLine                     STATIC    
                           A  2943    ;_putch                              IMPORT  --
                           A  2944    ;ch                                    IX+6    
                           A  2945    
                           A  2946    
                           A  2947    ; Stack Frame Size: 9 (bytes)
                           A  2948    ;       Spill Code: 0 (instruction)
                           A  2949    
                           A  2950    
                           A  2951    .ENDFUNC "process_character",305,"_process_char
                           A  2952    	SEGMENT STRSECT
000089                     A  2953    L__96:
000089 0D0A                A  2954    	DB	13,10
00008B 4F4B                A  2955    	DB	"OK"
00008D 0D0A                A  2956    	DB	13,10
00008F 2A                  A  2957    	DB	"*"
000090 00                  A  2958    	DB	0
000091                     A  2959    L__97:
000091 0D0A                A  2960    	DB	13,10
000093 53796E74 61782065   A  2961    	DB	"Syntax error"
00009B 72726F72 
00009F 0D0A                A  2962    	DB	13,10
0000A1 2A                  A  2963    	DB	"*"
0000A2 00                  A  2964    	DB	0
                           A  2965    	SEGMENT CODE
                           A  2966    ;  306	void process_cmd (INT ch)
                           A  2967    ;  307	{
000A21                     A  2968    _process_cmd:
                           A  2969    .DEFINE "_process_cmd"
                           A  2970    
                           A  2971    .VALUE _process_cmd
                           A  2972    
                           A  2973    .CLASS 2
                           A  2974    
                           A  2975    .TYPE 65
                           A  2976    
                           A  2977    .ENDEF
                           A  2978    
                           A  2979    .BEGFUNC "process_cmd",307,"_process_cmd"
                           A  2980    
                           A  2981    .LINE 307
                           A  2982    
                           A  2983    .DEFINE "ch"
                           A  2984    
                           A  2985    .CLASS 65
                           A  2986    
                           A  2987    .VALUE 6
                           A  2988    
                           A  2989    .TYPE 4
                           A  2990    
                           A  2991    .ENDEF
                           A  2992    
                           A  2993    .DEFINE "cmd"
                           A  2994    
                           A  2995    .CLASS 65
                           A  2996    
                           A  2997    .VALUE -1
                           A  2998    
                           A  2999    .TYPE 12
                           A  3000    
                           A  3001    .ENDEF
                           A  3002    
000A21 DDE5                A  3003    	PUSH	IX
000A23 DD210000 00         A  3004    	LD	IX,0
000A28 DD39                A  3005    	ADD	IX,SP
000A2A 3B                  A  3006    	DEC	SP
                           A  3007    ;  308		UINT8 cmd = ch & 0x7f; //0b01111111
                           A  3008    .LINE 308
                           A  3009    
000A2B DD7E06              A  3010    	LD	A,(IX+%6)
000A2E CBBF                A  3011    	RES	%7,A
000A30 DD77FF              A  3012    	LD	(IX+%FFFFFFFF),A
                           A  3013    ;  309		printf ("\r\nreceived command %d\r\
                           A  3014    .LINE 309
                           A  3015    
000A33 01 00 00 00         A  3016    	LD	BC,___print_uputch
000A37 ED43 00 00 00       A  3017    	LD	(___print_xputch),BC
000A3C 01 A3 00 00         A  3018    	LD	BC,L__103
000A40 C5                  A  3019    	PUSH	BC
000A41 CD 00 00 00         A  3020    	CALL	___print_sendstring
000A45 C1                  A  3021    	POP	BC
000A46 DD7EFF              A  3022    	LD	A,(IX+%FFFFFFFF)
000A49 B7ED62              A  3023    	UEXT	HL
000A4C 6F                  A  3024    	LD	L,A
000A4D E5C1                A  3025    	LD	BC,HL
000A4F CD 00 00 00         A  3026    	CALL	__itol
000A53 C5D1                A  3027    	LD	DE,BC
000A55 4F                  A  3028    	LD	C,A
000A56 0600                A  3029    	LD	B,%0
000A58 C5                  A  3030    	PUSH	BC
000A59 D5                  A  3031    	PUSH	DE
000A5A CD 00 00 00         A  3032    	CALL	__u_itoa
000A5E C1                  A  3033    	POP	BC
000A5F C1                  A  3034    	POP	BC
000A60 01 B7 00 00         A  3035    	LD	BC,L__104
000A64 C5                  A  3036    	PUSH	BC
000A65 CD 00 00 00         A  3037    	CALL	___print_sendstring
000A69 C1                  A  3038    	POP	BC
                           A  3039    ;  310		switch (cmd)
                           A  3040    .LINE 310
                           A  3041    
000A6A                     A  3042    L__105:
                           A  3043    ;  311		{
                           A  3044    ;  312			case 0:
                           A  3045    ;  313				
                           A  3046    ;  314				break;
                           A  3047    ;  315		}
                           A  3048    ;  316	}
                           A  3049    .LINE 316
                           A  3050    
000A6A DDF9                A  3051    	LD	SP,IX
000A6C DDE1                A  3052    	POP	IX
000A6E C9                  A  3053    	RET	
                           A  3054    
                           A  3055    
                           A  3056    ;**************************** _process_cmd ****
                           A  3057    ;Name                         Addr/Register   S
                           A  3058    ;__u_itoa                            IMPORT  --
                           A  3059    ;___print_sendstring                 IMPORT  --
                           A  3060    ;___print_xputch                     IMPORT    
                           A  3061    ;___print_uputch                     IMPORT  --
                           A  3062    ;cmd                                   IX-1    
                           A  3063    ;ch                                    IX+6    
                           A  3064    
                           A  3065    
                           A  3066    ; Stack Frame Size: 10 (bytes)
                           A  3067    ;       Spill Code: 0 (instruction)
                           A  3068    
                           A  3069    
                           A  3070    .ENDFUNC "process_cmd",316,"_process_cmd"
                           A  3071    	SEGMENT STRSECT
0000A3                     A  3072    L__103:
0000A3 0D0A                A  3073    	DB	13,10
0000A5 72656365 69766564   A  3074    	DB	"received command "
0000AD 20636F6D 6D616E64 
0000B5 20 
0000B6 00                  A  3075    	DB	0
0000B7                     A  3076    L__104:
0000B7 0D0A00              A  3077    	DB	13,10,0
                           A  3078    	SEGMENT CODE
                           A  3079    ;  317	
                           A  3080    ;  318	void cp_run ()
                           A  3081    ;  319	{
000A6F                     A  3082    _cp_run:
                           A  3083    .DEFINE "_cp_run"
                           A  3084    
                           A  3085    .VALUE _cp_run
                           A  3086    
                           A  3087    .CLASS 2
                           A  3088    
                           A  3089    .TYPE 65
                           A  3090    
                           A  3091    .ENDEF
                           A  3092    
                           A  3093    .BEGFUNC "cp_run",319,"_cp_run"
                           A  3094    
                           A  3095    .LINE 319
                           A  3096    
                           A  3097    .DEFINE "ch"
                           A  3098    
                           A  3099    .CLASS 65
                           A  3100    
                           A  3101    .VALUE -3
                           A  3102    
                           A  3103    .TYPE 4
                           A  3104    
                           A  3105    .ENDEF
                           A  3106    
000A6F DDE5                A  3107    	PUSH	IX
000A71 DD210000 00         A  3108    	LD	IX,0
000A76 DD39                A  3109    	ADD	IX,SP
000A78 C5                  A  3110    	PUSH	BC
                           A  3111    ;  320		INT ch;
                           A  3112    ;  321	
                           A  3113    ;  322		printf ("\r\n*");
                           A  3114    .LINE 322
                           A  3115    
000A79 01 00 00 00         A  3116    	LD	BC,___print_uputch
000A7D ED43 00 00 00       A  3117    	LD	(___print_xputch),BC
000A82 01 BA 00 00         A  3118    	LD	BC,L__107
000A86 C5                  A  3119    	PUSH	BC
000A87 CD 00 00 00         A  3120    	CALL	___print_sendstring
000A8B C1                  A  3121    	POP	BC
                           A  3122    ;  323		ptrCommandLine = szCommandLine;
                           A  3123    .LINE 323
                           A  3124    
000A8C 01 00 00 00         A  3125    	LD	BC,_szCommandLine
000A90 ED43 FF 00 00       A  3126    	LD	(_ptrCommandLine),BC
                           A  3127    ;  324		while (TRUE)
000A95                     A  3128    L_125:
                           A  3129    .LINE 324
                           A  3130    
                           A  3131    ;  325		{
                           A  3132    ;  326			ch = getch();
                           A  3133    .LINE 326
                           A  3134    
000A95 CD 00 00 00         A  3135    	CALL	_getch
000A99 DD2FFD              A  3136    	LD	(IX+%FFFFFFFD),HL
                           A  3137    ;  327			if (ch & 0x80 /*0b10000000*/)
                           A  3138    .LINE 327
                           A  3139    
000A9C DD7EFD              A  3140    	LD	A,(IX+%FFFFFFFD)
000A9F E680                A  3141    	AND	A,%80
000AA1 B7ED62              A  3142    	UEXT	HL
000AA4 6F                  A  3143    	LD	L,A
000AA5 01000000            A  3144    	LD	BC,0
000AA9 B7                  A  3145    	OR	A,A
000AAA ED42                A  3146    	SBC	HL,BC
000AAC 28 0B               A  3147    	JR	Z,L_123
                           A  3148    ;  328				process_cmd (ch);
                           A  3149    .LINE 328
                           A  3150    
000AAE DD07FD              A  3151    	LD	BC,(IX+%FFFFFFFD)
000AB1 C5                  A  3152    	PUSH	BC
000AB2 CD 21 0A 00         A  3153    	CALL	_process_cmd
000AB6 C1                  A  3154    	POP	BC
                           A  3155    ;  329			else
                           A  3156    .LINE 329
                           A  3157    
000AB7 18 DC               A  3158    	JR	L_125
000AB9                     A  3159    L_123:
                           A  3160    ;  330				process_character (ch);
                           A  3161    .LINE 330
                           A  3162    
000AB9 DD07FD              A  3163    	LD	BC,(IX+%FFFFFFFD)
000ABC C5                  A  3164    	PUSH	BC
000ABD CD 59 09 00         A  3165    	CALL	_process_character
000AC1 C1                  A  3166    	POP	BC
000AC2 18 D1               A  3167    	JR	L_125
                           A  3168    ;  331			
                           A  3169    ;  332		}
                           A  3170    .LINE 333
                           A  3171    
000AC4 DDF9                A  3172    	LD	SP,IX
000AC6 DDE1                A  3173    	POP	IX
000AC8 C9                  A  3174    	RET	
                           A  3175    
                           A  3176    
                           A  3177    ;**************************** _cp_run *********
                           A  3178    ;Name                         Addr/Register   S
                           A  3179    ;_getch                              IMPORT  --
                           A  3180    ;_ptrCommandLine                     STATIC    
                           A  3181    ;_szCommandLine                      STATIC    
                           A  3182    ;___print_sendstring                 IMPORT  --
                           A  3183    ;___print_xputch                     IMPORT    
                           A  3184    ;___print_uputch                     IMPORT  --
                           A  3185    ;ch                                    IX-3    
                           A  3186    
                           A  3187    
                           A  3188    ; Stack Frame Size: 9 (bytes)
                           A  3189    ;       Spill Code: 0 (instruction)
                           A  3190    
                           A  3191    
                           A  3192    .ENDFUNC "cp_run",333,"_cp_run"
                           A  3193    	SEGMENT STRSECT
0000BA                     A  3194    L__107:
0000BA 0D0A                A  3195    	DB	13,10
0000BC 2A                  A  3196    	DB	"*"
0000BD 00                  A  3197    	DB	0
                           A  3198    	XREF _putch:ROM
                           A  3199    	XREF _getch:ROM
                           A  3200    	XREF _machine_set_vsync:ROM
                           A  3201    	XREF _machine_set_warmboot_image:ROM
                           A  3202    	XREF _machine_start:ROM
                           A  3203    	XREF _machine_init:ROM
                           A  3204    	XREF _machine_mount_disk:ROM
                           A  3205    	XREF _machine_save_image:ROM
                           A  3206    	XREF _machine_load_image:ROM
                           A  3207    	XREF _strtol:ROM
                           A  3208    	XREF _strlen:ROM
                           A  3209    	XREF _strstr:ROM
                           A  3210    	XREF __u_itoa:ROM
                           A  3211    	XREF ___print_sendstring:ROM
                           A  3212    	XREF ___print_xputch:ROM
                           A  3213    	XREF ___print_uputch:ROM
                           A  3214    	XREF ___print_fmt:ROM
                           A  3215    	XREF _f_gets:ROM
                           A  3216    	XREF _f_getlabel:ROM
                           A  3217    	XREF _f_chdir:ROM
                           A  3218    	XREF _f_unlink:ROM
                           A  3219    	XREF _f_mkdir:ROM
                           A  3220    	XREF _f_readdir:ROM
                           A  3221    	XREF _f_closedir:ROM
                           A  3222    	XREF _f_opendir:ROM
                           A  3223    	XREF _f_close:ROM
                           A  3224    	XREF _f_open:ROM
                           A  3225    	XREF __stoiu:ROM
                           A  3226    	XREF __itol:ROM
                           A  3227    	XREF __sshru_b:ROM
                           A  3228    	XDEF _cp_run
                           A  3229    	XDEF _process_cmd
                           A  3230    	XDEF _process_character
                           A  3231    	XDEF _cp_process
                           A  3232    	XDEF _cp_type
                           A  3233    	XDEF _cp_exec_batch_file
                           A  3234    	XDEF _cp_DEL
                           A  3235    	XDEF _cp_MKDIR
                           A  3236    	XDEF _cp_DIR
                           A  3237    	XDEF _cp_CD
                           A  3238    	XDEF _ptrCommandLine
                           A  3239    	XDEF _szCommandLine
                           A  3240    	END


Errors: 0
Warnings: 0
Lines Assembled: 3241
