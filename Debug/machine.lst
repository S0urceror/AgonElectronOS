Zilog eZ80 Macro Assembler Version 4.3 (19073001)04-Jul-23     22:04:29     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optspeed -noreduceopt -nopadbranc
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\src\machine.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",566
                           A    94    .DEFINE "fs_type"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 12
                           A    98    .ENDEF
                           A    99    .DEFINE "pdrv"
                           A   100    .VALUE 1
                           A   101    .CLASS 8
                           A   102    .TYPE 12
                           A   103    .ENDEF
                           A   104    .DEFINE "n_fats"
                           A   105    .VALUE 2
                           A   106    .CLASS 8
                           A   107    .TYPE 12
                           A   108    .ENDEF
                           A   109    .DEFINE "wflag"
                           A   110    .VALUE 3
                           A   111    .CLASS 8
                           A   112    .TYPE 12
                           A   113    .ENDEF
                           A   114    .DEFINE "fsi_flag"
                           A   115    .VALUE 4
                           A   116    .CLASS 8
                           A   117    .TYPE 12
                           A   118    .ENDEF
                           A   119    .DEFINE "id"
                           A   120    .VALUE 5
                           A   121    .CLASS 8
                           A   122    .TYPE 13
                           A   123    .ENDEF
                           A   124    .DEFINE "n_rootdir"
                           A   125    .VALUE 7
                           A   126    .CLASS 8
                           A   127    .TYPE 13
                           A   128    .ENDEF
                           A   129    .DEFINE "csize"
                           A   130    .VALUE 9
                           A   131    .CLASS 8
                           A   132    .TYPE 13
                           A   133    .ENDEF
                           A   134    .DEFINE "lfnbuf"
                           A   135    .VALUE 11
                           A   136    .CLASS 8
                           A   137    .TYPE 45
                           A   138    .ENDEF
                           A   139    .DEFINE "last_clst"
                           A   140    .VALUE 14
                           A   141    .CLASS 8
                           A   142    .TYPE 15
                           A   143    .ENDEF
                           A   144    .DEFINE "free_clst"
                           A   145    .VALUE 18
                           A   146    .CLASS 8
                           A   147    .TYPE 15
                           A   148    .ENDEF
                           A   149    .DEFINE "cdir"
                           A   150    .VALUE 22
                           A   151    .CLASS 8
                           A   152    .TYPE 15
                           A   153    .ENDEF
                           A   154    .DEFINE "n_fatent"
                           A   155    .VALUE 26
                           A   156    .CLASS 8
                           A   157    .TYPE 15
                           A   158    .ENDEF
                           A   159    .DEFINE "fsize"
                           A   160    .VALUE 30
                           A   161    .CLASS 8
                           A   162    .TYPE 15
                           A   163    .ENDEF
                           A   164    .DEFINE "volbase"
                           A   165    .VALUE 34
                           A   166    .CLASS 8
                           A   167    .TYPE 15
                           A   168    .ENDEF
                           A   169    .DEFINE "fatbase"
                           A   170    .VALUE 38
                           A   171    .CLASS 8
                           A   172    .TYPE 15
                           A   173    .ENDEF
                           A   174    .DEFINE "dirbase"
                           A   175    .VALUE 42
                           A   176    .CLASS 8
                           A   177    .TYPE 15
                           A   178    .ENDEF
                           A   179    .DEFINE "database"
                           A   180    .VALUE 46
                           A   181    .CLASS 8
                           A   182    .TYPE 15
                           A   183    .ENDEF
                           A   184    .DEFINE "winsect"
                           A   185    .VALUE 50
                           A   186    .CLASS 8
                           A   187    .TYPE 15
                           A   188    .ENDEF
                           A   189    .DEFINE "win"
                           A   190    .VALUE 54
                           A   191    .CLASS 8
                           A   192    .DIM 512
                           A   193    .TYPE 108
                           A   194    .ENDEF
                           A   195    .ENDREC "NONAME0"
                           A   196    .BEGREC "NONAME1",15
                           A   197    .DEFINE "fs"
                           A   198    .VALUE 0
                           A   199    .CLASS 8
                           A   200    .TAG "NONAME0"
                           A   201    .TYPE 40
                           A   202    .ENDEF
                           A   203    .DEFINE "id"
                           A   204    .VALUE 3
                           A   205    .CLASS 8
                           A   206    .TYPE 13
                           A   207    .ENDEF
                           A   208    .DEFINE "attr"
                           A   209    .VALUE 5
                           A   210    .CLASS 8
                           A   211    .TYPE 12
                           A   212    .ENDEF
                           A   213    .DEFINE "stat"
                           A   214    .VALUE 6
                           A   215    .CLASS 8
                           A   216    .TYPE 12
                           A   217    .ENDEF
                           A   218    .DEFINE "sclust"
                           A   219    .VALUE 7
                           A   220    .CLASS 8
                           A   221    .TYPE 15
                           A   222    .ENDEF
                           A   223    .DEFINE "objsize"
                           A   224    .VALUE 11
                           A   225    .CLASS 8
                           A   226    .TYPE 15
                           A   227    .ENDEF
                           A   228    .ENDREC "NONAME1"
                           A   229    .BEGREC "NONAME2",36
                           A   230    .DEFINE "obj"
                           A   231    .VALUE 0
                           A   232    .CLASS 8
                           A   233    .TAG "NONAME1"
                           A   234    .TYPE 8
                           A   235    .ENDEF
                           A   236    .DEFINE "flag"
                           A   237    .VALUE 15
                           A   238    .CLASS 8
                           A   239    .TYPE 12
                           A   240    .ENDEF
                           A   241    .DEFINE "err"
                           A   242    .VALUE 16
                           A   243    .CLASS 8
                           A   244    .TYPE 12
                           A   245    .ENDEF
                           A   246    .DEFINE "fptr"
                           A   247    .VALUE 17
                           A   248    .CLASS 8
                           A   249    .TYPE 15
                           A   250    .ENDEF
                           A   251    .DEFINE "clust"
                           A   252    .VALUE 21
                           A   253    .CLASS 8
                           A   254    .TYPE 15
                           A   255    .ENDEF
                           A   256    .DEFINE "sect"
                           A   257    .VALUE 25
                           A   258    .CLASS 8
                           A   259    .TYPE 15
                           A   260    .ENDEF
                           A   261    .DEFINE "dir_sect"
                           A   262    .VALUE 29
                           A   263    .CLASS 8
                           A   264    .TYPE 15
                           A   265    .ENDEF
                           A   266    .DEFINE "dir_ptr"
                           A   267    .VALUE 33
                           A   268    .CLASS 8
                           A   269    .TYPE 44
                           A   270    .ENDEF
                           A   271    .ENDREC "NONAME2"
                           A   272    .BEGREC "NONAME3",46
                           A   273    .DEFINE "obj"
                           A   274    .VALUE 0
                           A   275    .CLASS 8
                           A   276    .TAG "NONAME1"
                           A   277    .TYPE 8
                           A   278    .ENDEF
                           A   279    .DEFINE "dptr"
                           A   280    .VALUE 15
                           A   281    .CLASS 8
                           A   282    .TYPE 15
                           A   283    .ENDEF
                           A   284    .DEFINE "clust"
                           A   285    .VALUE 19
                           A   286    .CLASS 8
                           A   287    .TYPE 15
                           A   288    .ENDEF
                           A   289    .DEFINE "sect"
                           A   290    .VALUE 23
                           A   291    .CLASS 8
                           A   292    .TYPE 15
                           A   293    .ENDEF
                           A   294    .DEFINE "dir"
                           A   295    .VALUE 27
                           A   296    .CLASS 8
                           A   297    .TYPE 44
                           A   298    .ENDEF
                           A   299    .DEFINE "fn"
                           A   300    .VALUE 30
                           A   301    .CLASS 8
                           A   302    .DIM 12
                           A   303    .TYPE 108
                           A   304    .ENDEF
                           A   305    .DEFINE "blk_ofs"
                           A   306    .VALUE 42
                           A   307    .CLASS 8
                           A   308    .TYPE 15
                           A   309    .ENDEF
                           A   310    .ENDREC "NONAME3"
                           A   311    .BEGREC "NONAME4",278
                           A   312    .DEFINE "fsize"
                           A   313    .VALUE 0
                           A   314    .CLASS 8
                           A   315    .TYPE 15
                           A   316    .ENDEF
                           A   317    .DEFINE "fdate"
                           A   318    .VALUE 4
                           A   319    .CLASS 8
                           A   320    .TYPE 13
                           A   321    .ENDEF
                           A   322    .DEFINE "ftime"
                           A   323    .VALUE 6
                           A   324    .CLASS 8
                           A   325    .TYPE 13
                           A   326    .ENDEF
                           A   327    .DEFINE "fattrib"
                           A   328    .VALUE 8
                           A   329    .CLASS 8
                           A   330    .TYPE 12
                           A   331    .ENDEF
                           A   332    .DEFINE "altname"
                           A   333    .VALUE 9
                           A   334    .CLASS 8
                           A   335    .DIM 13
                           A   336    .TYPE 98
                           A   337    .ENDEF
                           A   338    .DEFINE "fname"
                           A   339    .VALUE 22
                           A   340    .CLASS 8
                           A   341    .DIM 256
                           A   342    .TYPE 98
                           A   343    .ENDEF
                           A   344    .ENDREC "NONAME4"
                           A   345    .BEGREC "NONAME5",12
                           A   346    .DEFINE "fmt"
                           A   347    .VALUE 0
                           A   348    .CLASS 8
                           A   349    .TYPE 12
                           A   350    .ENDEF
                           A   351    .DEFINE "n_fat"
                           A   352    .VALUE 1
                           A   353    .CLASS 8
                           A   354    .TYPE 12
                           A   355    .ENDEF
                           A   356    .DEFINE "align"
                           A   357    .VALUE 2
                           A   358    .CLASS 8
                           A   359    .TYPE 14
                           A   360    .ENDEF
                           A   361    .DEFINE "n_root"
                           A   362    .VALUE 5
                           A   363    .CLASS 8
                           A   364    .TYPE 14
                           A   365    .ENDEF
                           A   366    .DEFINE "au_size"
                           A   367    .VALUE 8
                           A   368    .CLASS 8
                           A   369    .TYPE 15
                           A   370    .ENDEF
                           A   371    .ENDREC "NONAME5"
                           A   372    .BEGREC "HEADER",7
                           A   373    .DEFINE "magic"
                           A   374    .VALUE 0
                           A   375    .CLASS 8
                           A   376    .TYPE 12
                           A   377    .ENDEF
                           A   378    .DEFINE "begin"
                           A   379    .VALUE 1
                           A   380    .CLASS 8
                           A   381    .TYPE 13
                           A   382    .ENDEF
                           A   383    .DEFINE "end"
                           A   384    .VALUE 3
                           A   385    .CLASS 8
                           A   386    .TYPE 13
                           A   387    .ENDEF
                           A   388    .DEFINE "start"
                           A   389    .VALUE 5
                           A   390    .CLASS 8
                           A   391    .TYPE 13
                           A   392    .ENDEF
                           A   393    .ENDREC "HEADER"
                           A   394    	SEGMENT BSS
000000                     A   395    _ram:
000000                     A   396    	DS	3
                           A   397    .DEFINE "ram"
                           A   398    .ALIAS "_ram"
                           A   399    .CLASS 83
                           A   400    .VALUE _ram
                           A   401    .TYPE 34
                           A   402    .ENDEF
000003                     A   403    _mbase:
000003                     A   404    	DS	1
                           A   405    .DEFINE "mbase"
                           A   406    .ALIAS "_mbase"
                           A   407    .CLASS 83
                           A   408    .VALUE _mbase
                           A   409    .TYPE 2
                           A   410    .ENDEF
000004                     A   411    _disks:
000004                     A   412    	DS	288
                           A   413    .DEFINE "disks"
                           A   414    .ALIAS "_disks"
                           A   415    .CLASS 83
                           A   416    .VALUE _disks
                           A   417    .DIM 8
                           A   418    .TAG "NONAME2"
                           A   419    .TYPE 104
                           A   420    .ENDEF
000124                     A   421    _szWarmBootImage:
000124                     A   422    	DS	255
                           A   423    .DEFINE "szWarmBootImage"
                           A   424    .ALIAS "_szWarmBootImage"
                           A   425    .CLASS 83
                           A   426    .VALUE _szWarmBootImage
                           A   427    .DIM 255
                           A   428    .TYPE 98
                           A   429    .ENDEF
000223                     A   430    _wb_bank:
000223                     A   431    	DS	1
                           A   432    .DEFINE "wb_bank"
                           A   433    .ALIAS "_wb_bank"
                           A   434    .CLASS 83
                           A   435    .VALUE _wb_bank
                           A   436    .TYPE 12
                           A   437    .ENDEF
000224                     A   438    __secsize:
000224                     A   439    	DS	3
                           A   440    .DEFINE "_secsize"
                           A   441    .ALIAS "__secsize"
                           A   442    .CLASS 83
                           A   443    .VALUE __secsize
                           A   444    .TYPE 4
                           A   445    .ENDEF
000227                     A   446    _machine_vsync_address:
000227                     A   447    	DS	2*1
                           A   448    .DEFINE "machine_vsync_address"
                           A   449    .ALIAS "_machine_vsync_address"
                           A   450    .CLASS 83
                           A   451    .VALUE _machine_vsync_address
                           A   452    .TYPE 13
                           A   453    .ENDEF
000229                     A   454    _machine_vsync:
000229                     A   455    	DS	1
                           A   456    .DEFINE "machine_vsync"
                           A   457    .ALIAS "_machine_vsync"
                           A   458    .CLASS 83
                           A   459    .VALUE _machine_vsync
                           A   460    .TYPE 12
                           A   461    .ENDEF
                           A   462    ;    1	#include <eZ80.h>
                           A   463    ;    2	#include <defines.h>
                           A   464    ;    3	#include <stdio.h>
                           A   465    ;    4	#include "machine.h"
                           A   466    ;    5	#include "misc.h"
                           A   467    ;    6	#include <String.h>
                           A   468    ;    7	#include "vectors16.h"
                           A   469    ;    8	
                           A   470    ;    9	INT8 *ram;
                           A   471    ;   10	INT8  mbase;
                           A   472    ;   11	FIL disks[8]; // A-H
                           A   473    ;   12	char szWarmBootImage[255];
                           A   474    ;   13	UINT8 wb_bank;
                           A   475    ;   14	int _secsize;
                           A   476    ;   15	UINT16 machine_vsync_address;
                           A   477    ;   16	UINT8 machine_vsync;
                           A   478    	SEGMENT CODE
                           A   479    ;   17	
                           A   480    ;   18	BOOL machine_load_image (UINT8 bank,TCH
                           A   481    ;   19	{
000000                     A   482    _machine_load_image:
                           A   483    .DEFINE "_machine_load_image"
                           A   484    
                           A   485    .VALUE _machine_load_image
                           A   486    
                           A   487    .CLASS 2
                           A   488    
                           A   489    .TYPE 76
                           A   490    
                           A   491    .ENDEF
                           A   492    
                           A   493    .BEGFUNC "machine_load_image",19,"_machine_load
                           A   494    
                           A   495    .LINE 19
                           A   496    
                           A   497    .DEFINE "bank"
                           A   498    
                           A   499    .CLASS 65
                           A   500    
                           A   501    .VALUE 6
                           A   502    
                           A   503    .TYPE 12
                           A   504    
                           A   505    .ENDEF
                           A   506    
                           A   507    .DEFINE "filename"
                           A   508    
                           A   509    .CLASS 65
                           A   510    
                           A   511    .VALUE 9
                           A   512    
                           A   513    .TYPE 34
                           A   514    
                           A   515    .ENDEF
                           A   516    
                           A   517    .DEFINE "bytes_read"
                           A   518    
                           A   519    .CLASS 65
                           A   520    
                           A   521    .VALUE -3
                           A   522    
                           A   523    .TYPE 14
                           A   524    
                           A   525    .ENDEF
                           A   526    
                           A   527    .DEFINE "header"
                           A   528    
                           A   529    .CLASS 65
                           A   530    
                           A   531    .VALUE -10
                           A   532    
                           A   533    .TAG "HEADER"
                           A   534    
                           A   535    .TYPE 8
                           A   536    
                           A   537    .ENDEF
                           A   538    
                           A   539    .DEFINE "f"
                           A   540    
                           A   541    .CLASS 65
                           A   542    
                           A   543    .VALUE -46
                           A   544    
                           A   545    .TAG "NONAME2"
                           A   546    
                           A   547    .TYPE 8
                           A   548    
                           A   549    .ENDEF
                           A   550    
000000 DDE5                A   551    	PUSH	IX
000002 DD210000 00         A   552    	LD	IX,0
000007 DD39                A   553    	ADD	IX,SP
000009 ED22D1              A   554    	LEA	HL,IX+%FFFFFFD1
00000C F9                  A   555    	LD	SP,HL
                           A   556    ;   20		FIL f;
                           A   557    ;   21		UINT bytes_read;
                           A   558    ;   22		struct HEADER header;
                           A   559    ;   23	
                           A   560    ;   24		if (f_open(&f, filename, ( FA_READ 
                           A   561    .LINE 24
                           A   562    
00000D 01010000            A   563    	LD	BC,1
000011 C5                  A   564    	PUSH	BC
000012 DD0709              A   565    	LD	BC,(IX+%9)
000015 C5                  A   566    	PUSH	BC
000016 ED65D2              A   567    	PEA	IX+%FFFFFFD2
000019 DD77D1              A   568    	LD	(IX+%FFFFFFD1),A
00001C CD 00 00 00         A   569    	CALL	_f_open
000020 DD7ED1              A   570    	LD	A,(IX+%FFFFFFD1)
000023 C1                  A   571    	POP	BC
000024 C1                  A   572    	POP	BC
000025 C1                  A   573    	POP	BC
000026 01000000            A   574    	LD	BC,0
00002A B7                  A   575    	OR	A,A
00002B ED42                A   576    	SBC	HL,BC
00002D 20 78               A   577    	JR	NZ,L_3
                           A   578    ;   25		{
                           A   579    ;   26			if (f_read (&f,&header,sizeof(h
                           A   580    .LINE 26
                           A   581    
00002F ED65FD              A   582    	PEA	IX+%FFFFFFFD
000032 01070000            A   583    	LD	BC,7
000036 C5                  A   584    	PUSH	BC
000037 ED65F6              A   585    	PEA	IX+%FFFFFFF6
00003A ED65D2              A   586    	PEA	IX+%FFFFFFD2
00003D DD77D1              A   587    	LD	(IX+%FFFFFFD1),A
000040 CD 00 00 00         A   588    	CALL	_f_read
000044 DD7ED1              A   589    	LD	A,(IX+%FFFFFFD1)
000047 C1                  A   590    	POP	BC
000048 C1                  A   591    	POP	BC
000049 C1                  A   592    	POP	BC
00004A C1                  A   593    	POP	BC
00004B 01000000            A   594    	LD	BC,0
00004F B7                  A   595    	OR	A,A
000050 ED42                A   596    	SBC	HL,BC
000052 20 47               A   597    	JR	NZ,L_1
                           A   598    ;   27			{
                           A   599    ;   28				f_read (&f,&ram[header.begi
                           A   600    .LINE 28
                           A   601    
000054 ED65FD              A   602    	PEA	IX+%FFFFFFFD
000057 DD07F9              A   603    	LD	BC,(IX+%FFFFFFF9)
00005A CD 00 00 00         A   604    	CALL	__stoiu
00005E E5D1                A   605    	LD	DE,HL
000060 DD07F7              A   606    	LD	BC,(IX+%FFFFFFF7)
000063 CD 00 00 00         A   607    	CALL	__stoiu
000067 E5C1                A   608    	LD	BC,HL
000069 D5E1                A   609    	LD	HL,DE
00006B B7                  A   610    	OR	A,A
00006C ED42                A   611    	SBC	HL,BC
00006E E5                  A   612    	PUSH	HL
00006F DD07F7              A   613    	LD	BC,(IX+%FFFFFFF7)
000072 CD 00 00 00         A   614    	CALL	__stoiu
000076 E5C1                A   615    	LD	BC,HL
000078 DD7E06              A   616    	LD	A,(IX+%6)
00007B B7ED62              A   617    	UEXT	HL
00007E 6F                  A   618    	LD	L,A
00007F E5                  A   619    	PUSH	HL
000080 B7ED62              A   620    	UEXT	HL
000083 E5                  A   621    	PUSH	HL
000084 33                  A   622    	INC	SP
000085 E1                  A   623    	POP	HL
000086 33                  A   624    	INC	SP
000087 33                  A   625    	INC	SP
000088 09                  A   626    	ADD	HL,BC
000089 ED4B 00 00 00       A   627    	LD	BC,(_ram)
00008E 09                  A   628    	ADD	HL,BC
00008F E5                  A   629    	PUSH	HL
000090 ED65D2              A   630    	PEA	IX+%FFFFFFD2
000093 CD 00 00 00         A   631    	CALL	_f_read
000097 C1                  A   632    	POP	BC
000098 C1                  A   633    	POP	BC
000099 C1                  A   634    	POP	BC
00009A C1                  A   635    	POP	BC
                           A   636    ;   29				//printf ("[%s loaded]\r\n"
                           A   637    ;   30			}
00009B                     A   638    L_1:
                           A   639    .LINE 30
                           A   640    
                           A   641    ;   31			f_close (&f);
                           A   642    .LINE 31
                           A   643    
00009B ED65D2              A   644    	PEA	IX+%FFFFFFD2
00009E CD 00 00 00         A   645    	CALL	_f_close
0000A2 C1                  A   646    	POP	BC
                           A   647    ;   32			return TRUE;
                           A   648    .LINE 32
                           A   649    
0000A3 3E01                A   650    	LD	A,%1
0000A5 18 01               A   651    	JR	L_4
                           A   652    ;   33		}
                           A   653    ;   34		else
0000A7                     A   654    L_3:
                           A   655    .LINE 34
                           A   656    
                           A   657    ;   35		{
                           A   658    ;   36			//printf ("[%s NOT loaded]\r\n"
                           A   659    ;   37			return FALSE;
                           A   660    .LINE 37
                           A   661    
0000A7 AF                  A   662    	XOR	A,A
                           A   663    ;   38		}
                           A   664    ;   39	}
0000A8                     A   665    L_4:
                           A   666    .LINE 39
                           A   667    
0000A8 DDF9                A   668    	LD	SP,IX
0000AA DDE1                A   669    	POP	IX
0000AC C9                  A   670    	RET	
                           A   671    
                           A   672    
                           A   673    ;**************************** _machine_load_ima
                           A   674    ;Name                         Addr/Register   S
                           A   675    ;_f_close                            IMPORT  --
                           A   676    ;_ram                                STATIC    
                           A   677    ;_f_read                             IMPORT  --
                           A   678    ;_f_open                             IMPORT  --
                           A   679    ;f                                    IX-46    
                           A   680    ;header                               IX-10    
                           A   681    ;bytes_read                            IX-3    
                           A   682    ;filename                              IX+9    
                           A   683    ;bank                                  IX+6    
                           A   684    
                           A   685    
                           A   686    ; Stack Frame Size: 59 (bytes)
                           A   687    ;       Spill Code: 0 (instruction)
                           A   688    
                           A   689    
                           A   690    .ENDFUNC "machine_load_image",39,"_machine_load
                           A   691    ;   40	
                           A   692    ;   41	BOOL machine_save_image (UINT8 bank, UI
                           A   693    ;   42	{
0000AD                     A   694    _machine_save_image:
                           A   695    .DEFINE "_machine_save_image"
                           A   696    
                           A   697    .VALUE _machine_save_image
                           A   698    
                           A   699    .CLASS 2
                           A   700    
                           A   701    .TYPE 76
                           A   702    
                           A   703    .ENDEF
                           A   704    
                           A   705    .BEGFUNC "machine_save_image",42,"_machine_save
                           A   706    
                           A   707    .LINE 42
                           A   708    
                           A   709    .DEFINE "bank"
                           A   710    
                           A   711    .CLASS 65
                           A   712    
                           A   713    .VALUE 6
                           A   714    
                           A   715    .TYPE 12
                           A   716    
                           A   717    .ENDEF
                           A   718    
                           A   719    .DEFINE "begin"
                           A   720    
                           A   721    .CLASS 65
                           A   722    
                           A   723    .VALUE 9
                           A   724    
                           A   725    .TYPE 13
                           A   726    
                           A   727    .ENDEF
                           A   728    
                           A   729    .DEFINE "end"
                           A   730    
                           A   731    .CLASS 65
                           A   732    
                           A   733    .VALUE 12
                           A   734    
                           A   735    .TYPE 13
                           A   736    
                           A   737    .ENDEF
                           A   738    
                           A   739    .DEFINE "start"
                           A   740    
                           A   741    .CLASS 65
                           A   742    
                           A   743    .VALUE 15
                           A   744    
                           A   745    .TYPE 13
                           A   746    
                           A   747    .ENDEF
                           A   748    
                           A   749    .DEFINE "filename"
                           A   750    
                           A   751    .CLASS 65
                           A   752    
                           A   753    .VALUE 18
                           A   754    
                           A   755    .TYPE 34
                           A   756    
                           A   757    .ENDEF
                           A   758    
                           A   759    .DEFINE "header"
                           A   760    
                           A   761    .CLASS 65
                           A   762    
                           A   763    .VALUE -7
                           A   764    
                           A   765    .TAG "HEADER"
                           A   766    
                           A   767    .TYPE 8
                           A   768    
                           A   769    .ENDEF
                           A   770    
                           A   771    .DEFINE "bytes_written"
                           A   772    
                           A   773    .CLASS 65
                           A   774    
                           A   775    .VALUE -10
                           A   776    
                           A   777    .TYPE 14
                           A   778    
                           A   779    .ENDEF
                           A   780    
                           A   781    .DEFINE "f"
                           A   782    
                           A   783    .CLASS 65
                           A   784    
                           A   785    .VALUE -46
                           A   786    
                           A   787    .TAG "NONAME2"
                           A   788    
                           A   789    .TYPE 8
                           A   790    
                           A   791    .ENDEF
                           A   792    
0000AD DDE5                A   793    	PUSH	IX
0000AF DD210000 00         A   794    	LD	IX,0
0000B4 DD39                A   795    	ADD	IX,SP
0000B6 ED22D1              A   796    	LEA	HL,IX+%FFFFFFD1
0000B9 F9                  A   797    	LD	SP,HL
                           A   798    ;   43		FIL f;
                           A   799    ;   44		UINT bytes_written;
                           A   800    ;   45		struct HEADER header;
                           A   801    ;   46	
                           A   802    ;   47		if (f_open(&f, filename, ( FA_CREAT
                           A   803    .LINE 47
                           A   804    
0000BA 01060000            A   805    	LD	BC,6
0000BE C5                  A   806    	PUSH	BC
0000BF DD0712              A   807    	LD	BC,(IX+%12)
0000C2 C5                  A   808    	PUSH	BC
0000C3 ED65D2              A   809    	PEA	IX+%FFFFFFD2
0000C6 DD77D1              A   810    	LD	(IX+%FFFFFFD1),A
0000C9 CD 00 00 00         A   811    	CALL	_f_open
0000CD DD7ED1              A   812    	LD	A,(IX+%FFFFFFD1)
0000D0 C1                  A   813    	POP	BC
0000D1 C1                  A   814    	POP	BC
0000D2 C1                  A   815    	POP	BC
0000D3 01000000            A   816    	LD	BC,0
0000D7 B7                  A   817    	OR	A,A
0000D8 ED42                A   818    	SBC	HL,BC
0000DA C2 75 01 00         A   819    	JR	NZ,L_8
                           A   820    ;   48		{
                           A   821    ;   49			header.start = start;
                           A   822    .LINE 49
                           A   823    
0000DE DD070F              A   824    	LD	BC,(IX+%F)
0000E1 DD71FE              A   825    	LD	(IX+%FFFFFFFE),C
0000E4 DD70FF              A   826    	LD	(IX+%FFFFFFFF),B
                           A   827    ;   50			header.begin = begin;
                           A   828    .LINE 50
                           A   829    
0000E7 DD0709              A   830    	LD	BC,(IX+%9)
0000EA DD71FA              A   831    	LD	(IX+%FFFFFFFA),C
0000ED DD70FB              A   832    	LD	(IX+%FFFFFFFB),B
                           A   833    ;   51			header.end = end;
                           A   834    .LINE 51
                           A   835    
0000F0 DD070C              A   836    	LD	BC,(IX+%C)
0000F3 DD71FC              A   837    	LD	(IX+%FFFFFFFC),C
0000F6 DD70FD              A   838    	LD	(IX+%FFFFFFFD),B
                           A   839    ;   52			header.magic = 0xaa;
                           A   840    .LINE 52
                           A   841    
0000F9 DD36F9AA            A   842    	LD	(IX+%FFFFFFF9),%AA
                           A   843    ;   53	
                           A   844    ;   54			if (f_write (&f,&header,sizeof(
                           A   845    .LINE 54
                           A   846    
0000FD ED65F6              A   847    	PEA	IX+%FFFFFFF6
000100 01070000            A   848    	LD	BC,7
000104 C5                  A   849    	PUSH	BC
000105 ED65F9              A   850    	PEA	IX+%FFFFFFF9
000108 ED65D2              A   851    	PEA	IX+%FFFFFFD2
00010B DD77D1              A   852    	LD	(IX+%FFFFFFD1),A
00010E CD 00 00 00         A   853    	CALL	_f_write
000112 DD7ED1              A   854    	LD	A,(IX+%FFFFFFD1)
000115 C1                  A   855    	POP	BC
000116 C1                  A   856    	POP	BC
000117 C1                  A   857    	POP	BC
000118 C1                  A   858    	POP	BC
000119 01000000            A   859    	LD	BC,0
00011D B7                  A   860    	OR	A,A
00011E ED42                A   861    	SBC	HL,BC
000120 20 47               A   862    	JR	NZ,L_6
                           A   863    ;   55			{
                           A   864    ;   56				f_write (&f,&ram[header.beg
                           A   865    .LINE 56
                           A   866    
000122 ED65F6              A   867    	PEA	IX+%FFFFFFF6
000125 DD07FC              A   868    	LD	BC,(IX+%FFFFFFFC)
000128 CD 00 00 00         A   869    	CALL	__stoiu
00012C E5D1                A   870    	LD	DE,HL
00012E DD07FA              A   871    	LD	BC,(IX+%FFFFFFFA)
000131 CD 00 00 00         A   872    	CALL	__stoiu
000135 E5C1                A   873    	LD	BC,HL
000137 D5E1                A   874    	LD	HL,DE
000139 B7                  A   875    	OR	A,A
00013A ED42                A   876    	SBC	HL,BC
00013C E5                  A   877    	PUSH	HL
00013D DD07FA              A   878    	LD	BC,(IX+%FFFFFFFA)
000140 CD 00 00 00         A   879    	CALL	__stoiu
000144 E5C1                A   880    	LD	BC,HL
000146 DD7E06              A   881    	LD	A,(IX+%6)
000149 B7ED62              A   882    	UEXT	HL
00014C 6F                  A   883    	LD	L,A
00014D E5                  A   884    	PUSH	HL
00014E B7ED62              A   885    	UEXT	HL
000151 E5                  A   886    	PUSH	HL
000152 33                  A   887    	INC	SP
000153 E1                  A   888    	POP	HL
000154 33                  A   889    	INC	SP
000155 33                  A   890    	INC	SP
000156 09                  A   891    	ADD	HL,BC
000157 ED4B 00 00 00       A   892    	LD	BC,(_ram)
00015C 09                  A   893    	ADD	HL,BC
00015D E5                  A   894    	PUSH	HL
00015E ED65D2              A   895    	PEA	IX+%FFFFFFD2
000161 CD 00 00 00         A   896    	CALL	_f_write
000165 C1                  A   897    	POP	BC
000166 C1                  A   898    	POP	BC
000167 C1                  A   899    	POP	BC
000168 C1                  A   900    	POP	BC
                           A   901    ;   57				//printf ("[%s saved from %
                           A   902    ;   58			}
000169                     A   903    L_6:
                           A   904    .LINE 58
                           A   905    
                           A   906    ;   59			f_close (&f);
                           A   907    .LINE 59
                           A   908    
000169 ED65D2              A   909    	PEA	IX+%FFFFFFD2
00016C CD 00 00 00         A   910    	CALL	_f_close
000170 C1                  A   911    	POP	BC
                           A   912    ;   60			return TRUE;
                           A   913    .LINE 60
                           A   914    
000171 3E01                A   915    	LD	A,%1
000173 18 01               A   916    	JR	L_9
                           A   917    ;   61		}
                           A   918    ;   62		else
000175                     A   919    L_8:
                           A   920    .LINE 62
                           A   921    
                           A   922    ;   63		{
                           A   923    ;   64			//printf ("[%s NOT loaded]\r\n"
                           A   924    ;   65			return FALSE;
                           A   925    .LINE 65
                           A   926    
000175 AF                  A   927    	XOR	A,A
                           A   928    ;   66		}
                           A   929    ;   67	}
000176                     A   930    L_9:
                           A   931    .LINE 67
                           A   932    
000176 DDF9                A   933    	LD	SP,IX
000178 DDE1                A   934    	POP	IX
00017A C9                  A   935    	RET	
                           A   936    
                           A   937    
                           A   938    ;**************************** _machine_save_ima
                           A   939    ;Name                         Addr/Register   S
                           A   940    ;_f_close                            IMPORT  --
                           A   941    ;_ram                                STATIC    
                           A   942    ;_f_write                            IMPORT  --
                           A   943    ;_f_open                             IMPORT  --
                           A   944    ;f                                    IX-46    
                           A   945    ;bytes_written                        IX-10    
                           A   946    ;header                                IX-7    
                           A   947    ;filename                             IX+18    
                           A   948    ;start                                IX+15    
                           A   949    ;end                                  IX+12    
                           A   950    ;begin                                 IX+9    
                           A   951    ;bank                                  IX+6    
                           A   952    
                           A   953    
                           A   954    ; Stack Frame Size: 68 (bytes)
                           A   955    ;       Spill Code: 0 (instruction)
                           A   956    
                           A   957    
                           A   958    .ENDFUNC "machine_save_image",67,"_machine_save
                           A   959    ;   68	
                           A   960    ;   69	BOOL machine_mount_disk (UINT8 drive_nr
                           A   961    ;   70	{
00017B                     A   962    _machine_mount_disk:
                           A   963    .DEFINE "_machine_mount_disk"
                           A   964    
                           A   965    .VALUE _machine_mount_disk
                           A   966    
                           A   967    .CLASS 2
                           A   968    
                           A   969    .TYPE 76
                           A   970    
                           A   971    .ENDEF
                           A   972    
                           A   973    .BEGFUNC "machine_mount_disk",70,"_machine_moun
                           A   974    
                           A   975    .LINE 70
                           A   976    
                           A   977    .DEFINE "drive_nr"
                           A   978    
                           A   979    .CLASS 65
                           A   980    
                           A   981    .VALUE 6
                           A   982    
                           A   983    .TYPE 12
                           A   984    
                           A   985    .ENDEF
                           A   986    
                           A   987    .DEFINE "filename"
                           A   988    
                           A   989    .CLASS 65
                           A   990    
                           A   991    .VALUE 9
                           A   992    
                           A   993    .TYPE 34
                           A   994    
                           A   995    .ENDEF
                           A   996    
                           A   997    .DEFINE "secsize"
                           A   998    
                           A   999    .CLASS 65
                           A  1000    
                           A  1001    .VALUE 12
                           A  1002    
                           A  1003    .TYPE 4
                           A  1004    
                           A  1005    .ENDEF
                           A  1006    
                           A  1007    .DEFINE "drive_letter"
                           A  1008    
                           A  1009    .CLASS 65
                           A  1010    
                           A  1011    .VALUE -9
                           A  1012    
                           A  1013    .DIM 9
                           A  1014    
                           A  1015    .TYPE 98
                           A  1016    
                           A  1017    .ENDEF
                           A  1018    
00017B DDE5                A  1019    	PUSH	IX
00017D DD210000 00         A  1020    	LD	IX,0
000182 DD39                A  1021    	ADD	IX,SP
000184 C5                  A  1022    	PUSH	BC
000185 C5                  A  1023    	PUSH	BC
000186 C5                  A  1024    	PUSH	BC
                           A  1025    ;   71		const char drive_letter[] = "ABCDEF
                           A  1026    .LINE 71
                           A  1027    
000187 ED12F7              A  1028    	LEA	DE,IX+%FFFFFFF7
00018A 21 00 00 00         A  1029    	LD	HL,_0temp10
00018E 01090000            A  1030    	LD	BC,9
000192 EDB0                A  1031    	LDIR	
                           A  1032    ;   72		if (f_open(&disks[drive_nr], filena
                           A  1033    .LINE 72
                           A  1034    
000194 01030000            A  1035    	LD	BC,3
000198 C5                  A  1036    	PUSH	BC
000199 DD0709              A  1037    	LD	BC,(IX+%9)
00019C C5                  A  1038    	PUSH	BC
00019D DD7E06              A  1039    	LD	A,(IX+%6)
0001A0 B7ED62              A  1040    	UEXT	HL
0001A3 6F                  A  1041    	LD	L,A
0001A4 3E24                A  1042    	LD	A,%24
0001A6 CD 00 00 00         A  1043    	CALL	__imul_b
0001AA 01 04 00 00         A  1044    	LD	BC,_disks
0001AE 09                  A  1045    	ADD	HL,BC
0001AF E5                  A  1046    	PUSH	HL
0001B0 CD 00 00 00         A  1047    	CALL	_f_open
0001B4 C1                  A  1048    	POP	BC
0001B5 C1                  A  1049    	POP	BC
0001B6 C1                  A  1050    	POP	BC
0001B7 01000000            A  1051    	LD	BC,0
0001BB B7                  A  1052    	OR	A,A
0001BC ED42                A  1053    	SBC	HL,BC
0001BE 20 0C               A  1054    	JR	NZ,L_12
                           A  1055    ;   73		{
                           A  1056    ;   74			//printf ("[%s mounted as disk 
                           A  1057    ;   75			_secsize = secsize;
                           A  1058    .LINE 75
                           A  1059    
0001C0 DD070C              A  1060    	LD	BC,(IX+%C)
0001C3 ED43 24 02 00       A  1061    	LD	(__secsize),BC
                           A  1062    ;   76			return TRUE;
                           A  1063    .LINE 76
                           A  1064    
0001C8 3E01                A  1065    	LD	A,%1
0001CA 18 01               A  1066    	JR	L_13
                           A  1067    ;   77		}
                           A  1068    ;   78		else
0001CC                     A  1069    L_12:
                           A  1070    .LINE 78
                           A  1071    
                           A  1072    ;   79		{
                           A  1073    ;   80			//printf ("[%s NOT mounted]\r\n
                           A  1074    ;   81			return FALSE;
                           A  1075    .LINE 81
                           A  1076    
0001CC AF                  A  1077    	XOR	A,A
                           A  1078    ;   82		}
                           A  1079    ;   83	}
0001CD                     A  1080    L_13:
                           A  1081    .LINE 83
                           A  1082    
0001CD DDF9                A  1083    	LD	SP,IX
0001CF DDE1                A  1084    	POP	IX
0001D1 C9                  A  1085    	RET	
                           A  1086    
                           A  1087    
                           A  1088    ;**************************** _machine_mount_di
                           A  1089    ;Name                         Addr/Register   S
                           A  1090    ;__secsize                           STATIC    
                           A  1091    ;_disks                              STATIC    
                           A  1092    ;_f_open                             IMPORT  --
                           A  1093    ;_0temp10                            STATIC    
                           A  1094    ;drive_letter                          IX-9    
                           A  1095    ;secsize                              IX+12    
                           A  1096    ;filename                              IX+9    
                           A  1097    ;drive_nr                              IX+6    
                           A  1098    
                           A  1099    
                           A  1100    ; Stack Frame Size: 24 (bytes)
                           A  1101    ;       Spill Code: 0 (instruction)
                           A  1102    
                           A  1103    
                           A  1104    .ENDFUNC "machine_mount_disk",83,"_machine_moun
                           A  1105    	SEGMENT TEXT
000000                     A  1106    _0temp10:
000000 41                  A  1107    	DB	65
000001 42                  A  1108    	DB	66
000002 43                  A  1109    	DB	67
000003 44                  A  1110    	DB	68
000004 45                  A  1111    	DB	69
000005 46                  A  1112    	DB	70
000006 47                  A  1113    	DB	71
000007 48                  A  1114    	DB	72
000008 00                  A  1115    	DB	0
                           A  1116    	SEGMENT CODE
                           A  1117    ;   84	
                           A  1118    ;   85	BOOL machine_init ()
                           A  1119    ;   86	{
0001D2                     A  1120    _machine_init:
                           A  1121    .DEFINE "_machine_init"
                           A  1122    
                           A  1123    .VALUE _machine_init
                           A  1124    
                           A  1125    .CLASS 2
                           A  1126    
                           A  1127    .TYPE 76
                           A  1128    
                           A  1129    .ENDEF
                           A  1130    
                           A  1131    .BEGFUNC "machine_init",86,"_machine_init"
                           A  1132    
0001D2 DDE5                A  1133    	PUSH	IX
0001D4 DD210000 00         A  1134    	LD	IX,0
0001D9 DD39                A  1135    	ADD	IX,SP
                           A  1136    ;   87		ram = (INT8*) 0x050000;
                           A  1137    .LINE 87
                           A  1138    
0001DB 01000005            A  1139    	LD	BC,327680
0001DF ED43 00 00 00       A  1140    	LD	(_ram),BC
                           A  1141    ;   88		mbase = 0x05;
                           A  1142    .LINE 88
                           A  1143    
0001E4 3E05                A  1144    	LD	A,%5
0001E6 32 03 00 00         A  1145    	LD	(_mbase),A
                           A  1146    ;   89		RAM_ADDR_U = mbase; // MSM: map int
                           A  1147    .LINE 89
                           A  1148    
0001EA ED39B5              A  1149    	OUT0	(181),A
                           A  1150    ;   90		machine_vsync_address=0x0000;
                           A  1151    .LINE 90
                           A  1152    
0001ED AF                  A  1153    	XOR	A,A
0001EE 32 27 02 00         A  1154    	LD	(_machine_vsync_address),A
0001F2 AF                  A  1155    	XOR	A,A
0001F3 32 28 02 00         A  1156    	LD	(_machine_vsync_address+1),A
                           A  1157    ;   91		machine_vsync=0;
                           A  1158    .LINE 91
                           A  1159    
0001F7 AF                  A  1160    	XOR	A,A
0001F8 32 29 02 00         A  1161    	LD	(_machine_vsync),A
                           A  1162    ;   92		
                           A  1163    ;   93		return TRUE;
                           A  1164    .LINE 93
                           A  1165    
0001FC 3E01                A  1166    	LD	A,%1
                           A  1167    ;   94	}
                           A  1168    .LINE 94
                           A  1169    
0001FE DDF9                A  1170    	LD	SP,IX
000200 DDE1                A  1171    	POP	IX
000202 C9                  A  1172    	RET	
                           A  1173    
                           A  1174    
                           A  1175    ;**************************** _machine_init ***
                           A  1176    ;Name                         Addr/Register   S
                           A  1177    ;_machine_vsync                      STATIC    
                           A  1178    ;_machine_vsync_address              STATIC    
                           A  1179    ;_mbase                              STATIC    
                           A  1180    ;_ram                                STATIC    
                           A  1181    
                           A  1182    
                           A  1183    ; Stack Frame Size: 6 (bytes)
                           A  1184    ;       Spill Code: 0 (instruction)
                           A  1185    
                           A  1186    
                           A  1187    .ENDFUNC "machine_init",94,"_machine_init"
                           A  1188    ;   95	
                           A  1189    ;   96	void machine_start (UINT8 bank,UINT16 s
                           A  1190    ;   97	{
000203                     A  1191    _machine_start:
                           A  1192    .DEFINE "_machine_start"
                           A  1193    
                           A  1194    .VALUE _machine_start
                           A  1195    
                           A  1196    .CLASS 2
                           A  1197    
                           A  1198    .TYPE 65
                           A  1199    
                           A  1200    .ENDEF
                           A  1201    
                           A  1202    .BEGFUNC "machine_start",97,"_machine_start"
                           A  1203    
                           A  1204    .LINE 97
                           A  1205    
                           A  1206    .DEFINE "bank"
                           A  1207    
                           A  1208    .CLASS 65
                           A  1209    
                           A  1210    .VALUE 6
                           A  1211    
                           A  1212    .TYPE 12
                           A  1213    
                           A  1214    .ENDEF
                           A  1215    
                           A  1216    .DEFINE "start_address"
                           A  1217    
                           A  1218    .CLASS 65
                           A  1219    
                           A  1220    .VALUE 9
                           A  1221    
                           A  1222    .TYPE 13
                           A  1223    
                           A  1224    .ENDEF
                           A  1225    
000203 DDE5                A  1226    	PUSH	IX
000205 DD210000 00         A  1227    	LD	IX,0
00020A DD39                A  1228    	ADD	IX,SP
                           A  1229    ;   98		exec16((UINT24)(ram+start_address+b
                           A  1230    .LINE 98
                           A  1231    
00020C 01000000            A  1232    	LD	BC,0
000210 C5                  A  1233    	PUSH	BC
000211 DD0709              A  1234    	LD	BC,(IX+%9)
000214 CD 00 00 00         A  1235    	CALL	__stoiu
000218 ED4B 00 00 00       A  1236    	LD	BC,(_ram)
00021D 09                  A  1237    	ADD	HL,BC
00021E E5C1                A  1238    	LD	BC,HL
000220 DD7E06              A  1239    	LD	A,(IX+%6)
000223 B7ED62              A  1240    	UEXT	HL
000226 6F                  A  1241    	LD	L,A
000227 E5                  A  1242    	PUSH	HL
000228 B7ED62              A  1243    	UEXT	HL
00022B E5                  A  1244    	PUSH	HL
00022C 33                  A  1245    	INC	SP
00022D E1                  A  1246    	POP	HL
00022E 33                  A  1247    	INC	SP
00022F 33                  A  1248    	INC	SP
000230 09                  A  1249    	ADD	HL,BC
000231 E5                  A  1250    	PUSH	HL
000232 CD 00 00 00         A  1251    	CALL	_exec16
000236 C1                  A  1252    	POP	BC
000237 C1                  A  1253    	POP	BC
                           A  1254    ;   99	}
                           A  1255    .LINE 99
                           A  1256    
000238 DDF9                A  1257    	LD	SP,IX
00023A DDE1                A  1258    	POP	IX
00023C C9                  A  1259    	RET	
                           A  1260    
                           A  1261    
                           A  1262    ;**************************** _machine_start **
                           A  1263    ;Name                         Addr/Register   S
                           A  1264    ;_ram                                STATIC    
                           A  1265    ;_exec16                             IMPORT  --
                           A  1266    ;start_address                         IX+9    
                           A  1267    ;bank                                  IX+6    
                           A  1268    
                           A  1269    
                           A  1270    ; Stack Frame Size: 12 (bytes)
                           A  1271    ;       Spill Code: 0 (instruction)
                           A  1272    
                           A  1273    
                           A  1274    .ENDFUNC "machine_start",99,"_machine_start"
                           A  1275    ;  100	
                           A  1276    ;  101	BOOL machine_set_warmboot_image (UINT8 
                           A  1277    ;  102	{
00023D                     A  1278    _machine_set_warmboot_image:
                           A  1279    .DEFINE "_machine_set_warmboot_image"
                           A  1280    
                           A  1281    .VALUE _machine_set_warmboot_image
                           A  1282    
                           A  1283    .CLASS 2
                           A  1284    
                           A  1285    .TYPE 76
                           A  1286    
                           A  1287    .ENDEF
                           A  1288    
                           A  1289    .BEGFUNC "machine_set_warmboot_image",102,"_mac
                           A  1290    
                           A  1291    .LINE 102
                           A  1292    
                           A  1293    .DEFINE "bank"
                           A  1294    
                           A  1295    .CLASS 65
                           A  1296    
                           A  1297    .VALUE 6
                           A  1298    
                           A  1299    .TYPE 12
                           A  1300    
                           A  1301    .ENDEF
                           A  1302    
                           A  1303    .DEFINE "szFilename"
                           A  1304    
                           A  1305    .CLASS 65
                           A  1306    
                           A  1307    .VALUE 9
                           A  1308    
                           A  1309    .TYPE 34
                           A  1310    
                           A  1311    .ENDEF
                           A  1312    
00023D DDE5                A  1313    	PUSH	IX
00023F DD210000 00         A  1314    	LD	IX,0
000244 DD39                A  1315    	ADD	IX,SP
                           A  1316    ;  103		wb_bank = bank;
                           A  1317    .LINE 103
                           A  1318    
000246 DD7E06              A  1319    	LD	A,(IX+%6)
000249 32 23 02 00         A  1320    	LD	(_wb_bank),A
                           A  1321    ;  104		strcpy (szWarmBootImage,szFilename)
                           A  1322    .LINE 104
                           A  1323    
00024D DD0709              A  1324    	LD	BC,(IX+%9)
000250 C5                  A  1325    	PUSH	BC
000251 01 24 01 00         A  1326    	LD	BC,_szWarmBootImage
000255 C5                  A  1327    	PUSH	BC
000256 CD 00 00 00         A  1328    	CALL	_strcpy
00025A C1                  A  1329    	POP	BC
00025B C1                  A  1330    	POP	BC
                           A  1331    ;  105		return TRUE;
                           A  1332    .LINE 105
                           A  1333    
00025C 3E01                A  1334    	LD	A,%1
                           A  1335    ;  106	}
                           A  1336    .LINE 106
                           A  1337    
00025E DDF9                A  1338    	LD	SP,IX
000260 DDE1                A  1339    	POP	IX
000262 C9                  A  1340    	RET	
                           A  1341    
                           A  1342    
                           A  1343    ;**************************** _machine_set_warm
                           A  1344    ;Name                         Addr/Register   S
                           A  1345    ;_szWarmBootImage                    STATIC    
                           A  1346    ;_strcpy                             IMPORT  --
                           A  1347    ;_wb_bank                            STATIC    
                           A  1348    ;szFilename                            IX+9    
                           A  1349    ;bank                                  IX+6    
                           A  1350    
                           A  1351    
                           A  1352    ; Stack Frame Size: 12 (bytes)
                           A  1353    ;       Spill Code: 0 (instruction)
                           A  1354    
                           A  1355    
                           A  1356    .ENDFUNC "machine_set_warmboot_image",106,"_mac
                           A  1357    ;  107	void machine_warm_boot ()
                           A  1358    ;  108	{
000263                     A  1359    _machine_warm_boot:
                           A  1360    .DEFINE "_machine_warm_boot"
                           A  1361    
                           A  1362    .VALUE _machine_warm_boot
                           A  1363    
                           A  1364    .CLASS 2
                           A  1365    
                           A  1366    .TYPE 65
                           A  1367    
                           A  1368    .ENDEF
                           A  1369    
                           A  1370    .BEGFUNC "machine_warm_boot",108,"_machine_warm
                           A  1371    
000263 DDE5                A  1372    	PUSH	IX
000265 DD210000 00         A  1373    	LD	IX,0
00026A DD39                A  1374    	ADD	IX,SP
                           A  1375    ;  109		machine_load_image (wb_bank,szWarmB
                           A  1376    .LINE 109
                           A  1377    
00026C 01 24 01 00         A  1378    	LD	BC,_szWarmBootImage
000270 C5                  A  1379    	PUSH	BC
000271 3A 23 02 00         A  1380    	LD	A,(_wb_bank)
000275 4F                  A  1381    	LD	C,A
000276 0600                A  1382    	LD	B,%0
000278 C5                  A  1383    	PUSH	BC
000279 CD 00 00 00         A  1384    	CALL	_machine_load_image
00027D C1                  A  1385    	POP	BC
00027E C1                  A  1386    	POP	BC
                           A  1387    ;  110	}
                           A  1388    .LINE 110
                           A  1389    
00027F DDF9                A  1390    	LD	SP,IX
000281 DDE1                A  1391    	POP	IX
000283 C9                  A  1392    	RET	
                           A  1393    
                           A  1394    
                           A  1395    ;**************************** _machine_warm_boo
                           A  1396    ;Name                         Addr/Register   S
                           A  1397    ;_wb_bank                            STATIC    
                           A  1398    ;_szWarmBootImage                    STATIC    
                           A  1399    ;_machine_load_image                 IMPORT  --
                           A  1400    
                           A  1401    
                           A  1402    ; Stack Frame Size: 6 (bytes)
                           A  1403    ;       Spill Code: 0 (instruction)
                           A  1404    
                           A  1405    
                           A  1406    .ENDFUNC "machine_warm_boot",110,"_machine_warm
                           A  1407    ;  111	
                           A  1408    ;  112	UINT16 machine_read_write_disk (UINT16 
                           A  1409    ;  113	{
000284                     A  1410    _machine_read_write_disk:
                           A  1411    .DEFINE "_machine_read_write_disk"
                           A  1412    
                           A  1413    .VALUE _machine_read_write_disk
                           A  1414    
                           A  1415    .CLASS 2
                           A  1416    
                           A  1417    .TYPE 77
                           A  1418    
                           A  1419    .ENDEF
                           A  1420    
                           A  1421    .BEGFUNC "machine_read_write_disk",113,"_machin
                           A  1422    
                           A  1423    .LINE 113
                           A  1424    
                           A  1425    .DEFINE "mbase"
                           A  1426    
                           A  1427    .CLASS 65
                           A  1428    
                           A  1429    .VALUE 6
                           A  1430    
                           A  1431    .TYPE 13
                           A  1432    
                           A  1433    .ENDEF
                           A  1434    
                           A  1435    .DEFINE "af"
                           A  1436    
                           A  1437    .CLASS 65
                           A  1438    
                           A  1439    .VALUE 9
                           A  1440    
                           A  1441    .TYPE 13
                           A  1442    
                           A  1443    .ENDEF
                           A  1444    
                           A  1445    .DEFINE "bc"
                           A  1446    
                           A  1447    .CLASS 65
                           A  1448    
                           A  1449    .VALUE 12
                           A  1450    
                           A  1451    .TYPE 13
                           A  1452    
                           A  1453    .ENDEF
                           A  1454    
                           A  1455    .DEFINE "de"
                           A  1456    
                           A  1457    .CLASS 65
                           A  1458    
                           A  1459    .VALUE 15
                           A  1460    
                           A  1461    .TYPE 13
                           A  1462    
                           A  1463    .ENDEF
                           A  1464    
                           A  1465    .DEFINE "hl"
                           A  1466    
                           A  1467    .CLASS 65
                           A  1468    
                           A  1469    .VALUE 18
                           A  1470    
                           A  1471    .TYPE 13
                           A  1472    
                           A  1473    .ENDEF
                           A  1474    
                           A  1475    .DEFINE "a"
                           A  1476    
                           A  1477    .CLASS 65
                           A  1478    
                           A  1479    .VALUE -1
                           A  1480    
                           A  1481    .TYPE 12
                           A  1482    
                           A  1483    .ENDEF
                           A  1484    
                           A  1485    .DEFINE "b"
                           A  1486    
                           A  1487    .CLASS 65
                           A  1488    
                           A  1489    .VALUE -2
                           A  1490    
                           A  1491    .TYPE 12
                           A  1492    
                           A  1493    .ENDEF
                           A  1494    
                           A  1495    .DEFINE "mb"
                           A  1496    
                           A  1497    .CLASS 65
                           A  1498    
                           A  1499    .VALUE -3
                           A  1500    
                           A  1501    .TYPE 12
                           A  1502    
                           A  1503    .ENDEF
                           A  1504    
                           A  1505    .DEFINE "carry"
                           A  1506    
                           A  1507    .CLASS 65
                           A  1508    
                           A  1509    .VALUE -4
                           A  1510    
                           A  1511    .TYPE 12
                           A  1512    
                           A  1513    .ENDEF
                           A  1514    
                           A  1515    .DEFINE "sectorbuffer"
                           A  1516    
                           A  1517    .CLASS 65
                           A  1518    
                           A  1519    .VALUE -7
                           A  1520    
                           A  1521    .TYPE 34
                           A  1522    
                           A  1523    .ENDEF
                           A  1524    
                           A  1525    .DEFINE "bytes_written"
                           A  1526    
                           A  1527    .CLASS 65
                           A  1528    
                           A  1529    .VALUE -10
                           A  1530    
                           A  1531    .TYPE 14
                           A  1532    
                           A  1533    .ENDEF
                           A  1534    
                           A  1535    .DEFINE "bytes_read"
                           A  1536    
                           A  1537    .CLASS 65
                           A  1538    
                           A  1539    .VALUE -13
                           A  1540    
                           A  1541    .TYPE 14
                           A  1542    
                           A  1543    .ENDEF
                           A  1544    
                           A  1545    .DEFINE "drive_letter"
                           A  1546    
                           A  1547    .CLASS 65
                           A  1548    
                           A  1549    .VALUE -22
                           A  1550    
                           A  1551    .DIM 9
                           A  1552    
                           A  1553    .TYPE 98
                           A  1554    
                           A  1555    .ENDEF
                           A  1556    
000284 DDE5                A  1557    	PUSH	IX
000286 DD210000 00         A  1558    	LD	IX,0
00028B DD39                A  1559    	ADD	IX,SP
00028D ED22E7              A  1560    	LEA	HL,IX+%FFFFFFE7
000290 F9                  A  1561    	LD	SP,HL
                           A  1562    ;  114		const char drive_letter[] = "ABCDEF
                           A  1563    .LINE 114
                           A  1564    
000291 ED12EA              A  1565    	LEA	DE,IX+%FFFFFFEA
000294 21 09 00 00         A  1566    	LD	HL,_1temp18
000298 01090000            A  1567    	LD	BC,9
00029C EDB0                A  1568    	LDIR	
                           A  1569    ;  115		UINT bytes_read,bytes_written;
                           A  1570    ;  116		INT8* sectorbuffer;
                           A  1571    ;  117		UINT8 mb = (mbase>>8)-5;
                           A  1572    .LINE 117
                           A  1573    
00029E DD0706              A  1574    	LD	BC,(IX+%6)
0002A1 CD 00 00 00         A  1575    	CALL	__stoiu
0002A5 E5C1                A  1576    	LD	BC,HL
0002A7 3B                  A  1577    	DEC	SP
0002A8 C5                  A  1578    	PUSH	BC
0002A9 33                  A  1579    	INC	SP
0002AA F1                  A  1580    	POP	AF
0002AB 17ED62              A  1581    	SEXT	HL
0002AE E5                  A  1582    	PUSH	HL
0002AF C5                  A  1583    	PUSH	BC
0002B0 33                  A  1584    	INC	SP
0002B1 E1                  A  1585    	POP	HL
0002B2 33                  A  1586    	INC	SP
0002B3 33                  A  1587    	INC	SP
0002B4 7D                  A  1588    	LD	A,L
0002B5 D605                A  1589    	SUB	A,%5
0002B7 DD77FD              A  1590    	LD	(IX+%FFFFFFFD),A
                           A  1591    ;  118		UINT8 a = af>>8;
                           A  1592    .LINE 118
                           A  1593    
0002BA DD0709              A  1594    	LD	BC,(IX+%9)
0002BD CD 00 00 00         A  1595    	CALL	__stoiu
0002C1 E5C1                A  1596    	LD	BC,HL
0002C3 3B                  A  1597    	DEC	SP
0002C4 C5                  A  1598    	PUSH	BC
0002C5 33                  A  1599    	INC	SP
0002C6 F1                  A  1600    	POP	AF
0002C7 17ED62              A  1601    	SEXT	HL
0002CA E5                  A  1602    	PUSH	HL
0002CB C5                  A  1603    	PUSH	BC
0002CC 33                  A  1604    	INC	SP
0002CD E1                  A  1605    	POP	HL
0002CE 33                  A  1606    	INC	SP
0002CF 33                  A  1607    	INC	SP
0002D0 DD75FF              A  1608    	LD	(IX+%FFFFFFFF),L
                           A  1609    ;  119		UINT8 b = bc>>8;
                           A  1610    .LINE 119
                           A  1611    
0002D3 DD070C              A  1612    	LD	BC,(IX+%C)
0002D6 CD 00 00 00         A  1613    	CALL	__stoiu
0002DA E5C1                A  1614    	LD	BC,HL
0002DC 3B                  A  1615    	DEC	SP
0002DD C5                  A  1616    	PUSH	BC
0002DE 33                  A  1617    	INC	SP
0002DF F1                  A  1618    	POP	AF
0002E0 17ED62              A  1619    	SEXT	HL
0002E3 E5                  A  1620    	PUSH	HL
0002E4 C5                  A  1621    	PUSH	BC
0002E5 33                  A  1622    	INC	SP
0002E6 E1                  A  1623    	POP	HL
0002E7 33                  A  1624    	INC	SP
0002E8 33                  A  1625    	INC	SP
0002E9 DD75FE              A  1626    	LD	(IX+%FFFFFFFE),L
                           A  1627    ;  120		BOOL carry = af & 1;
                           A  1628    .LINE 120
                           A  1629    
0002EC DD7E09              A  1630    	LD	A,(IX+%9)
0002EF E601                A  1631    	AND	A,%1
0002F1 DD77FC              A  1632    	LD	(IX+%FFFFFFFC),A
                           A  1633    ;  121	
                           A  1634    ;  122		/*
                           A  1635    ;  123		printf ("%04x %04x %04x %04x\r\n",a
                           A  1636    ;  124		printf ("%s %d bytes from location 
                           A  1637    ;  125			carry?"Written":"Read",
                           A  1638    ;  126			b*_secsize,
                           A  1639    ;  127			de*_secsize,
                           A  1640    ;  128			hl,
                           A  1641    ;  129			drive_letter[a]);
                           A  1642    ;  130		*/
                           A  1643    ;  131	
                           A  1644    ;  132		if (f_lseek(&disks[a], de*_secsize)
                           A  1645    .LINE 132
                           A  1646    
0002F4 ED4B 24 02 00       A  1647    	LD	BC,(__secsize)
0002F9 CD 00 00 00         A  1648    	CALL	__itol
0002FD DD0FE7              A  1649    	LD	(IX+%FFFFFFE7),BC
000300 5F                  A  1650    	LD	E,A
000301 DD070F              A  1651    	LD	BC,(IX+%F)
000304 CD 00 00 00         A  1652    	CALL	__stoiu
000308 E5C1                A  1653    	LD	BC,HL
00030A AF                  A  1654    	XOR	A,A
00030B DD27E7              A  1655    	LD	HL,(IX+%FFFFFFE7)
00030E CD 00 00 00         A  1656    	CALL	__lmulu
000312 4B                  A  1657    	LD	C,E
000313 0600                A  1658    	LD	B,%0
000315 C5                  A  1659    	PUSH	BC
000316 E5                  A  1660    	PUSH	HL
000317 DD7EFF              A  1661    	LD	A,(IX+%FFFFFFFF)
00031A B7ED62              A  1662    	UEXT	HL
00031D 6F                  A  1663    	LD	L,A
00031E 3E24                A  1664    	LD	A,%24
000320 CD 00 00 00         A  1665    	CALL	__imul_b
000324 01 04 00 00         A  1666    	LD	BC,_disks
000328 09                  A  1667    	ADD	HL,BC
000329 E5                  A  1668    	PUSH	HL
00032A CD 00 00 00         A  1669    	CALL	_f_lseek
00032E C1                  A  1670    	POP	BC
00032F C1                  A  1671    	POP	BC
000330 C1                  A  1672    	POP	BC
000331 01000000            A  1673    	LD	BC,0
000335 B7                  A  1674    	OR	A,A
000336 ED42                A  1675    	SBC	HL,BC
000338 28 08               A  1676    	JR	Z,L_20
                           A  1677    ;  133	        return 0x0101; // return A=1 + 
                           A  1678    .LINE 133
                           A  1679    
00033A 49210101            A  1680    	LD.LIS	HL,257
00033E C3 F4 03 00         A  1681    	JR	L_26
000342                     A  1682    L_20:
                           A  1683    ;  134	
                           A  1684    ;  135		sectorbuffer = ram + hl + mb*0x1000
                           A  1685    .LINE 135
                           A  1686    
000342 DD0712              A  1687    	LD	BC,(IX+%12)
000345 CD 00 00 00         A  1688    	CALL	__stoiu
000349 ED4B 00 00 00       A  1689    	LD	BC,(_ram)
00034E 09                  A  1690    	ADD	HL,BC
00034F E5C1                A  1691    	LD	BC,HL
000351 DD7EFD              A  1692    	LD	A,(IX+%FFFFFFFD)
000354 B7ED62              A  1693    	UEXT	HL
000357 6F                  A  1694    	LD	L,A
000358 E5                  A  1695    	PUSH	HL
000359 B7ED62              A  1696    	UEXT	HL
00035C E5                  A  1697    	PUSH	HL
00035D 33                  A  1698    	INC	SP
00035E E1                  A  1699    	POP	HL
00035F 33                  A  1700    	INC	SP
000360 33                  A  1701    	INC	SP
000361 09                  A  1702    	ADD	HL,BC
000362 DD2FF9              A  1703    	LD	(IX+%FFFFFFF9),HL
                           A  1704    ;  136		if (carry==FALSE)
                           A  1705    .LINE 136
                           A  1706    
000365 DD7EFC              A  1707    	LD	A,(IX+%FFFFFFFC)
000368 B7                  A  1708    	OR	A,A
000369 20 43               A  1709    	JR	NZ,L_24
                           A  1710    ;  137		{
                           A  1711    ;  138			// read
                           A  1712    ;  139			if (f_read(&disks[a], sectorbuf
                           A  1713    .LINE 139
                           A  1714    
00036B ED65F3              A  1715    	PEA	IX+%FFFFFFF3
00036E DD7EFE              A  1716    	LD	A,(IX+%FFFFFFFE)
000371 B7ED62              A  1717    	UEXT	HL
000374 6F                  A  1718    	LD	L,A
000375 E5C1                A  1719    	LD	BC,HL
000377 2A 24 02 00         A  1720    	LD	HL,(__secsize)
00037B CD 00 00 00         A  1721    	CALL	__imulu
00037F E5                  A  1722    	PUSH	HL
000380 DD07F9              A  1723    	LD	BC,(IX+%FFFFFFF9)
000383 C5                  A  1724    	PUSH	BC
000384 DD7EFF              A  1725    	LD	A,(IX+%FFFFFFFF)
000387 B7ED62              A  1726    	UEXT	HL
00038A 6F                  A  1727    	LD	L,A
00038B 3E24                A  1728    	LD	A,%24
00038D CD 00 00 00         A  1729    	CALL	__imul_b
000391 01 04 00 00         A  1730    	LD	BC,_disks
000395 09                  A  1731    	ADD	HL,BC
000396 E5                  A  1732    	PUSH	HL
000397 CD 00 00 00         A  1733    	CALL	_f_read
00039B C1                  A  1734    	POP	BC
00039C C1                  A  1735    	POP	BC
00039D C1                  A  1736    	POP	BC
00039E C1                  A  1737    	POP	BC
00039F 01000000            A  1738    	LD	BC,0
0003A3 B7                  A  1739    	OR	A,A
0003A4 ED42                A  1740    	SBC	HL,BC
0003A6 28 49               A  1741    	JR	Z,L_25
                           A  1742    ;  140				return 0x0101; // return A=
                           A  1743    .LINE 140
                           A  1744    
0003A8 49210101            A  1745    	LD.LIS	HL,257
0003AC 18 46               A  1746    	JR	L_26
                           A  1747    ;  141		}
                           A  1748    ;  142		else
0003AE                     A  1749    L_24:
                           A  1750    .LINE 142
                           A  1751    
                           A  1752    ;  143		{
                           A  1753    ;  144			// write
                           A  1754    ;  145			if (f_write(&disks[a], sectorbu
                           A  1755    .LINE 145
                           A  1756    
0003AE ED65F6              A  1757    	PEA	IX+%FFFFFFF6
0003B1 DD7EFE              A  1758    	LD	A,(IX+%FFFFFFFE)
0003B4 B7ED62              A  1759    	UEXT	HL
0003B7 6F                  A  1760    	LD	L,A
0003B8 E5C1                A  1761    	LD	BC,HL
0003BA 2A 24 02 00         A  1762    	LD	HL,(__secsize)
0003BE CD 00 00 00         A  1763    	CALL	__imulu
0003C2 E5                  A  1764    	PUSH	HL
0003C3 DD07F9              A  1765    	LD	BC,(IX+%FFFFFFF9)
0003C6 C5                  A  1766    	PUSH	BC
0003C7 DD7EFF              A  1767    	LD	A,(IX+%FFFFFFFF)
0003CA B7ED62              A  1768    	UEXT	HL
0003CD 6F                  A  1769    	LD	L,A
0003CE 3E24                A  1770    	LD	A,%24
0003D0 CD 00 00 00         A  1771    	CALL	__imul_b
0003D4 01 04 00 00         A  1772    	LD	BC,_disks
0003D8 09                  A  1773    	ADD	HL,BC
0003D9 E5                  A  1774    	PUSH	HL
0003DA CD 00 00 00         A  1775    	CALL	_f_write
0003DE C1                  A  1776    	POP	BC
0003DF C1                  A  1777    	POP	BC
0003E0 C1                  A  1778    	POP	BC
0003E1 C1                  A  1779    	POP	BC
0003E2 01000000            A  1780    	LD	BC,0
0003E6 B7                  A  1781    	OR	A,A
0003E7 ED42                A  1782    	SBC	HL,BC
0003E9 28 06               A  1783    	JR	Z,L_25
                           A  1784    ;  146				return 0x0101; // return A=
                           A  1785    .LINE 146
                           A  1786    
0003EB 49210101            A  1787    	LD.LIS	HL,257
0003EF 18 03               A  1788    	JR	L_26
                           A  1789    ;  147		}
0003F1                     A  1790    L_25:
                           A  1791    .LINE 147
                           A  1792    
                           A  1793    ;  148		return 0x0000; // no error-code, no
                           A  1794    .LINE 148
                           A  1795    
0003F1 B7                  A  1796    	OR	A,A
0003F2 ED62                A  1797    	SBC	HL,HL
                           A  1798    ;  149	}
0003F4                     A  1799    L_26:
                           A  1800    .LINE 149
                           A  1801    
0003F4 DDF9                A  1802    	LD	SP,IX
0003F6 DDE1                A  1803    	POP	IX
0003F8 C9                  A  1804    	RET	
                           A  1805    
                           A  1806    
                           A  1807    ;**************************** _machine_read_wri
                           A  1808    ;Name                         Addr/Register   S
                           A  1809    ;_f_write                            IMPORT  --
                           A  1810    ;_f_read                             IMPORT  --
                           A  1811    ;_ram                                STATIC    
                           A  1812    ;_disks                              STATIC    
                           A  1813    ;__secsize                           STATIC    
                           A  1814    ;_f_lseek                            IMPORT  --
                           A  1815    ;_1temp18                            STATIC    
                           A  1816    ;drive_letter                         IX-22    
                           A  1817    ;bytes_read                           IX-13    
                           A  1818    ;bytes_written                        IX-10    
                           A  1819    ;sectorbuffer                          IX-7    
                           A  1820    ;carry                                 IX-4    
                           A  1821    ;mb                                    IX-3    
                           A  1822    ;b                                     IX-2    
                           A  1823    ;a                                     IX-1    
                           A  1824    ;hl                                   IX+18    
                           A  1825    ;de                                   IX+15    
                           A  1826    ;bc                                   IX+12    
                           A  1827    ;af                                    IX+9    
                           A  1828    ;mbase                                 IX+6    
                           A  1829    
                           A  1830    
                           A  1831    ; Stack Frame Size: 46 (bytes)
                           A  1832    ;       Spill Code: 0 (instruction)
                           A  1833    
                           A  1834    
                           A  1835    .ENDFUNC "machine_read_write_disk",149,"_machin
                           A  1836    	SEGMENT TEXT
000009                     A  1837    _1temp18:
000009 41                  A  1838    	DB	65
00000A 42                  A  1839    	DB	66
00000B 43                  A  1840    	DB	67
00000C 44                  A  1841    	DB	68
00000D 45                  A  1842    	DB	69
00000E 46                  A  1843    	DB	70
00000F 47                  A  1844    	DB	71
000010 48                  A  1845    	DB	72
000011 00                  A  1846    	DB	0
                           A  1847    	SEGMENT CODE
                           A  1848    ;  150	
                           A  1849    ;  151	void machine_set_vsync (BOOL vsync)
                           A  1850    ;  152	{
0003F9                     A  1851    _machine_set_vsync:
                           A  1852    .DEFINE "_machine_set_vsync"
                           A  1853    
                           A  1854    .VALUE _machine_set_vsync
                           A  1855    
                           A  1856    .CLASS 2
                           A  1857    
                           A  1858    .TYPE 65
                           A  1859    
                           A  1860    .ENDEF
                           A  1861    
                           A  1862    .BEGFUNC "machine_set_vsync",152,"_machine_set_
                           A  1863    
                           A  1864    .LINE 152
                           A  1865    
                           A  1866    .DEFINE "vsync"
                           A  1867    
                           A  1868    .CLASS 65
                           A  1869    
                           A  1870    .VALUE 6
                           A  1871    
                           A  1872    .TYPE 12
                           A  1873    
                           A  1874    .ENDEF
                           A  1875    
0003F9 DDE5                A  1876    	PUSH	IX
0003FB DD210000 00         A  1877    	LD	IX,0
000400 DD39                A  1878    	ADD	IX,SP
                           A  1879    ;  153		if (vsync==TRUE)
                           A  1880    .LINE 153
                           A  1881    
000402 DD7E06              A  1882    	LD	A,(IX+%6)
000405 FE01                A  1883    	CP	A,%1
000407 20 10               A  1884    	JR	NZ,L_28
                           A  1885    ;  154			set_vector(PORTB1_IVECT, machin
                           A  1886    .LINE 154
                           A  1887    
000409 01 00 00 00         A  1888    	LD	BC,_machine_vblank_handler
00040D C5                  A  1889    	PUSH	BC
00040E 01320000            A  1890    	LD	BC,50
000412 C5                  A  1891    	PUSH	BC
000413 CD 00 00 00         A  1892    	CALL	_set_vector
000417 C1                  A  1893    	POP	BC
000418 C1                  A  1894    	POP	BC
000419                     A  1895    L_28:
                           A  1896    .LINE 155
                           A  1897    
000419 DDF9                A  1898    	LD	SP,IX
00041B DDE1                A  1899    	POP	IX
00041D C9                  A  1900    	RET	
                           A  1901    
                           A  1902    
                           A  1903    ;**************************** _machine_set_vsyn
                           A  1904    ;Name                         Addr/Register   S
                           A  1905    ;_machine_vblank_handler             IMPORT  --
                           A  1906    ;_set_vector                         IMPORT  --
                           A  1907    ;vsync                                 IX+6    
                           A  1908    
                           A  1909    
                           A  1910    ; Stack Frame Size: 9 (bytes)
                           A  1911    ;       Spill Code: 0 (instruction)
                           A  1912    
                           A  1913    
                           A  1914    .ENDFUNC "machine_set_vsync",155,"_machine_set_
                           A  1915    	XREF _set_vector:ROM
                           A  1916    	XREF _strcpy:ROM
                           A  1917    	XREF _exec16:ROM
                           A  1918    	XREF _machine_vblank_handler:ROM
                           A  1919    	XREF _f_lseek:ROM
                           A  1920    	XREF _f_write:ROM
                           A  1921    	XREF _f_read:ROM
                           A  1922    	XREF _f_close:ROM
                           A  1923    	XREF _f_open:ROM
                           A  1924    	XREF __imulu:ROM
                           A  1925    	XREF __lmulu:ROM
                           A  1926    	XREF __stoiu:ROM
                           A  1927    	XREF __itol:ROM
                           A  1928    	XREF __imul_b:ROM
                           A  1929    	XDEF _machine_set_vsync
                           A  1930    	XDEF _machine_read_write_disk
                           A  1931    	XDEF _machine_warm_boot
                           A  1932    	XDEF _machine_set_warmboot_image
                           A  1933    	XDEF _machine_start
                           A  1934    	XDEF _machine_init
                           A  1935    	XDEF _machine_mount_disk
                           A  1936    	XDEF _machine_save_image
                           A  1937    	XDEF _machine_load_image
                           A  1938    	XDEF _machine_vsync
                           A  1939    	XDEF _machine_vsync_address
                           A  1940    	XDEF __secsize
                           A  1941    	XDEF _wb_bank
                           A  1942    	XDEF _szWarmBootImage
                           A  1943    	XDEF _disks
                           A  1944    	XDEF _mbase
                           A  1945    	XDEF _ram
                           A  1946    	END


Errors: 0
Warnings: 0
Lines Assembled: 1947
