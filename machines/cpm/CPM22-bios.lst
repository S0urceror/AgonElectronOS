# file opened: CPM22-bios.asm
  1   0000              MEM	EQU	62		;for a 62k system (TS802 TEST - WORKS OK).
  2   0000              CBASE EQU (MEM-7)*1024
  3   0000
  4   0000              ; BLOAD header
  5   0000 FE               db 0x0fe
  6   0001 00 F2 12 F5      dw BEGIN, ENDADR, START_BASIC
  6   0005 00 F2
  7   0007
  8   0007                  ORG 0F200h
  9   F200              BEGIN:
 10   F200              START_BASIC:
 11   F200              ;
 12   F200              ;**************************************************************
 13   F200              ;*
 14   F200              ;*        B I O S   J U M P   T A B L E
 15   F200              ;*
 16   F200              ;**************************************************************
 17   F200              ;
 18   F200 C3 33 F2     BOOT:	JP	_BOOT
 19   F203 C3 3F F2     WBOOT:	JP	_WBOOT
 20   F206 C3 5D F2     CONST:	JP	_CONST
 21   F209 C3 64 F2     CONIN:	JP	_CONIN
 22   F20C C3 69 F2     CONOUT:	JP  _CONOUT
 23   F20F C3 90 F2     LIST:	JP  _LIST
 24   F212 C3 91 F2     PUNCH:	JP  _PUNCH
 25   F215 C3 92 F2     READER:	JP  _READER
 26   F218 C3 6F F2     HOME:	JP  _HOME
 27   F21B C3 CC F2     SELDSK:	JP	_SELDSK
 28   F21E C3 95 F2     SETTRK:	JP  _SETTRK
 29   F221 C3 9A F2     SETSEC:	JP  _SETSEC
 30   F224 C3 9F F2     SETDMA:	JP  _SETDMA
 31   F227 C3 76 F2     READ:	JP  _READ
 32   F22A C3 7A F2     WRITE:	JP  _WRITE
 33   F22D C3 A4 F2     PRSTAT:	JP  _PRSTAT
 34   F230 C3 A6 F2     SECTRN:	JP  _SECTRN
 35   F233              ;
 36   F233              ;*
 37   F233              ;******************   E N D   O F   C P / M   *****************
 38   F233              ;*
 39   F233
 40   F233              ; IMPLEMENTATION FOR ELECTRON OS by S0urceror
 41   F233              _BOOT:
 42   F233 21 DA F2     	ld hl, SIGNON
 43   F236              _BOOT_MSG_NEXT
 44   F236 7E           	ld a, (hl)
 45   F237 A7           	and a
 46   F238 28 05        	jr z, _WBOOT
 47   F23A 23           	inc hl
 48   F23B 5B           	DB 0x5b ; .LIL
 49   F23C CF           	RST 08h
 50   F23D 18 F7        	jr _BOOT_MSG_NEXT
 51   F23F              	;
 52   F23F              _WBOOT:
 53   F23F                  ; load CCP+BDOS
 54   F23F DD 21 02 00  	ld ix, 00002h ; eos_machine_reload_warmboot_images
 55   F243 5B               DB 0x5b ; .LIL
 56   F244 FF               RST 38h
 57   F245                  ; set base variables
 58   F245 21 00 00     	ld hl,0
 59   F248 22 ED F2     	ld (_TRK),hl
 60   F24B 22 EF F2     	ld (_SEC),hl
 61   F24E AF           	xor a
 62   F24F 32 03 00     	ld (0x0003),a ; IOBYTE
 63   F252                  ; replace BOOT with WBOOT
 64   F252 21 03 F2     	ld hl, WBOOT
 65   F255 22 01 00     	ld (0x0001),hl
 66   F258                  ; Start CCP - CP/M command processor
 67   F258 0E 00            ld c, 0 ; default user 0 / drive 0
 68   F25A C3 00 DC         jp CBASE
 69   F25D              _CONST:
 70   F25D 5B               DB 0x5b ; .LIL
 71   F25E E7               RST 20h
 72   F25F A7           	and a
 73   F260 C8               ret z
 74   F261 3E FF            ld a, 0ffh
 75   F263 C9               RET
 76   F264              _CONIN:
 77   F264 5B               DB 0x5b ; .LIL
 78   F265 D7               RST 10h
 79   F266 38 FC            jr c, _CONIN
 80   F268 C9               RET
 81   F269              _CONOUT:
 82   F269 F5           	push af
 83   F26A 79           	ld a, c
 84   F26B 5B           	DB 0x5b ; .LIL
 85   F26C CF           	RST 08h
 86   F26D F1           	pop af
 87   F26E C9           	RET
 88   F26F              _HOME:
 89   F26F F5           	push af
 90   F270 AF           	xor a
 91   F271 32 ED F2     	LD (_TRK),A
 92   F274 F1           	pop af
 93   F275 C9           	RET
 94   F276
 95   F276              ; combined read/write modeled after phydio msx bios call
 96   F276              _READ:
 97   F276 A7           	AND A ; clear the carry flag
 98   F277 C3 7B F2     	JP _PHYDIO
 99   F27A              _WRITE:
100   F27A 37               SCF ; set the carry flag
101   F27B              _PHYDIO:
102   F27B F5           	push af ; store carry flag
103   F27C CD B6 F2         call calc_logical_sector_nr ; result in DE = (_TRK)*(dpb)+(_SEC)
104   F27F F1           	pop af  ; restore carry flag
105   F280 2A F1 F2     	ld hl, (_DMA)
106   F283 0E 00            ld c, 0 ; 0xf9 is double-sided, 80 track, 9 sector, 720k
107   F285 06 01            ld b, 1 ; 1 sector
108   F287 3E 00        	ld a, 0 ; drive A:, set to 0 without destroying carry
109   F289 DD 21 00 00  	ld ix,00000h ; eos_machine_read_write_disk
110   F28D 5B               DB 0x5b ; .LIL
111   F28E FF               RST 38h ; returns error code in A or 0 when okay
112   F28F C9               RET
113   F290
114   F290              _LIST:
115   F290 C9           	RET
116   F291              _PUNCH:
117   F291 C9           	RET
118   F292              _READER:
119   F292 3E 1A        	LD A, 26 ; return CTRL-Z
120   F294 C9           	RET
121   F295              _SETTRK:
122   F295 ED 43 ED F2  	LD (_TRK),BC
123   F299 C9               RET
124   F29A              _SETSEC:
125   F29A ED 43 EF F2  	LD (_SEC),BC
126   F29E C9               RET
127   F29F              _SETDMA:
128   F29F ED 43 F1 F2  	LD (_DMA),BC
129   F2A3 C9               RET
130   F2A4              _PRSTAT:
131   F2A4 AF           	XOR A
132   F2A5 C9           	RET
133   F2A6              _SECTRN:
134   F2A6 60 69        	LD HL,BC
135   F2A8 C9               RET
136   F2A9              ;
137   F2A9              ; Multiply 16-bit values (with 16-bit result)
138   F2A9              ; In: Multiply BC with DE
139   F2A9              ; Out: HL = result
140   F2A9              ;
141   F2A9              Mult16:
142   F2A9 78               ld a,b
143   F2AA 06 10            ld b,16
144   F2AC              Mult16_Loop:
145   F2AC 29               add hl,hl
146   F2AD CB 21            sla c
147   F2AF 17               rla
148   F2B0 30 01            jr nc,Mult16_NoAdd
149   F2B2 19               add hl,de
150   F2B3              Mult16_NoAdd:
151   F2B3 10 F7            djnz Mult16_Loop
152   F2B5 C9               ret
153   F2B6
154   F2B6              calc_logical_sector_nr:
155   F2B6 21 00 00     	ld hl, 0
156   F2B9 ED 4B ED F2  	ld bc, (_TRK)
157   F2BD ED 5B 83 F3  	ld de, (dpb)
158   F2C1 CD A9 F2     	call Mult16
159   F2C4 ED 4B EF F2  	ld bc, (_SEC)
160   F2C8 09           	add hl, bc
161   F2C9 54 5D        	ld de, hl
162   F2CB C9           	ret
163   F2CC
164   F2CC              _SELDSK:
165   F2CC F5           	push af
166   F2CD A7           	and a
167   F2CE 20 05        	jr nz, _seldsk_nodrive
168   F2D0 21 F3 F2         LD HL,drive0
169   F2D3 F1           	pop af
170   F2D4 C9               RET
171   F2D5              _seldsk_nodrive:
172   F2D5 21 00 00     	ld hl, 0
173   F2D8 F1           	pop af
174   F2D9 C9           	ret
175   F2DA
176   F2DA              SIGNON:
177   F2DA 0D 0A 36 32  	DB "\r\n62k - CP/M 2.2\r\n",0
177   F2DE 6B 20 2D 20
177   F2E2 43 50 2F 4D
177   F2E6 20 32 2E 32
177   F2EA 0D 0A 00
178   F2ED              ; variables
179   F2ED              ;
180   F2ED 00 00        _TRK: DW 0
181   F2EF 00 00        _SEC: DW 0
182   F2F1 00 00        _DMA: DW 0
183   F2F3
184   F2F3
185   F2F3              drive0:
186   F2F3 00 00        	DW	0	;Address of sector translation table
187   F2F5 00 00 00 00  	DW	0,0,0	;Used as workspace by CP/M
187   F2F9 00 00
188   F2FB 03 F3        	DW	dirbuf	;Address of a 128-byte sector buffer; this is
189   F2FD              			;the same for all DPHs in the system.
190   F2FD 83 F3        	DW	dpb	;Address of the DPB
191   F2FF              			;giving the format of this drive.
192   F2FF 92 F3        	DW	csv	;Address of the directory checksum vector
193   F301              			;for this drive.
194   F301 12 F4        	DW	alv	;Address of the allocation vector
195   F303              			;for this drive.
196   F303
197   F303              ; every disk the same
198   F303              dirbuf:
199   F303 00 00 00...  	DS 128
200   F383
201   F383              dpb:
202   F383 00 04        	DEFW	1024	;Number of 128-byte records per track
203   F385 05           	DEFB	5	;Block shift. 3 => 1k, 4 => 2k, 5 => 4k....
204   F386 1F           	DEFB	31	;Block mask. 7 => 1k, 0Fh => 2k, 1Fh => 4k...
205   F387 01           	DEFB	1	;Extent mask, see later
206   F388 FF 07        	DEFW	2048-1	;(no. of blocks on the disc)-1
207   F38A FF 01        	DEFW	512-1	;(no. of directory entries)-1
208   F38C F0           	DEFB	0xf0	;Directory allocation bitmap, first byte
209   F38D 00           	DEFB	0x00	;Directory allocation bitmap, second byte
210   F38E 80 00        	DEFW	512/4	;Checksum vector size, 0 for a fixed disc
211   F390              			;No. directory entries/4, rounded up.
212   F390 01 00        	DEFW	1	;Offset, number of reserved tracks
213   F392
214   F392              ; per disk a separate CSV and ALV
215   F392              csv:
216   F392 00 00 00...  	DS 128
217   F412              alv:
218   F412 00 00 00...  	DS 256
219   F512
220   F512              ENDADR:
# file closed: CPM22-bios.asm
